Changes for vile 9.9 (released ??? ??? ?? ????)

 20211205 (v)
	> Lois Mansot
	+ corrected range for &random function.
	+ move the reframe_cursor_position() in update() to ensure that $cwline
	  is shown correctly when viewing [Variables] while showvariables is
	  set.
 	> Mark Robinson:
	+ modify c-filt.c
	  + include the quote chars in the literal colouring for C/C++/Java/etc
	    to make it the same as most other syntax highlighting
	  + add backquote "`" as a quoting character for JavaScript, e.g., for
	    multi-line quotes.
	  + highlight embedded "${xxx}" markers in JavaScript strings using the
	    Ident2 color.
	+ modify sh-filt.l
	  + improve parsing of the beginning of here-document to allow for
	    here-documents piped to programs, e.g.,
	    	cat <<EOF | pr
		something
		EOF
	    or
	    	cat <<EOF && date
		something
		EOF
	  + do not treat "#" as a comment marker if it is adjacent to nonblank
	    text.
 	> Stephan Schulz:
	+ add popup-choices mode (Savannah #58999)
	> Tom Dickey:
	+ updated plink.sh, from xterm, to work around poor performance of gcc
	  on Fedora.
	+ updated test-package scripts to work with the changes for makefile
	  and perl-scripts, e.g., by adding --datadir option.
	+ change makefile.in use of datadir to not include "/vile", allowing
	  pkgsrc to omit patch for this.
	+ modify perl scripts to use /usr/bin/env to locate the perl program,
	  and eliminate sinstall.sh
	+ modify curses-driver to support italics, e.g., as in ncurses 6.
	+ apply Xaw header-fix for XawPlus, neXtaw and Xaw3dxft.
	+ use Xaw3d menu-headers for x11vile.h and x11menu.c (FreeBSD #186420).
	+ replace Header keywords with Id, to make Git-snapshots match.
	+ continue development of xftplain.c (--enable-freetype).  The current
	  driver is able to display a single TrueType font using Xft.  The
	  menu entries for the bitmap-fonts are replaced by a single menu with
	  sizes.
	  Some of the remaining issues:
	  + provide conversion for X displays other than 24-bit TrueColor
	  + implement fallback fonts, i.e., --enable-fontsets
	+ modify configure script to check for ssp library, needed for some
	  misconfigured libraries when cross-compiling to MinGW.
	+ fix a case in vile-manfilt where cur_line may not have been allocated
	  before first use.
	+ update configure script to work with _Noreturn changes in ncurses
	  20210320 development version.
	+ modify makefile.in, wrapping cd commands in a subshell to work around
	  "jobs" misfeature of pmake.
	+ improve c-filt.c support for JavaScript
	  + handle ranges, i.e., to avoid stopping on "/"
	  + check for regex after ":"
	  + add m,s,u,y to permissable flags ending regex
	+ quoting-fixes in autoconf macros, per shellcheck warnings.
	+ add check for 'U' in read_quoted() needed to make ^VUxxxx work.
	+ modify lins_chars() to handle a case where a script inserts a UTF-8
	  character (report by Thomas Dupond).
	+ modify configure/makefiles to support ".PHONY" feature.
	+ change configure/makefiles to use ARFLAGS rather than AR_OPTS
	+ change configure --with-warnings to --enable-warnings for consistency
	  with other configure scripts, using recent changes in that to filter
	  gcc -Werror options to avoid breaking configure checks.
	+ fix a few build problems with --disable-extensions
	+ split-out x11plain.c, to start work on TrueType font support in xvile
	+ modify configure script to allow clang to support loadable filters,
	  since recent configurations work.
	+ add/fix NetBSD pkgsrc-files for 9.8u
	+ update FreeBSD package-files for 9.8u
	+ update config.guess, config.sub

 20200517 (u)
	> Brendan O'Dea:
	+ add smartcase mode (prompted by suggestion by Marc Simpson).
	> Michael von der Heide
	+ modify vile-spell-filt to allow for umlauts in UTF-8
	> Tom Dickey:
	+ add "install-keywords" and "uninstall-keywords" targets to the
	  top-level and filters makefiles.
	+ prove separate a "nmake" highlighter from "make", to color
	  conditional directives and handle special cases of trailing "\".
	+ modify winvile.iss to make the 64-bit installers more distinct from
	  the 32-bit installers.
	+ enable registry-lookup as getenv fallback for WinVile64
	+ modify nmakemode:
	  + allow for whitespace after "!" in conditional lines
	  + ignore case when matching keywords
	+ fix some issues found with Coverity.
	+ quiet a few gcc9 warnings
	+ correct size-parameter of ZeroMemory calls in ntwinio.c
	+ resave SVG-files with Inkscape 0.92.4 (5da689c313, 2019-01-14), to
	  accommodate version-creep.
	+ improved configure macros to lessen unused-variable warnings in
	  config.log
	+ workaround in configure checks for ncurses vs xcode's c99 "-W" option
	+ fix - python filter should recognize triple single-quoted string
	  (report/patch by Marc Simpson).
	+ fix typos reported by codespell.
	+ add null-pointer checks for continue-search and reverse-search to
	  handle the case where a pattern string was given, but it failed to
	  compile (report by Marc Simpson).
	+ improve configure script for MacOS port:
	  + check for X11 headers in /usr/X11, reflecting Apple's removal of
	    of /usr/include and /usr/include/X11
	  + suppress -Winline
	  + cleanup *.dSYM directories
	  + don't add gcc/clang options for c89/c99 wrappers which cannot tell
	    what version of gcc/clang they hide.
	+ add tpumode, separating it from dclmode because the keywords differ.
	  also add tpu syntax filter, since syntax differs.
	+ modified a configure-macro to appease autoheader-252.
	+ switch back to the original buffer after displaying result of the
	  show-marks command in "[Named Marks]" (report/patch by Marc Simpson).
	+ modify message when setting a mark in "[Named Marks]" to show that it
	  is ignored (report by Marc Simpson).
	+ regenerate the doc-files from html, using links2 2.14 in Debian 9.
	  also reformat the html files.
	+ trim some unwanted blanks in vile.hlp, overlooked in converting
	  to html (report by Marc Simpson).
	+ add "go" and "typescript" majormodes.
	+ fix a loop-limit in manfilt.c for ANSI CUP.
	+ clone pl-filt.c as pl6filt.c to support perl6, added corresponding
	  "perl6" mode (discussion with Steve Lembark).
	+ add a limit-check in reallyEditMiniBuffer to handle a case where
	  mini-edits clear the working buffer, including the padding (Savannah
	  #56627).
	+ fix no-return warnings from libXt 1.2.0 headers
	+ updated "rev=made" to "rel=author" in html-files.
	+ add configure check for handling of "const" with X Toolkit library
	+ improved configure macros:
	  CF_GNU_SOURCE, CF_INSTALL_OPTS, CF_INSTALL_OPT_S, CF_LD_RPATH_OPT,
	  CF_POSIX_C_SOURCE, CF_VA_COPY, CF_XOPEN_SOURCE, mainly to solve
	  two problems:
	  + non-POSIX use of predefined symbols on BSD platforms
	  + an install option was needed to preserve timestamps
	+ add html meta tags to atr2html for generator and charset.
	+ update gnreight.h from Debian/testing libc6 2.28-6 
	+ add FreeBSD package-files to help with maintaining (FreeBSD #234527,
	  FreeBSD #234528).  Note that because of the distinfo files, those
	  will always be one patch behind.
	+ update config.guess, config.sub

 20181112 (t)
	> Adam Denton:
	+ fix a typo in tcap.h (Savannah #52872).
	> Jeff Morriss:
	+ use strncpy() rather than memcpy() for copying hashed key from
	  crypt(), to work with Fedora 28 which does not necessarily use a
	  fixed-size buffer.
	> Wayne Cuddy:
	+ modify x11.c to avoid clearing the window manager flags that control
	  focus behavior, to work with ctwm.
	> Tom Dickey:
	+ add WinVile64 package script for Inno Setup.
	+ show "win64" for $os symbol if built for 64-bit Windows.
	+ add ifdef in winvile.iss to accommodate changes with Inno Setup 5.6.1
	+ use GetModuleFileNameEx() in preference to looking for winvile's
	  registry keys or the PATH when finding the executable path for
	  the "-Or" option.
	+ improve coloring of "\f" font markers in the nroff filter.
	+ fix a mis-setting in api.c from 9.8q cleanup.
	+ document winvile registry settings in the help-file.
	+ create symbolic links for the utility program's manual pages, point
	  to the base manpage.
	+ document the utility programs and scripts which normally are packaged
	  in the manual page.
	+ if $VILE_LIBDIR_PATH is set, prefer that in vile-libdir-path
	+ corrected glob expression for vile-libdir-path
	+ several fixes using Visual Studio 2017 code analysis, including
	  + w32cmd.c, correct if-statement for IsDialogMessage call
	  + w32misc.c, correct size of allocation for buffer
	  + ensure no leak on failed realloc 
	  + modify casts to avoid truncation
	  Some parts of the analysis are false positives; it appears to have
	  problems in the flow analysis for reporting uninitialized values and
	  dereferencing null pointers.  In particular, it does not understand
	  the idiom for reallocating an array of types.
	+ build-fix for Visual Studio 2012 and later: the "FILE" struct is
	  opaque.
	+ use registry value for PaddedBorderWidth in winvile to account for
	  misleading results from GetSystemMetrics introduced by Vista.
	+ modify makefile.wnt to allow build with Visual Studio 2012 and later,
	  which omit the Win32.mak file.
	+ fix a couple of unescaped "?" in suffixes for majormodes, e.g., in
	  mvmnmode.
	+ add vcproj and vcxproj majormodes.
	+ add a "report" target in makefile.wnt to show the symbols used in
	  a build to help troubleshoot upgrades to newer Visual Studio.  For
	  instance, it is possible to build using Visual Studio Express 2012
	  with Windows SDK 7.1 by setting APPVER to "5.01".
	+ reorder a comparison in regmatch() to avoid indexing past limits in
	  some cases of multibyte characters.
	+ add a check in set_vattrs() to ensure loop limit is greater than zero
	  to handle a boundary case with double-width characters.
	+ fix or work around gcc8 warnings.
	+ improve initialization of hashed-key for crypt() using memset() on
	  the buffers rather than assuming the hash is the documented length.
	  Even with this, valgrind warns about buffer mismanagement within
	  libcrypt.so.
	+ check for _nc_free_tinfo() for leak-checking with ncurses' tinfo
	  library.
	+ modify perl/ruby filters to ensure the in-memory file ends with nul.
	+ add filters for yaml, rust-modes to develop for a tutorial.
	+ improve iss-filt.l, handling named constants such as {app}.
	+ update iss.key, e.g., setup-directives and runtime functions.
	+ compiler-warning fixes for gcc 7.2.1 with SuSE.
	+ regenerate doc/*.doc from Debian 7 to Debian 8; the table-width
	  changed from links 2.7 to 2.8
	+ add dummy "]]" in sh-filt.l to work around breakage with flex 2.6.1,
	  which insists on preprocessing C source using m4.
	+ modify character class assumed for tags, to check for graphic
	  characters.  Previously that used qident (cf: 9.7g), which did not
	  allow for dots in filenames which could be present in a ctags file if
	  it were generated using "ctags --extra=+f *" (Savannah #51774).
	+ update ftp site url
	+ improved configure macros:
	  CF_ADD_CFLAGS, CF_ADD_INCDIR, CF_BUILD_CC, CF_CC_ENV_FLAGS,
	  CF_CURSES_CPPFLAGS, CF_CURSES_FUNCS, CF_CURSES_LIBS, CF_FIND_LINKAGE,
	  CF_GCC_WARNINGS, CF_GNU_SOURCE, CF_LARGEFILE, CF_MAKEFLAGS,
	  CF_MKSTEMP, CF_NCURSES_CONFIG, CF_NCURSES_VERSION, CF_POSIX_C_SOURCE,
	  CF_PROG_EXT, CF_PROG_GROFF, CF_SIZECHANGE, CF_STRUCT_TERMIOS,
	  CF_TRY_XOPEN_SOURCE, CF_WITH_ICON_THEME, CF_WITH_MAN2HTML,
	  CF_XOPEN_CURSES, CF_XOPEN_SOURCE, CF_X_ATHENA_CPPFLAGS
	+ modify ti-filt.l to allow hexadecimal, as per X/Open Curses
	  documentation.  This is different from termcap, which (like terminfo)
	  supports octal and decimal numbers.
	+ build-fixes for Visual Studio 2015
	+ build-fixes to allow test-compile with ActiveState Perl 5.24.1, which
	  does not work with winvile because its DLL does not provide
	  COM entrypoints, e.g., CoTaskMemFree and CoRegisterClassObject
	+ update config.guess, config.sub

 20161217 (s)
	> Brendan O'Dea:
	+ add command-line parsing for "--" token, assumed by visudo in the
	  1.8.12 - 1.8.16 changes (report by Wayne Cuddy).
	> Tom Dickey:
	+ recompute majormode order when "after", "before" or "qualifiers" is
	  modified for a majormode.
	+ add yamlmode (discussion with Steve Lembark)
	+ modify DSTRING definition in lex-filter to handle continuation lines.
	+ modify cfgmode to reduce false-matches with random ".cfg" files.
	+ improve ps syntax filter
	  + interpret %%BeginData / %%EndData keywords
	  + interpret %%BeginPreview / %%EndPreview keywords
	+ add ".mcrl2" as suffix for mcrlmode.
	+ fixes from test-script: conf, hs, nr, rc, rcs, txt, xq, xml
	+ improved regression test-script to check for places where the syntax
	  filter might have mixed buffered- and unbuffered-calls in the same
	  state, causing tokens in the markup to "move".
	+ remove a statement from flt_putc in the standalone filters that
	  converted a bare ^A to ^A?.
	+ remove escaping from digraphs.rc, since change in 9.7zg made that
	  both unnecessary and incorrect (reports by Marc Simpson, Brendan
	  O'Dea).
	+ improve tcl syntax filter
	  + color backslash-escapes in double-quotes.
	  + add rules to handle regexp and regsub regular expressions.  This
	    does not yet handle -regexp switch cases.
	  + add call to flt_bfr_error to flag unbalanced quotes here and in
	    a few other filters.
	  + modify newline patterns to allow for cr/lf endings in continuations
	  + add special case for literals like "{\1}" and "{\\1}".
	  + add special case for html entities such as "{&#123;}" and "{&foo;}"
	+ improve sh syntax filter
	  + allow quoted strings within '${' parameter, a detail that can
	    happen with ksh brace groups (report by j.  van den hoff).
	  + handle ksh's "ANSI C quotes", i.e., "$'xxx'" using single quotes
	    after a dollar sign.
	  + use the ksh ("-K") option for bashmode and zshmode syntax.
	  + interpret "$name" within '${' parameter
	  + don't warn for inline-here documents
	  + handle special case where matching tag for a here-document is on
	    the same line as a closing ")" in $(xxx) command.
	  + highlight ksh's "[[", "((", "$((" bracketing like "{".
	  + handle ksh's "((" and "$((" arithmetic expressions.
	  + handle ksh's base#value numbers
	+ improve perl syntax highlighter:
	  + fix state used to guess where a pattern might occur, e.g., after
	    an "if" keyword with no preceding operator to account for line
	    breaks.
	  + correct a check for illegal numbers, which flagged hexadecimal
	    numbers containing "e".
	  + distinguish special case of "format =" vs "format =>".
	  + allow pod to begin without a preceding blank line, but warn.
	  + allow for case where pod mode is turned on/off with only one blank
	    line between the directives.
	  + check for simple patterns that may follow operators such as "map".
	  + allow '$', '+' or '&' as a quote or substitution delimiter
	  + allow angle brackets for quotes after 'q', etc.
	  + fix highlighting when square-brackets are used as delimiters in a
	    perl substitution, e.g., s[foo[bar]xxx][yyy]
	+ quiet some unnecessary compiler warnings with glibc > 2.20 by adding
	  _DEFAULT_SOURCE as needed.
	+ improve version-comparison for "new" flex to allow for 2.6.0, and
	  accept that for built-in filters.  Also modify filters/mk-2nd.awk
	  to work with "new" flex ifdef's to ignore yywrap (Debian #832973).
	+ correct long-name for filename-ic mode (report Marc Simpson).

 20160727 (r)
	> Marc Simpson:
	+ correct a typo in skipblanksb() which caused up-paragraph "{{" to
	  get stuck (Savannah #47211).
	> Tom Dickey:
	+ fix an off-by-one in argument list for wvwrap vs winvile that broke
	  edit-with operation from file explorer.
	+ correct expression for QIDENT in rpm-filt.l, sh-filt.l, which could
	  match multiple tokens rather than a single one and interfere with
	  states for here-document.
	+ use CF_PROG_LINT, which checks for cppcheck.  Alternatively, this
	  works, though the "$(LIBS)" used in the lint-rule has to be removed:
		export LINT=cppcheck
		export LINT_OPTS="--enable=all"
	+ add error-patterns for cppcheck.
	+ updates for configure macros
	+ CF_CC_ENV_FLAGS - don't limit the check to -I, -U and -D options,
	  since the added options can include various compiler options before
	  and after preprocessor options.
	+ CF_FUNC_DLSYM add braces around calls to CF_ADD_LIB which follow a
	  test "&&" operator since the macro uses multiple statements
	+ CF_LD_RPATH_OPT change FreeBSD to use -Wl,-rpath rather than -rpath
	  option.  According to FreeBSD #178732, either works since FreeBSD
	  4.x; however scons does not accept anything except the -Wl,-rpath
	  form.
	+ CF_LIB_PREFIX build-fixes for OS/2
	+ CF_WITH_MAN2HTML use configured shell
	+ CF_XOPEN_CURSES improve check, making it define NCURSES_WIDECHAR if
	  we happen to be building on a platform (such as OSX) where we do not
	  define _XOPEN_SOURCE or _XOPEN_SOURCE_EXTENDED
	+ CF_XOPEN_SOURCE build-fixes for OS/2
	+ modify configuration so that "--no-leaks" does not imply
	  "--with-trace", since that is not necessary when using valgrind.
	+ add null-pointer checks in vile-manfilt for some unusual erasures.
	+ promote $filename-ic to a global mode, using this to allow users to
	  do filename-completion on any system ignoring the case of filenames
	  (discussion on vile mailing list started by Marc Simpson).
	+ modify noautobuffer mode to update the "last" buffer when the user
	  jumps around, e.g., using ":e" or the "historical-buffer" toggle
	  (discussion on vile mailing list started by Hymie).
	+ add examples for which-exec and which-source to vile.hlp to show
	  what the popup-buffer might look like when a numeric parameter
	  precedes these commands.
	+ modify parsing of VILE_STARTUP_PATH to accept colon-separated list
	  (report by Chris Green).
	+ improve formatting of vile.hlp (report by Paul Fox).
	+ add mode "keep-position" to allow changing the behavior after
	  applying a command to a range, to better match the nvi (BSD) and
	  vi (Solaris) flavors (prompted by report by Marc Simpson). 
	+ reset "$_" before executing each top-level command (report by Marc
	  Simpson).
	+ improve workarounds for building with "new" flex, in particular the
	  change of return-type for yyget_leng() (report by Martin Ward).
	+ make special case when locating the copy of vile which was run, to
	  not warn and skip because it was found in a group-writable
	  directory (discussion with Steve Lembark).
	+ update config.guess, config.sub

 20150907 (q)
	> Brendan O'Dea:
	+ corrected initialization for Vileserv in vileperl.rc (report by
	  Chris Green).
	> Tom Dickey:
	+ add command-line options -u and -U to set $system-crlf variable
	  before the "unnamed" buffer is initialized.
	+ add $system-crlf to allow override of compiled-in default for "dos"
	  mode so that winvile can be told to create the "unnamed" buffer with
	  linefeed endings (Savannah #44773).
	+ add variable $system-name to show the name used in version message
	+ add checks after write-hook is run in case the script set $return to
	  anything except true or sortoftrue, or if the script set the buffer
	  to "view".  In either case, do not proceed to write the buffer
	  (report by Matthew White).
	+ modify prompts for register name to support name-completion, and
	  recognize "register" as a typed macro-parameter (prompted by
	  discussion with Wayne Cuddy).
	+ modify configure macros to use the configured shell rather than just
	  /bin/sh, to accommodate deprecation of non-POSIX shells such as that
	  used in Solaris.
	+ add configure option --with-man2html, use in generating vile-man.html
	+ modify wvwrap to ensure that it does not pass options to winvile
	  as filenames (Savannah #44774).
	+ update autoconf macros from ongoing work in lynx, ncurses and xterm
	  for testing ncurses6.
	+ fix special case of ^G toggling in minibuffer versus '\' escaping
	  (report by Wayne Cuddy).
	+ cleanup logic which sets DOT.o to the beginning of a line, to
	  ensure that the left-margin is used rather than just the first
	  position on a line.
	+ changes in 9.8p for global substitutions with "^" exposed at least
	  one place, e.g., in oneliner.c where DOT was moved to the next line
	  without ensuring that its offset was reset.  Review and amend several
	  other occurrences where DOT moves to next or previous line (report by
	  Jan Wells).

 20150201 (p)
	> from https://github.com/ricksladkey/vile (Rick Sladkey):
	  + check in ntconio.c if running in ConEmu, e.g., ConEmuPID variable
	    is set, and if so, allow its bold/italic extensions.
	  + modify ntconio.c to honor Unicode keyboard input.
	  + amend GetCurrentDirectory() buffer size for Unicode.
	> Tom Dickey:
	+ add configure check for stricmp, omitted from recent Cygwin.
	+ partial fix for recalling from history this command:
		'a,.s/$/;/
	  With the fix, one can edit the previous command, and issue minor
	  variations.
	+ improve suffix rules for mvn mode by allowing a version number in
	  the filename.
	+ improve ant, mvn modes to highlight user-defined tags, e.g., within
	  "${" and "}".
	+ update mvnmode keywords to maven 3.2.5
	+ modify vile-xml-filt to color property names according to the new
	  "xmlprops" table.
	+ update antmode keywords to ant 1.9.4, including a representative set
	  of property names.  The updated table also attempts to distinguish
	  between tasks and subtasks.
	+ add the more useful types/macros from c99 headers to c.key
	+ repaint all windows on an "unnamed" buffer if told to reread and
	  discard changes (report by Hymie on mailing list).
	+ modify logic used in global substitutions to ensure that "^" for
	  beginning of the line is matched only once (report by Wayne Cuddy).
	+ fix a few build problems with --disable-extensions
	+ modify configure macro CF_WITH_APP_DEFAULTS to check OSX-related
	  pathnames for MacPorts and Apple's variant.
	+ improve configure macro CF_SUBDIR_PATH, changing it to a loop, adding
	  /usr/pkg (NetBSD) and /opt/local (Mac OSX)
	+ update yacc.key for current byacc keywords.
	+ modify yaccfilt.l to handle escaped newlines in quoted strings.
	+ build-fix for xvile without multibyte support.
	+ add error patterns for bison and byacc.
	+ correct workaround in manfilt.c for bullet characters from 9.8g;
	  they were lost when using UTF-8 encoding.
	+ improve tcl-filt.l handling of single character between curly braces,
	  showing that as string-attribute.
	+ modify tcl-filt.l to handle square brackets quoted by curly braces
	  (report by Wayne Cuddy).

 20141002 (o)
	> Tom Dickey:
	+ fix some leaks, etc., reported by valgrind and Coverity.
	+ correct filtername setting for issmode, which used ini-filter.
	+ add ":" and "#" to ini-filter as aliases for "=" and ";"
	+ add desktop-mode, using ini-filter.
	+ revise ldel_chars() function to restore feature of backspacelimit
	  to delete newlines while backspacing.  This was lost in 9.5s changes
	  (Savannah #43291).
	+ add case to CF_XOPEN_SOURCE for Unixware, from lynx.
	+ modify configure script to define _NETBSD_SOURCE for Minix, because
	  its header files put the POSIX.1-2001 prototypes, such as isblank,
	  there.
	+ add vile-to-html, vile-libdir-path to uninstall rule
	+ modify configure script to supply default "-o" option for the install
	  program, since MINIX's does not provide a useful default.
	+ other tweaks to work around deficiencies in Ash's parser, e.g., not
	  counting tokens until after dequoting.
	+ modify configure script to avoid using "expr", fixing problem using
	  this with MINIX3.2, which uses Ash - a shell which omits the "<",
	  "<=", etc., comparison operators which POSIX specifies for "expr".
	+ CF_ADD_LIBS workaround in CF_X_TOOLKIT uses pkgconfig, whose files
	  generally are using incomplete dependencies - in turn introducing
	  lots of duplication.  filter out the duplicates.
	+ CF_CURSES_FUNCS improve workaround for weak-linkage, seems to fix
	  tests with NetBSD 6.1
	+ CF_X_ATHENA add --with-Xaw3dxft option
	+ CF_X_TOOLKIT add workaround for breakage in XQuartz upgrades
	+ update config.sub

 20140706 (n)
	> Brendan O'Dea:
	+ use INT2PTR and PTR2IV macros rather than an explicit cast in perl.xs
	  and ptypemap.
	> Tom Dickey:
	+ improve description of search-list for syntax filter keywords in
	  vile.hlp; add links/anchors to improve navigation in vile-hlp.html,
	  config.html and macros.html
	+ modify error-pattern to work with the GNU make 4.0 change to
	  quotes
	+ modify makemode mode-filename pattern to match BSDMakefile and
	  GNUMakefile
	+ add vile-to-html, vile-libdir-path
	+ modify manfilt.c to recognize aixterm-style SGR 90-97 as colors 8-15.
	+ correct off-by-one count in decoding "meta" markup from 9.8l changes
	  which did not work with external filters.
	+ add note in config.doc recommending ncursesw for screen option over
	  curses/ncurses, for UTF-8 support.
	+ modify DisableHook/EnableHook to let their return-value be usable as
	  the latch condition.
	+ if configure check for gcc -rdynamic option fails, fallback to the
	  built-in filter configuration.
	+ suppress -rdynamic option-check for clang, because its error
	  reporting is unreliable.
	+ correct logic in nextbuffer() when autobuffer mode is unset.  Similar
	  fix for prevbuffer() (report by Hymie on mailing list).
	+ modify test for stuttering in vile_op(), to check if a count precedes
	  the final letter in a command.  With this change,
	  	^All
	  stutters as before, making the command in terms of lines.  However
	  	^Al5l
	  will act on the next 5 characters.  Note that
	  	^Al1l
	  will act on a single character (Savannah #42147).
	+ fix a double-free in bclear(), when the buffer is marked noundoable
	  (report by Paul Fox).
	+ update config.guess, config.sub

 20140330 (m)
	> Kevin Buettner:
	+ add missing "break" in DATA() macro in x11.c from 9.8j changes.
	> Tom Dickey:
	+ fix configure check if curses.h is needed, by suppressing external
	  reference to vl_strncpy.
	+ build-fix for --disable-extensions by providing dummy set_tagsmode()
	+ modify [ShowFormatted] to also handle logmode the same as
	  typescript files
	+ modify makefile.wnt to show version-details in wvwrap.exe
	+ minor fix to make-hlp.pl, to complete underlining of project
	  hierarchy section of vile.hlp
	+ clarify in vile.hlp how to suppress "press any key to continue"
	  message in winvile when running external shell-commands.
	+ build-fix when configuring --with-external-filters when only flex
	  2.5.35 / 2.5.37 is available (report by Kevin Buettner).
	+ fix crash in winvile in "select-all" command (Savannah #41943).
	+ update gnreight.h from Debian/testing libc6 2.17-97
	+ update xvile.desktop with improvements from Fedora package.

 20140131 (l)
	> Derek Woolverton:
	+ add new keywords for C++11
	> Rick Sladkey:
	+ change initialization in ntconio.c to improve use with ConEmu, e.g.,
	  when the window is resized.
	> Tom Dickey:
	+ add version details to win32 executables.
	+ improve rpm spec-file filter:
	  + add checks for "%" markers in unexpected places, e.g., in comments.
	  + change %package to not begin quoted text; it should be a one-liner
	+ modify ^X-n to filter typescript files like vile-pager.
	+ fill in pod descriptions for undocumented perl modules.
	+ additional change for Savannah #37988 to update screen when removing
	  a newline which was inserted initially by the "o" command.
	+ modify mode-pathname for makemode to work with arbitrary level of
	  directory; it assumed something like "/usr/lib/pkgconfig".
	+ minor fix to tcap.c to restore colors after completing a loop which
	  turns off attributes.  The directory.pm script caused the driver to
	  reset reverse-video and bold, but the driver was restoring colors
	  only after the first reset.
	+ minor fixes for perl modules:
	  + correct off-by-one position of highlighting for spell.pm
	  + modify spell.pm to remember the last replacement made for a given
	    word and offer that as the first choice on followup changes.
	  + modify dirlist.pm to reposition the window on completion so that
	    the last lines written to the buffer will always be visible.
	  + modify hgrep.pm to set $search so that for instance, visual-matches
	    works.
	+ modify perl modules to use strict feature.
	+ add ".pp" to pasmode / Pascal and ".shtml" to htmlmode (suggested by
	  Radek Liboska).
	+ add requires/provides for Perl modules in vile.spec (suggested by
	  Radek Liboska).
	+ correct a sign-extension bug in column_sizes(), which caused
	  incorrect cursor-movement for some 8-bit encodings (report by Radek
	  Liboska).
	+ add still more keywords for C++11
	+ fix for 9.8j change to manfilt.c; reset the overstrike link to null
	  in erase_cell(), to avoid freeing memory twice.
	+ modify internal links of html documentation to fix linklint warnings
	+ fix most issues reported by rpmlint for package/vile.spec:
	  + add configure option "--disable-stripping"
	  + strip executables during install by adding "-s" normally
	  + make the wmconfig files non-executable
	  + update FSF address in several files
	+ modify -F option to ensure that output uses \n consistently for the
	  line-separator verus \r\n.
	+ minor fix to sh-filt.l's stripping of leading blanks in a here-
	  document.
	+ updated ftp-mirror to http://invisible-mirror.net/archives/vile
	+ add a new attribute markup, "M" for "meta" which is ignored by vile.
	  Modified filters to emit their command-line using this markup so
	  that applications can determine which filter was invoked when the -F
	  option is used to provided marked-up files.
	+ build-fixes to allow "new" flex 2.5.35 to be used to build the
	  various filter configurations, noting that the recommended
	  tool is still "reflex" (report by Joran Ahlback).
	+ add convile.nsi and minvile.nsi scripts to use for creating
	  installers from convile and minvile via cross-compiling.  NSIS is far
	  less capable than Inno Setup, so the latter still gives the
	  recommended packages.
	+ move ignoresuffix setting from cmode to global settings, i.e., to
	  use for other filetypes.
	+ modify tags logic to set "tagsmode" if it is defined, and assuming
	  that, to test the local check-modtime value, i.e., that managed via
	  the majormode to allow tags files to be selectively reloaded when
	  their content changes (discussion with Wayne Cuddy).
	+ modify sh-filt.l to recognize ksh93/bash here-strings, noting that
	  they are not standardized.
	+ review/improve tcl syntax highlighter (report by Wayne Cuddy):
	  + do not treat single-quote specially
	  + allow newlines in double-quotes
	  + recognize square brackets in double-quotes to denote nested
	    commands.
	  + fix ambiguity between "-option" and "-number".
	  + show sprintf-codes with string color.
	  + highlight "#" prefixing hexadecimal digits as a number.
	  + do not color args for unknown verbs.
	  + update keywords to tcl/tk 8.6.0
	+ add ".nsh" suffix to nsis mode.
	+ fix for "-F" option when filtered file has no syntax highlighting;
	  the MK variable was not set, causing getregion() to fail.
	+ update config.guess, config.sub

 20130707 (k)
	> Brendan O'Dea:
	+ correct a couple of places in api.c which used characters rather
	  than bytes, which made
		:%perldo s/^/X/
	  do the wrong thing for UTF-8 encoding.
	+ change perl.xs to use bullets in a few cases to work with newer
	  Perl's POD parser.  Also add a "back" tag (Debian #708027).
	+ improve configure script for perl by locating xsubpp by the same
	  process as the module is loaded, e.g., using @INC (prompted by
	  discussion of Gentoo #380741).
	> Tom Dickey:
	+ add "&regex-escape" function to allow a literal string to be assigned
	  to "$search" without confusion (discussion with Wayne Cuddy).
	+ add ".tmac" suffix to nrmode
	+ modify ins_anytime() to request a screen update on completion so that
	  temporary changes to the screen such as empty lines for the "o"
	  command will be undone if needed (Savannah #37988).
	+ add powershell mode
	+ convert non-generated html documentation to HTML4-strict; change
	  font-coloring to use css.
	+ amend change for Savannah #37806 to exclude buffers where the file
	  encoding is 8bit, fixing a mispositioning of the cursor, e.g., for
	  ISO-8859-2 encoding (report by Radek Liboska).
	+ add json mode

 20130414 (j)
	> Brendan O'Dea:
	+ correct warnings from pod2text
	> Tom Dickey:
	+ add configure options --enable-freetype and --enable-fontsets, to
	  support proposed refactoring of x11.c
	+ modify manfilt.c to interpret ANSI erase-line, insert/delete
	  character and inline cursor-movement controls.
	+ modify manfilt.c to improve parsing of SGR sequences, allowing for
	  expansion to simple cursor movement as would be used in line-editing
	  for bash and tcsh (prompted by discussion with Joel Winteregg).
	+ improve/fix ruby syntax highlighter:
	  + add missing logic needed to make binary numbers parse
	  + track curly-brace level in var_embedded().
	  + improve parsing/highlighting of %r{pattern}
	  + handle special token :`
	  + stop highlighting after __END__
	  + interpret extended mode for regular expressions, showing comments
	    in different color.
	  + corrected logic for here-document delimiter when it happens to be a
	    quoted string.
	  + recognize ruby 1.8's ?a syntax for ASCII character.
	  + accept floating point constant without decimal point.
	  + handle CR/LF endings for lines with here-document tags.
	  + improve parsing of embedded expressions in strings, e.g., "#{1+2}".
	  + improve parsing of extended-quoting, e.g., %|foo|
	  + add ruby.key as alias for rb.key, to simplify use of the filter
	    as a standalone program.
	  + add mode for special case of embedded-ruby used in Rails, call that
	    "erb" mode, activated by the "-e" option of the filter.
	+ apply consistent stylesheet and website links to html documentation.
	+ add commands to show bound commands ordered by the key to which they
	  are bound:
	  describe-all-keys,
	  describe-all-cmdmode-keys,
	  describe-all-insmode-keys,
	  describe-all-selmode-keys
	  (prompted by discussion with Chris Green).
	+ modify htmlfilt.l to highlight embedded php, improve its parsing
	  of embedded css.
	+ modify definition of istype() to ensure that it returns true only if
	  the character parameter is actually in the range 0..255 (Savannah
	  #38342).
	+ amend change made to alt-tabpos in 9.7u for multibyte characters to
	  make tab and other control characters work as they did before
	  (Savannah #37806).
	+ fixes for issues reported by Coverity:
	  + modify ctype-tables to allow for -1 as a character value, since
	    that may be used in CharAtDot().
	  + use setjmp/longjmp for recovering from fatal errors in lexers.
	  + undo change to wrap-word from 5.6t, allowing a parameter which is
	    interpreted as a number of spaces to append after the cursor when
	    the line is split.
	  + various minor resource leaks.
	+ start refactoring x11.c, making the current text-drawer x11plain.c
	+ merge/adapt Brendan's current scripts to add perl documentation
	  to the vile-common Debian package for test-builds.  This also makes
	  the ".xpm" file consistent with the desktop icons.
	+ add "divert" to m4 preamble to work with sendmail's ".mc" files.
	+ use shape-mask and correct visual depth for window-decoration icon
	  in xvile.
	+ the "-i" option is available in most filters now.  Ignore it when
	  checking for unknown options in the wrapper for external filters
	  (report by Wayne Cuddy).
	+ updates for configure script macros:
	  + add 3rd parameter to AC_DEFINE's to allow autoheader to run
	  + remove unused macros
	+ update config.guess, config.sub

 20120923 (i)
	> Tom Dickey:
	+ fix build for minvile, whose icon path was broken in 9.8h
	+ amend fix for Savannah #36801 to make a special case for the calls
	  via "execute-named-command" which limits the quoting to search
	  commands and shell-commands by testing the first character of the
	  command-line (report by Wayne Cuddy).
	+ update configure script to support --datarootdir option.
	+ improve dependencies for rpm package by adding extra patterns for
	  vile's mime.pl and plugins.pl scripts.
	+ improve ToggleMode macro, making it set the local value as ToggleList
	  does (report by Wayne Cuddy).

 20120807 (h)
	> Tom Dickey:
	+ document icon options in config.doc
	  NOTE: the meaning of the --with-icondir option changes with this
	  version; --with-pixmapdir replaces that usage, while --with-icondir
	  is used to support icon themes.
	+ update vile.mini.xpm to add 32x32 and 48x48 sizes.
	+ add configure --with-icon-name option.
	+ add iconName resource, which can override the compiled-in pixmap.
	+ revise xvile configure options with improved versions from xterm.
	+ add .png and .svg icons, for use in icon-themes.
	+ add fences to rpmmode.
	+ restore highlighting of xpmmode, lost in 9.8g changes.
	+ modify vile.spec to conditionally incorporate the perl features.
	  NOTE: this omits dict.pm due to limitations of the rpm program.
	+ improve pattern used for regular expressions in awk-filt.l
	+ improve check in c-filt.c for quoted strings to ensure that a
	  backslash is given for continuation-lines.
	+ modify ecrypt.c to reset seed/salt before each file, so that a set
	  of files can be decrypted with a wildcard.
	+ improved lex-filt.l:
	  + do not treat a line consisting only of whitespace as indented-code.
	  + amend CODE1 state to handle indented comments between patterns.
	+ modify initialization of [vileinit] to quote parameters passed from
	  the command-line, e.g., for the "-s" option so that embedded blanks
	  are retained (report by Greg McFarlane, Savannah #36801).
	+ modify hist_show() to return correct index for "#" buffer when
	  autobuffer mode is turned off (Savannah #36739).
	+ correct logic in special_formatter() for L_CURL case so that
	  expressions such as
		setv $modeline-format "%{&cat 'ignorecase is ' $ignorecase}"
	  work (patch by Adam Denton, Savannah #35288).
	+ corrected highlighting of continuation-lines for double-quoted
	  strings in awk, tcl filters (prompted by report by Wayne Cuddy).
	+ reduce sh.key to POSIX shell keywords and utilities.
	+ add zshmode and bashmode, for consistency.
	+ add kshmode, to address slight syntax differences between Korn
	  (ksh93) and Bourne shell scripts.
	+ add new command "derive-majormode", which is used to make a new
	  mode initially copying another mode's settings.
	+ improved sh-filt.l:
	  + "<<<" short-form here-document.
	  + add "-K" option to support Korn shell's "vnames", which allows one
	    to define a variable containing "." if there already exists a
	    variable consisting of the part before the ".".
	  + exclude backtic from a pattern in here-documents, which prevented
	    embedded backtic's from being recognized.
	  + extend the list of operators for brace substitution.
	+ use autoconf 2.52.20120310, to work around Intel 12.x compiler.
	+ add configure check for clang, to improve compiler warnings.
	+ build-fix for HP-UX 10.20 lex, which prototyped main() without params

 20120309 (g)
	> Tom Dickey:
	+ relax conditions for displaying saved message just before starting
	  full screen mode, to allow the default help-summary to show (report
	  by Paul Fox).
	+ modify logic for [vileinit] and [vileopts] buffers which are used
	  during startup, to first close their window if possible, eliminating
	  a message that interfered with other startup messages (report by
	  Paul Fox).
	+ improve insert-exec mode by filtering out characters which have
	  special meaning in insert-mode.
	+ add ToggleMode macro (prompted by question by Wayne).
	+ add complete.rc GetCompletion macro as an example of how to do
	  insert-completion.
	+ add "show-user-variables" command.
	+ implement "describe-$variables" command.
	+ add alias "describe-user-functions" for "describe-&functions"
	+ add alias "describe-state-variables" for "describe-$variables"
	+ add variables $get-at-dot, $get-it-all, $get-length and $get-offset
	  to simplify scripting of &get-completion and similar features.
	+ modify vilefilt.l to highlight functions using "-" character.
	+ add aliases &get-key, &get-motion, &get-sequence as more readable
	  names for &gtkey, &gtmotion and &gtsequence.
	+ add &get-completion function to support macros that can handle
	  name-completion in insert mode (prompted by mailing list discussion).
	+ reset video-attributes for linebreak when computing the left/right
	  scrolling offset, fixing a case from 9.8f which left stray highlights
	+ updated nsis.key
	+ modify conffilt.l to match leading keywords that may begin with a
	  leading punctuation mark, other than the existing comment markers or
	  brackets.
	+ modify nsis mode to ignore case of keywords.
	+ add -i option to most syntax filters to control whether keyword
	  matching is done ignoring case.  The exceptions are html, imake and
	  make, which use special logic for deciding which to use.
	  NOTE: this is an incompatible change which can affect user-defined
	  majormodes that use the affected filters.  However, presetting the
	  -i option on about a third of the syntax filters would be more
	  confusing than making this explicit in filters.rc
	+ modify configure script to support cross-compiling, tested with
	  cross-compiler to mingw using convile and minvile targets.
	+ add null-pointer checks for "nohl" fix in 9.8f, needed for the case
	  when no majormode is in effect.
	+ modify vile-manfilt to accept 0xb7 bullet character used in some
	  manpages.
	+ updates for configure macros CF_NCURSES_CONFIG, CF_XOPEN_SOURCE

 20111127 (f)
	> Tom Dickey:
	+ trim unneeded loader flags added in Mandriva 2010.2's rpmbuild, since
	  those prevent the loadable filters from linking.
	+ modify symlinking of manpages in vile.spec to avoid using absolute
	  links, since those may be removed in rpmbuild.
	+ change makefile.wnt to add WIDE knob to define UNICODE, and also for
	  the OLE configuration to use comsuppw.lib rather than comsupp.lib
	+ drop -G4 option from makefile.wnt, which was an optimization to favor
	  486 processors phased out in Visual C++ 5.0, and with 9.0 produces
	  a warning.
	+ change return type of TERM.setpal from void to int, since the return
	  value is used with the win32 platform.
	+ modify special case for "dos" setting in a submode introduced in
	  8.3q, recognizing "nodos" also.  This allows overriding a submode
	  that is previously defined, e.g., in modes.rc, by a user's .vilerc
	  (report by Wayne).
	+ correct "nohl" when used in a submode.  As a side-effect, vile frees
	  video attributes for the buffers, but in this special case it did not
	  limit the freeing to buffers using the majormode whose highlight
	  submode was turned off (report by Wayne).
	+ add force-empty-lines operator.
	+ add delete-empty-lines operator (request by Wayne).
	+ change tabstop within [Printable Chars] to keep the result within
	  80 columns.
	+ improved rpm syntax highlighter:
	  + modify number pattern to add dots and dashes for version numbers.
	  + match keywords in more places by checking for the name in %name and
	    %{name} patterns when the first match fails.
	  + add keywords %exclude, %makeinstall and %run_ldconfig
	+ add vile-pager to dpkg package script for vile.
	+ add ".pod" files to perlmode.
	+ change default in basic.key to Keyword for consistency.
	+ modify xresfilt.l to check for continuation-lines of comments.
	+ add "YI" capability to tc.key, per ncurses fix.
	+ add extra-colors settings for linenumber and linebreak, as well
	  as the normal "<" and ">" markers.
	+ modify makemode to use tabinsert, allowing notabinsert to be a
	  default in other mode (patch by Anthony Shipman).
	+ add erlang syntax highlighter and majormode (patch by Anthony
	  Shipman).
	+ add linebreak mode, like vim (request by Paul Van Tilburg).
	  This does NOT yet work with color highlighting, but does work with
	  wide-characters.
	+ fill in a missing chunk of logic for wrapping double-width characters
	  (report by Sukegawa Shigeyuki).
	+ modify debian/rules to work around a quoting problem in Brendan
	  O'Dea's build environment.
	+ fix a typo in help-file description of modeline (report by Wayne).
	+ adapt/use multi-package feature of Fedora rpm script.
	+ modify dpkg and rpm scripts to install lxvile.
	+ add build-dependency for dpkg test-script against libperl-dev
	+ several configure macro updates, from lynx/ncurses/tctest/xterm:
	  + CF_ANSI_CC_CHECK - do a sanity check on $CC; occasional users add
	    options directly to it rather than follow the standards by setting
	    $CFLAGS and/or $CPPFLAGS.
	  + CF_CURSES_CPPFLAGS - make checks for special libraries on hpux10
	    and sunos4 optional
	  + CF_CURSES_FUNCS - workaround for bug in gcc 4.2.1 (FreeBSD 8.1)
	    which caused part of test program to be omitted, i.e., when it saw
	    two return-statements in a row it omitted the _first_ one.  Also
	    add expression to pointer check to help FreeBSD's linker decide it
	    should be validated.  Just an assignment was not enough.
	  + CF_CURSES_LIBS - add check for NetBSD's otermcap
	  + CF_CURSES_HEADER - change order for curses.h / ncurses.h pairs to
	    put ncurses.h first, which will tend to provide the same #define's
	    as in CF_NCURSES_HEADER (report by Dennis Preiser).
	  + CF_CURSES_LIBS - make checks for special libraries on hpux10 and
	    sunos4 optional
	  + CF_CURSES_TERM_H - modify to avoid spurious check for
	    <curses.hterm.h> if there is no ncurses version.  Look for
	    ncurses's term.h anyway, to work around breakage by packagers who
	    separate ncurses' header files.
	  + CF_DISABLE_RPATH_HACK - fix garbled message
	  + CF_LD_RPATH_OPT - add cases for DragonFlyBSD and MirBSD
	  + CF_MAKEFLAGS - filter out GNU make's entering/leaving messages.
	    This only appeared when using the macro in a dpkg script, though it
	    should have in other cases.
	  + CF_PKG_CONFIG - modify to allow autoconf-2.13 or autoconf-2.52
	    configurations.
	  + CF_RPATH_HACK - add a check for libraries not found, e.g., from
	    suppressed functionality of gcc in linking from /usr/local/lib, and
	    add a -L option to help work around this.
	  + CF_STRUCT_TERMIOS - relax ncurses-oriented change to make this work
	    as fixup after CF_XOPEN_SOURCE
	  + CF_TERMCAP_LIBS - modify the workaround for old AIX system (e.g.,
	    from 1997 or before) to not set $cf_cv_termlib if it succeeds in
	    finding initscr in libcurses.  Doing that confused a check in tin's
	    configure.in which looks at that variable to decide if
	    termcap/terminfo library was found.  The check for tgoto in
	    libtermcap on the next line is the actual check which is needed,
	    and should fail if there is no termcap library installed.
	  + CF_XOPEN_CURSES - fix typo in the workaround for
	    _XOPEN_SOURCE_EXTENDED
	  + CF_XOPEN_SOURCE - extend aix case to aix 7.x, modify checks to
	    prefer _XOPEN_SOURCE vs _XOPEN_SOURCE_EXTENDED.
	  + CF_X_ATHENA_LIBS - DragonFlyBSD's pkgsrc combines Xaw6 and Xaw7
	    into a single package, and doesn't provide a plain "libXaw.so"
	    symlink.  Work around by testing for the 6/7 versions.
	+ restore delphi keyword file.
	+ amend change from 9.7w to install rule for vileget, making it use
	  the normal INSTALL_SCRIPT symbol.  Some platforms' "strip" utility
	  do not error if the file happens to be a shell script.
	+ amend build-fix for cygwin to fix winvile OLE.

 20110411 (e)
	> Tom Dickey:
	+ improve ada syntax highlighter by parsing attributes, adding a list
	  of the predefined attributes to its keyword file.
	+ fix character-type initialization to allow built-in locales in 9.7d
	  to work (report by Ramil Farkhshatov).
	+ amend a change from 9.7zd which lost the repeat-count for single-byte
	  characters in "r" and other uses of lins_chars() (report by Hymie on
	  mailing list).
	+ build-fixes for --disable-extensions
	+ add tables, modify functions, to support name-completion for the
	  ":g" global commands.  Previously, name-completion used the entire
	  table, which is about 7 times longer.
	+ add "describe-globals" command.
	+ add the "pp" operator to documentation of :g in help-file (report by
	  Wayne on mailing list)
	+ change backup-style from universal to buffer-mode (request by Wayne
	  on mailing list).
	+ add a check in bytes_at0() to ensure that the offset is positive.
	+ modify logic used when cursor-tokens is set, to extract the token
	  from the screen.  It was only searching for the first token which
	  began on or after the current position.  Now it searches for tokens
	  which may begin before the current position (report by Ian Watson).
	+ build-fix for xvile with cygwin, broken in 9.8a changes to
	  consolidate w32vile.h includes.

 20101228 (d)
	> Tom Dickey:
	+ modify expression used for "path" type in regexp.c to avoid matching
	  non-ASCII punctuation characters.
	+ merge changes from Debian package script for 9.8c
	+ add preamble patterns for Emacs "text" and "Autotest" modes.
	+ minor improvements to performance by inlining as macros some
	  frequently used functions.
	+ apply the same improvement for line-deletion to these functions:
	  attributereqion(), find_release_attr(), update_window_attrs().
	+ improve performance of line-deletion by eliminating a search for
	  region-pointer, using data already collected (report by Gary
	  Jennejohn).
	+ modify CAPNAME expression in tc-filt.l to accept "#2", etc.
	+ extend generate set of single-byte encodings to include those listed
	  by iconv for which there is no predefined locale, e.g., the Windows
	  codepages.
	+ modify several places which check for special characters, e.g., when
	  parsing repeat-counts in normal mode, to also exclude multibyte
	  characters (report by Ramil Farkhshatov).
	+ use the generated single-byte encodings from 9.8c to improve UTF-8
	  support for platforms without iconv, i.e., by relating the narrow
	  and wide encodings.
	+ add $kbd-encoding variable, to control whether the keyboard uses the
	  same encoding as the display and/or locale.

 20101206 (c)
	> Rick Sladkey
	+ add Unicode support to the vile Win32 console driver.
	> Tom Dickey:
	+ add generated set of single-byte encodings, to replace the ASCII and
	  ISO-8859-1 fallbacks used when no suitable 8-bit "narrow" locale can
	  be setup.  The tables also have the corresponding set of locale names,
	  which provides a fallback for cases when the locale support is
	  incomplete (prompted by report by Ramil Farkhshatov).
	+ modify CF_WITH_CURSES_DIR and related macros so the --with-curses-dir
	  option applies to both ncurses and curses.
	+ modify CF_X_ATHENA and CF_X_TOOLKIT autoconf macros to accommodate
	  changes in xorg package scripts.
	+ modify several autoconf macros to lessen use of legacy
	  "${name-value}" feature in favor of standard "${name:-value}", since
	  it is broken in recent version of bash.
	+ remove a spurious '\' in backreference for sed in CF_LEX_VERSION
	  macro (report by Mark McKinstry)
	+ add ".yy" suffix to yaccmode.
	+ add ".gperf" and ".ll" suffixes to lexmode.
	+ ncu-indent is now provided by "cindent" at
	  http://invisible-island.net/cindent/
	+ set pointsize in output from atr2html.
	+ use cindent to format the ".c"-files.
	+ use cindent to format the lex-files.
	+ correct description of "copy-to-clipboard" in cmdtbl.
	+ update config.guess, config.sub

 20100915 (b)
	> Tom Dickey:
	+ correct a check in the combination of showchar mode with the
	  :show-printable command when the global file-encoding mode is set to
	  locale.  Also make this combination apply whether or not the ruler
	  mode is set.
	+ correct setting of reg_utf8flag when the global file-encoding mode is
	  set to locale, e.g., for UTF-8 encoding.
	+ add "%" to syntax highlighting of makefile target patterns.
	+ add configure --enable-link-prefix, which is used to trim unneeded
	  libraries from link-commands, to reduce package dependencies.
	+ build-fix for Ubuntu package, which must ensure that -lcrypt is
	  added when building vile-crypt due to weak-linkage issues.

 20100908 (a)
	> Tom Dickey:
	+ modify configure check for gcc's -r dynamic option to include the
	  message from QNX's gcc 2.95.2, which simply ignores the "dynamic".
	+ modify RPM spec-file to remove the doc-directories' scripts at build
	  time, since rpmbuild 4.4.2.3 on Centos 5.5 automatically adds unwanted
	  dependencies on the Perl scripts found there as part of the package's
	  requirements for installing.
	+ fix many strict gcc compiler warnings.
	+ remove support for OpenLook.
	+ add configure --enable-colored-menus option (discussion with Chris
	  Green).
	+ modify makefiles for winvile so that it supports unix-style
	  encryption.
	+ modify vile-crypt to accept a "-u" option for unix-style encryption.
	+ add Jochen Obalek's unix-style crypt function for platforms without
	  that, e.g., win32 and OS/2.
	+ modify perl.xs to build/work with perl 5.004 (cf: 9.7e).
	+ add configure workaround for perl 5.004's prototype for main().
	+ drop two symbols from embedded-Perl configure check, since they did
	  not appear in 5.004, and are not used by perl.xs
	+ build-fix for OS/2 EMX:
	  + remove a '/' after $(DESTDIR), to work with DOS devices.
	  + suppress unsupported "inline" definition for icc compiler.
	+ build/runtime fixes for DJGPP:
	  + provide fallback for intptr_t type.
	  + amend a change from 9.7h which assigned a non-malloc'd pointer to
	    context where it was later freed.

Changes for vile 9.8 (released Sun Aug 08 2010)

 20100808
	> Tom Dickey:
	+ mark 9.8 release
	+ move rpm spec-file to package directory.

 20100725 (zg)
	> Tom Dickey:
	+ correct scripting for map/map! commands to allow ^V to escape any
	  character, as well as ignoring single/double quotes and backslashes
	  (report by Larry Gensch).

 20100713 (zf)
	> Rick Sladkey:
	+ add support for C# verbatim string literals to c-filter.c
	+ correct a sign-extension problem with xml-filt.l, for 64-bit
	  platforms
	> Tom Dickey:
	+ add Debian build-scripts, for test-builds.
	+ improve awk filter:
	  + correct DSTRING expression, to handle "\\\\" value.
	  + accept literal spaces in patterns.
	+ improve rpm filter:
	  + recognize keywords ending with digits, such as "Source0".
	  + distinguish one-liner tags from multi-line sections.
	  + ignore case of keywords.
	  + add keywords for %XXX variants of %{XXX} names.
	  + highlight %XXX words in single-quotes.
	+ improve sh filter:
	  + handle escape character in here-document.
	+ several changes to configure macros:
	  + quote params of ifelse().
	  + add/use CF_ADD_LIB/CF_ADD_LIBS for consistency.
	  + add --verbose messages to a few macros.
	  + use CF_TRY_PKG_CONFIG in CF_X_ATHENA, for extra checks, etc.
	  + modify CF_X_TOOLKIT, adding check to ensure that -lICE is added,
	    to work around broken ".pc" files.

 20100612 (ze)
	> Tom Dickey:
	+ add lxvile wrapper for xvile, which chooses a font based on locale
	  setting (suggested by Radek Liboska):
	+ add ".gpr" files to adamode
	+ add ".xmodmap" files to xresmode
	+ add ".la" files to confmode
	+ add "changelog" to txtmode
	+ update yacc.key to bison 2.4.1 and byacc 20100610.
	+ improve configure macros:
	  + improve CF_RPATH_HACK by using ldd to obtain a list of directories
	    to ignore.
	  + use pkg-config for X libraries, if available.
	  + correct a test of cache variable in CF_MKSTEMP
	  + modify CF_GCC_WARNINGS to work with c89 wrapper for gcc.
	  + ignore stderr in CF_GCC_VERSION
	  + add/use CF_ADD_LIB and CF_ADD_LIBS macros to force consistency in
	    updating the $LIBS variable.
	  + add assignments in CF_FIND_LINKAGE to address a case where the
	    function is found in predefined libraries.
	  + add quoting for ifelse() parameters
	+ build-fixes for configure --without-locale (report by Michael Finken).

 20100520 (zd)
	> Brendan O'Dea:
	+ add configure option --disable-rpath-hack, since Debian guidelines
	  do not allow rpath.
	> Tom Dickey:
	+ two fixes for handling compose sequences with UTF-8 encoding (report
	  by Radek Liboska):
	  + restore the wide-character locale setting while opening the input
	    method.
	  + check in x_key_press() for resolved strings that can be interpreted
	    as UTF-8 encoding.
	+ add CFLAGS to link-commands in makefile.in, so that --with-cflags=-g
	  works with linkers that require this.
	+ implement stacked here-documents in ruby syntax highlighter.
	+ several fixes for redefining a built-in command via a procedure.
	  + add a parameter to delete_namebst() to suppress reinsertion of the
	    data when we know we're redefining an entry.  This fixes a bug
	    where reinserting silently failed to update the flags, e.g., when
	    overloading a built-in name.
	  + btree_delete() did not walk back through the correct set of nodes
	    for rebalancing the AVL tree.  Fix, using Julienne Walker's
	    tutorial as a guide.
	+ fix warnings from "clang --analyze".
	+ remove a check that prevented inserting non-UTF-8/non-Latin1 8bit
	  codes.
	+ correct setting of reg_utf8flag in regexp.c; the error was preventing
	  matches of non-ASCII text in Latin-1 encoding.
	+ add $cmd-encoding variable to allow control of minibuffer's encoding
	+ disable rpath in rpm spec-file.

 20100405 (zc)
	> Rick Sladkey:
	+ add missing "close" for terminal for win32 console version.  Lacking
	  the close, vile could hang if it was run from a subshell.
	+ do not check X_OK in ffaccess() for win32.
	> Tom Dickey:
	+ add configure check for exctags vs ctags, to work with pkgsrc.
	+ use Xutf8LookupString for input of UTF-8 key-events, if available.
	+ add configure check for rpath linkage options, use this for libraries
	  in unusual places.
	+ improve CF_FIND_LINKAGE configure macro, avoid adding to CPPFLAGS
	  and LDFLAGS if the check only needs to add a library name.
	+ improve configure check for gcc -rdynamic option.
	+ incorporate "reflex" into AC_PROG_LEX check for working version of
	  flex.
	+ change resource file's forkOnStartup to false, matching compiled-in
	  default (discussion on mailing list).
	+ add "Application" to desktop files.
	+ improve .spec file, to install uxvile as well as configure xvile
	  using Xaw to obtain menu support.
	+ remove mkdirs.sh; use mkdir -p
	+ minor cleanup of .spec file, change the terminal configuration to
	  use the default termcap/terminfo driver rather than ncursesw
	  (discussion with Radek Liboska).
	+ fix makefile.in so that rpm build works; the changes for the
	  --with-symlink configure option had broken the way the TARGET symbol
	  was used by the .spec file.
	+ add configure check for va_copy, which may not be a macro.
	+ change type in vl_setup_encrypt() to "int", to make this 32-bits for
	  32- and 64-bit platforms, needed to make the algorithm work with
	  64-bits.  The original "long" was needed for 16-bit systems.
	+ when processing modelines, ensure that settings for a source'd file
	  are not applied to the current file.
	+ modify xvile to use \uXXXX format when the font does not contain
	  a glyph for a given character.
	+ change "install-xvile" makefile target to "install-bin" in RPM
	  spec-file to work with UTF-8 (report by Radek Liboska).
	+ add/revise sections in config.html / config.doc summarizing the
	  differences between related text- and X11-drivers and their support
	  of UTF-8 (report by Radek Liboska).
	+ change "ncurses" to "ncursesw" in RPM spec-file to work with UTF-8
	  (report by Radek Liboska).
	+ correct order of ifdef/include's for USE_MULTIBYTE symbol in
	  curses.c, which broke wide-character support for curses-driver in
	  9.7zb (report by Radek Liboska).
	+ add preamble to makemode to work with lines such as
		#!/usr/bin/make -f
	+ add environment variable VILE_LOCALE_MAPPING to help with special
	  cases of associating wide/narrow locales, e.g., where the narrow
	  locale is only available under a non-empty suffix.
	+ improve reverse-index used for associating wide/narrow encoding.
	+ add mode "reuse-position" to allow users to specify that vile should
	  restore the current line/column position when (re)displaying a
	  scratch buffer built with liststuff.  The motivation is to allow
	  switching between the displays for show-printable and
	  show-wide-printable, which use the same buffer.
	+ add show-wide-printable command, to provide a way to see details for
	  other "pages" than the ASCII/Latin-1 0-255 code.
	+ reopen terminal in CleanAfterPipe() so that multibyte-output still
	  works after reading into a buffer from a shell command.
	+ make kill_response() work with wide-characters (report by Ramil
	  Farkhshatov).
	+ revert a change in word.c from 9.7zb which broke wide-character use
	  of format-til (report by Ramil Farkhshatov).

 20100211 (zb)
	> Tom Dickey:
	+ modify curses driver to support color-schemes.
	+ modify vl_ctype2tbuff() to handle wide-characters.
	+ add $title-encoding, to control whether vile 8-bit or UTF-8 encoding
	  when setting xterm title.
	+ improve special_formatter(), used in modeline formatting, to display
	  UTF-8 filenames.
	+ make ifdef'ing of gettimeofday() in random.c consistent with estruct.h
	  (report by Chris Green).
	+ in UTF-8 locales, limit buffer names to ASCII, to simplify name
	  management in wide/narrow encodings.
	+ modify regexp.c to handle wide-characters for \< and \> markers.
	+ change makefile.in to use "install-bin" rule rather than "install-vile"
	  or "install-xvile", according to the target, since that interferes
	  with building both versions before installing (report by Radek
	  Liboska).
	+ extend :show-printable to show detail for the character in the
	  current buffer if showchar mode is set.
	+ modify lins_chars() so that pasting UTF-8 text into a non-UTF-8
	  buffer automatically converts it into the non-UTF-8 locale.  This is
	  not the same as other methods such as yank/put, which copy bytes.
	+ remove iconv() logic in vl_mb_getch() which does not work for
	  non-UTF-8/non-ISO-8859-1 encodings (report by Radek Liboska).
	+ correct return-value for vl_mb_is_8bit(), to correctly display
	  non-UTF-8/non-ISO-8859-1 codes (report by Radek Liboska).
	+ modify :show-printable to show results from system locale settings
	  if a parameter is given.
	+ minor formatting fix to output of :show-printable to show the "sh"
	  on the end of each row.
	+ modify vtputc() to correctly display non-UTF-8/non-ISO-8859-1 codes
	  when running in a UTF-8 locale (prompted by report by Radek Liboska).
	+ add $latin1-expr variable, which can be used to specify whether a
	  derived narrow locale really has Latin1 (ISO-8859-1) encoding.  This
	  is used to provide a default encoding for the case where the user's
	  locale uses UTF-8 encoding, and the system has no corresponding
	  narrow locale installed (report by Chris Green).

 20100128 (za)
	> Tom Dickey:
	+ improve nroff filter by allowing for macro-names to be used for fonts
	+ add "always" setting for check-access mode, to distinguish between
	  scripts and datafiles, e.g., tags.  Use "always" to check permissions
	  for data.
	+ add to diffmode's preamble pattern to allow it to detect diff's in
	  a piped input.
	+ add configure option --with-symlink which augments --program-suffix
	  to make it simple(r) to install versioned binaries (request by Steven
	  Lembark).
	+ add configure options for transforming program name upon install:
	  --program-prefix, --program-suffix, --program-transform-name
	+ updates/fixes to ".spec" file (report/patch by Radek Liboska).
	+ improve configure-check for term.h header, to eliminate compiler
	  warnings for cygwin.
	+ improve CF_IMAKE_CFLAGS and CF_XOPEN_SOURCE by using CF_ADD_CFLAGS
	  to add (and remove duplicates) consistently in CPPFLAGS.

 20100107 (z)
	> Tom Dickey:
	+ modify format for CF_DISABLE_ECHO, from mawk.
	+ add special case for darwin extensions in CF_XOPEN_SOURCE macro,
	  from tin.
	+ add makefile install-html rule
	+ add doc/vile-man.html, generated from vile.1
	+ add check in x11.c get_color_gc in case index falls out of bounds
	  (report by Gary Jennejohn).
	+ finish colorizing examples in html files.
	+ completed doc/menus.html
	+ cleanup some debris from working files (report by Brendan O'Dea).
	+ update config.guess, config.sub

 20091228 (y)
	> Brendan O'Dea:
	+ modify ".desktop" files to use freedesktop category names as in
	  http://standards.freedesktop.org/menu-spec/1.0/apa.html
	+ briefly describe uxvile in the manpage.
	+ modify configure check for lex/flex to ensure it does not use ":",
	  if the program is not found since that would cause an unexpected
	  build-failure.
	> Tom Dickey:
	+ change Inno Setup script to install html files rather than doc files
	  for documentation; added a shortcut to the table of contents.
	+ convert all ".doc" files to html, generate ".doc" from those files.
	+ improve xterm-fkeys implementation:
	  + check for existence of shifted cursor- and editing-keys when the
	    unshifted keys do not use CSI format.
	  + recognize either form of CSI
	+ modify xresmode to include shell-output from appres, e.g.,
		^X!appres XTerm
	+ improve vile-sh-filt for these cases:
	  + "${number}"
	  + "$(commands)"
	  + "$((expression))"
	  + "${name#value}", etc.
	+ make $font always available, but readonly for non-GUI configurations.
	+ use -F option to highlight the code-examples in vile's help-file.
	+ add -F command-line option, to only run the syntax filters for the
	  given files, writing the attributed text to the standard output.
	+ modify vl_ctype_init() to save/restore LC_CTYPE setting, in case
	  some library, such as vile's perl binding, has reset the locale based
	  on environment settings, etc.
	+ add built sources/headers to makefile tags-rule.
	+ improve configuration/initialization of curses-driver to ensure that
	  no attempt is made to display UTF-8 using 8-bit curses (report by
	  Chris Green).

 20091114 (x)
	> Tom Dickey:
	+ add a special case in canonpath(), and add SYS_CYGWIN to OPT_UNC_PATH
	  definition so that UNC-paths are recognized with Cygwin.
	+ add doc/vile-toc.html, a table of contents for vile-hlp.html
	+ generate vile.hlp from doc/vile-hlp.html
	+ correct check for flags on sql keywords from 9.7b, which was using
	  the class definition rather than the instance.
	+ use xterm patch #251 feature for saving/restoring title in termcap
	  and curses drivers.
	+ add doc/vile-hlp.html, which is a marked-up version of vile.hlp
	+ change atr2html to not use <pre>, since <font> inside <pre> is
	  nonstandard.
	+ add logic for case in vtlistc() when vtcol is negative because the
	  screen is shifted-right, but the text is nonprinting or
	  wide-characters.  vtcol was not updated, and the region should be
	  filled with blanks.
	+ minor fixes/improvements to ldel_bytes(), based on reports of an
	  infinite loop for amd64 platforms (reports by Gary Jennejohn, Joran
	  Ahlback, Ramil Farkhshatov, Clem Taylor, Joachim Schimpf)
	+ strict compiler-warning fixes.

 20091027 (w)
	> Tom Dickey:
	+ fix makefile substitution so AIX make program does not attempt to
	  use desktop-utils when it is not available.
	+ add configure check to suppress IRIX64 compiler warning about the
	  conversion of pointers to same-sized integers, which is used in
	  vile's mode structure definitions.
	+ prefer include of inttypes.h, since stdint.h is c99, and on some
	  platforms such as IRIX64, including it generates an error.
	+ implement Unicode select/paste in winvile.
	+ build-fix in mktbls.c for Visual Studio.Net 2003, apparent compiler
	  bug.
	+ add detailed example of extra-colors to vile.hlp
	+ change spaces-after-sentence to a buffer mode, to allow it to be part
	  of a majormode.
	+ correct logic in filter's parse_keyword() function, which could
	  index past string limits when handling quotes.  This is an old
	  bug exposed by gcc warnings fixes in 9.7v
	+ modify default values for --with-app-defaults and --with-icondir to
	  use the make-specific $(name) form rather than the sh/make compatible
	  ${name} form, since the shell construct used for filling in the
	  default value by autoconf does not work with some shells, e.g.,
	  Tru64, which may be confused by nested curly-braces in that
	  expression.
	+ correct inconsistent use of INSTALL_SCRIPT symbol in makefile, which
	  caused app-defaults and uxvile scripts to not install unless vile
	  was configured with perl (report by David Rolfe).

 20091013 (v)
	> Tom Dickey:
	+ override highlightThickness resource in xvile to eliminate screen
	  trash (report by Jim Crigler).
	+ update XVile.ad to match Debian package.
	+ some code-cleanup for x11.c and filters.
	+ work around defective gcc implementation of warn_unused_result
	  attribute with new IGNORE_RC() macro.
	+ add configure-script and makefile rules for app-defaults, icons and
	  desktop files for xvile, adapted from xterm.
	+ use "fixed" rather than XtDefaultFont as default font for xvile.
	+ improve TYPECAST macro using intptr_t type.
	+ document VILE_MENU environment variable in vile.hlp
	+ modify vilemenu.rc to implement a default-font entry, to restore
	  the font to whatever was given in a -fn option, or resource setting.
	+ add $font to the state variables that &default can work with.
	+ add uxvile script, based on uxterm.
	+ modify vilemenu.rc to provide fonts used in uxterm for the set of
	  ordinary fonts if the $term-encoding is utf-8.
	+ bypass symbols for XA_COMPOUND_TEXT() and XA_UTF8_STRING() in xvile,
	  to resolve portability issues with older X headers/libraries (report
	  by David Rolfe).
	+ correct handling of retries for different selection types in xvile
	  broken in 9.7u (report by Steven Lembark).
	+ update configure check for lex version to work with reflex 20090902's
	  inclusion of patch-date.
	+ fix objc.key to reset symbol table (i.e., from "cpre" to "objc")
	  before merging in "c" keywords (overlooked in 9.7q).
	+ correct list of options for c-filter, to make objcmode work with
	  external syntax filter.
	+ update config.guess, config.sub

 20090824 (u)
	> Mike Mackovitch:
	+ use temporary bp variable in calls to writeout() to ensure that the
	  buffer marked as unchanged will be the same.  This works around the
	  Perl api's use of fake windows, setting curbp to match the current
	  window, e.g., when redisplaying [Buffer List].
	> Tom Dickey:
	+ rename install.sh to install-sh, to avoid suffix-rules
	+ move definitions for GCC_PRINTFLIKE and GCC_SCANFLIKE into configure
	  macro.
	+ add configure check for HPUX 11 _XOPEN_SOURCE definition.
	+ modify configure check for lex states to show the number of states
	  the lex implementation supports.  The html filter currently uses 16.
	+ modify genmake.mak to require flex for html syntax filter; some less
	  capable lex's have a too-low limit on states.
	+ improve awk syntax highlighter:
	  + highlight inline comments.
	  + highlight regular expression used as parameter, e.g., in sub().
	  + change $0, etc., to Ident2 class for consistency with other filters.
	  + highlight some cases of unbalanced right-parenthesis or
	    curly-braces.
	+ handle XA_COMPOUND_TEXT and XA_UTF8_STRING selection types in xvile.
	+ allow ^VUddddd input for Unicode in decimal (base ten).
	+ modify logic for complex fences to avoid setting pre_op_dot, which
	  would result in selecting only the innermost level of complex fences
	  on a reverse-direction, rather than the outermost level.
	+ prevent run_a_hook() from running while an operator command is
	  running, to lessen the chance of autocolor modifying variables used
	  in the interactive operations, e.g., "d%" (report by Paul Fox).
	+ add xq (XQuery) majormode and syntax filter.
	+ restore xterm title string after running subprocess (report by Paul
	  Van Tilburg).
	+ reduce scope of curbp in file.c and region.c, prompted by Perl fix.
	+ fix mark/column translation for multibyte characters in a case where
	  the working column value was decremented past a multibyte character
	  boundary.
	+ build-fix for configure --disable-extensions
	+ build-fix for OS/2 EMX; the ksh implementation did not handle the
	  genmake.sh script.

 20090628 (t)
	> Joachim Schimpf
	+ fix typo in STARTQUERY pattern in ecl-filt.l (ECLiPSe/Prolog)
	+ improve ecl-filt.l parsing of based-numbers.
	> Tom Dickey:
	+ correct initialization ordering in filterio.c and builtflt.c, which
	  broke m4- and cweb-filters in 9.7r.
	+ various improvements to ecl-filt.l, to highlight strings and numbers.
	+ add prolog majormode.

 20090605 (s)
	> Tom Dickey:
	+ improve css syntax filter (and matching filter embedded in html
	  syntax filter):
	  + recognize comma for state transitions
	  + color non-keyword identifiers with Ident class.
	+ fixes for building filters with lex (not flex).
	+ check for majormodes which have a "before" property referring to each
	  other, and exit from resulting infinite loop.
	+ revert a performance fix from 9.7o in regexp.c to search-limits,
	  which broke the report of "Only one occurrence of pattern".
	+ fixes to make -v option for internal/external filters work from the
	  beginning of loading keyword files.
	+ add show-local-modes, as an easier-to-remember variation for the
	  count+show-modes flavor implemented in 970619 7.1f
	+ modify listmodes() to save its last parameters, so callers such as
	  for the animated feature can redisplay local-mode displays.
	+ modify filter keyword-processing to save/restore the default settings
	  for table- and attribute-values so that merging one keyword file into
	  another will not override the parent file's settings.
	+ suppress "Press return to continue" when running a shell command
	  which is modified by "~hidden" or "~quiet".
	+ improve checks for insecure file permissions (adapted from Steven
	  Lembark):
	  + modify check for insecure file permissions to exclude absolute
	    paths which are given by the user in scripts.
	  + write details on the reason why permissions failed to [Trace].
	  + only check ownership of files in current or home directory.
	+ change default color for Ident2 class to C3.  It was C6, which was
	  the same as Number.

 20090525 (r)
	> Tom Dickey:
	+ fix an old bug which prevented show-filtercolors from working more
	  than once on a buffer unless the buffer was re-read.
	+ correct color-initialization for filters which happen to use a "-k"
	  option to load the same symbol table as the filter's default table.
	+ make filters/genmake.mak auto-generated on Unix platforms, to ensure
	  that builtin/loadable/external filters all use the same filter-names.
	+ modify hs-filt.l to use the same filter-name "hs" as genmake.mak
	  (report by Brendan MacDonell).
	+ modify show-filtercolors to work with external filters.
	+ improve bat-filt.l, highlighting labels after a "goto" keyword.
	+ minor fix to sh-filt.l to show a pattern in a case statement which
	  includes a "#" mark.
	+ add "ant" and "mvn" (maven) modes.
	+ fix overlooked change from filter_name to default_table in buildflt.c,
	  needed to show proper colors with builtin filters from 9.7q for some
	  of the modes which override the default table, e.g,.  "csh".
	+ improve error-checking in show-filtermsgs and show-filtercolors
	  macros.

 20090518 (q)
	> Tom Dickey:
	+ improve which-source and which-exec commands (prompted by Paul Fox):
	  + use the same check for file-ownership as was done in 9.5m, showing
	    files which fail this check with "?" rather than "*".
	  + add a trace message showing filenames which fail the check.
	  + add check-access mode, to make this configurable.
	+ add show-filtercolors macro, using the "-Q" option of syntax filters.
	+ add "-Q" option to syntax filters, which makes the filter write a
	  ".keyword" table to stderr to show the effect of the "-k" option.
	+ as part of improvements for xml filter, modify the way keyword tables
	  are loaded.  Before, symbols were implicitly loaded into the default
	  tablename defined by the filter.  Now, they are loaded into the
	  table named by the "k" option to the filter.  Adjusted ".key" files
	  to use ".merge" rather than ".include" for the case where they used
	  the old behavior.
	+ improve xml filter (used for xsl mode) by using the prefixes defined
	  by xmlns properties to select different symbol tables.
	+ add xsl mode
	+ make format-til, lower-til, upper-til and flip-til work for UTF-8
	  (anon report on Savannah).
	+ correct allocation of temporary filename in spellflt.l for tmpnam(),
	  from 9.7f changes.

 20090430 (p)
	> Brendan MacDonell:
	+ improve scheme mode:
	  + fix/hack to properly handle combinations of quotation literals.
	  + highlight the unquote/unquote-splicing keywords.
	  + handle the optional scheme parentheses extension ('[' and ']').
	> Tom Dickey:
	+ minor tweak to manfilt.c to allow space to overstrike text.
	+ minor tweak to vbmode fences.
	+ correct some limit-checks in vl_regexec().
	+ correct a reallocation in html syntax filter html_quotes() function
	  that grew too rapidly.

 20090426 (o)
	> Tom Dickey:
	+ add DEFAULT_XSHELL, DEFAULT_XSHELLFLAGS symbols to statevar.c which
	  can be overridden by compiler flags to select something other than
	  "xterm" for $xshell variable, etc. (request by Brendan O'Dea).
	+ improve html syntax filter:
	  + check for "src" property in script tag before deciding whether to
	    use JavaScript keywords.
	  + create separate table "htmlprop" for HTML properties.
	  + highlight CSS embedded in HTML.

 20090405 (n)
	> Ingmar Ellenberger:
	+ reorder part of sql-filt.l to work with a non-flex parser.
	> Mark Robinson:
	+ build-fixes for mingw configuration when built using cygwin.
	> Tom Dickey:
	+ more fixes for lex-based filters:
	  + make builtin/loadable syntax highlighters work better with files
	    using recordseparator=cr by sending blanks instead of unexpected
	    line-feeds, as well as changing the used recordseparator to
	    newlines.  Make a similar workaround for recordseparator=lf by
	    filtering unexpected carriage returns.
	  + (jfg) change the error-exit when building with "new" flex to
	    warnings.  Report problems to "new" flex's "maintainer".
	  + add configure check for lex "%o" options.
	  + fix typo in noclass.sh for [[:blank:]].
	  + modify noclass.sh string for [[:print:]] to ensure there's no
	    embedded '-'.
	  + filter out "%pointer" options in noclass.sh (this could be a
	    separate configure check from character classes).
	  + modify fltstack.h to use it included twice - once in the declares,
	    and once in the code section, e.g., for the non-flex parser
	    encountered by Ellenberger.
	+ modify handling of recordseparator mode to let explicit rs=cr work
	  to read cr-delimited files, provided that dos mode is not set.
	+ add variable $modeline-limit to limit the offset into each line that
	  vile scans for modelines.  Use default 256.
	+ fixes/improvements for regexp.c:
	  + make vl_toupper() a macro, also use the buffer encoding to decide
	    whether to use system ctypes.
	  + change one of the limits for calling regexec from lregexec to
	    ensure that the string-end is not past the end-offset.
	+ improve performance for displaying syntax highlighting of very long
	  lines by using a fast check on the left/right limits of single-line
	  regions that could be displayed, and ignoring attributed regions past
	  those bounds.
	+ improve html filter by ensuring that "server" is the tag, not one
	  of the named values, e.g., "<server>" vs "<foo server=bar>".

 20090322 (m)
	> Tom Dickey:
	+ improve performance for show-variables and describe-bindings.
	+ add un-filter (atr2ansi, atr2html and atr2text) executables to win32
	  makefile.
	+ implement quick-launch rule in winvile.iss script.
	+ add winvile-wide.iss installer script
	+ add limit-check in execkreg() in case a wide-character is passed as
	  the mark-identifier.
	+ add $kill-size and $kill-limit variables to improve scripting with
	  the $kill variable.
	+ add extra-colors "warning", for show-variables command.
	+ apply extra-colors to show-variables command.
	+ add new functions &bchanged, &fchanged and state variables $bchanged
	  (same as $modified) and $fchanged to make it simpler for scripts to
	  check if buffer/file timestamps differ (prompted by Paul Van Tilburg).
	+ add ".clw" and ".dsw" files to inimode and confmode, respectively.
	+ modify preamble settings for majormodes of the form "#!path" to make
	  them more distinct.

 20090228 (l)
	> Brendan MacDonell
	+ improve lisp and scheme modes:
	  + adds highlighting support for quasiquote/backtick (`), quote ('),
	    unquote (,) and unquote-splice (,@), including unquoted
	    sub-expressions.
	  + highlights the parentheses of quoted expressions in a different
	    color (glancing at the code, this appears to have been the initial
	    intent, except the 'quoted' stack variable was never initialized to
	    zero).
	+ improve scheme mode:
	  + uses a derived filter, 'rnrs' (I tried naming the filter 'scheme',
	    but apparently define_scheme is already defined by vile itself).
	  + highlights vector literals '#( ..  )' properly depending on their
	    context.
	  + removes the tokens from scheme.key which are now handled by the
	    filter.
	  + cleans up the keywords file by disabling the unnecessary .brief and
	    ..abbrev declarations.  This also allows some forgotten let*-style
	    keywords to be properly recognized.
	> Mark Robinson:
	+ fix configure.in to add icon for minvile target.
	> Tom Dickey:
	+ amend 9.7g change to use extra-colors for hyperlinks, to do this only
	  when the link starts with "view ", which is used in which-source
	  and similar macros.
	+ highlight pkg-config ".pc" files as "make" syntax.
	+ fix winvile "-i" option, which did not save the original command
	  string, so filenames with embedded blanks required quotes.
	+ fix read of file containing only a UTF-8 BOM; that confused the
	  empty-file logic.
	+ modify configure --with-perl to give a warning but not exit if the
	  configure script cannot link with perl.  This works around a recent
	  mismatch between gcc and perl on some platforms where perl declares
	  a prototype for main() which causes gcc to reject the parameterless
	  main()'s in the configure script.
	+ build-fixes for win32 (Visual C++ 7) and MinGW.
	+ renamed define_scheme to define_color_scm, rename rnrs filter to
	  "scheme".
	+ increase lex tables in htmlfilt.l and mc-filt.l for AIX.
	+ add "with" and "select" complex fences to vbmode and vb6mode.
	+ correct comparison used for continuation marker in vbmode comments.
	+ ensure that <sys/ioctl.h> is included in termio.c if it is needed for
	  SIGWINCH handling, e.g., with Mac OS X (finishes bug report by Daniel
	  L Ashbrook).
	+ update configure script macros:
	  + consistently append rather than prepend to $CFLAGS
	  + use $PATH_SEPARATOR variable rather than $PATHSEP
	  + minor fixes for Intel compiler warnings
	  + add case for "mint" to CF_XOPEN_SOURCE
	+ improve performance of on-the-fly UTF-8 regular expressions by
	  inlining and making checks to see if a byte is ASCII before doing
	  conversions.

 20090218 (k)
	> Tom Dickey:
	+ allow for continuation marker in vbmode comments.
	+ add static/shared/enum keywords to vbmode fences.
	+ add ".r" files to rexxmode
	+ add $term-cols, $term-lines and $term-resizes variables.
	+ correct comparison in set-char-class and unset-char-class that
	  prevented setting "upr" class.
	+ modify side-effects of setting global file-encoding to reset the
	  locale-based character set tables so that "ascii" will display 8-bit
	  characters in printable form, and setting to "8bit", "utf-8", etc.,
	  will restore the default character set tables.
	+ amend change to insertion from 9.7i, which broke compose sequences
	  (report by Paul Van Tilburg).
	+ add configure check for SIGWINCH, to fix resizing on OS X (report by
	  Daniel L Ashbrook)
	+ implement on-the-fly character classes for regular expressions in
	  UTF-8 buffers.
	+ add configure check for -Wno-unknown-pragmas, to help older versions
	  of gcc not warn about the pragmas in perl.xs

 20081204 (j)
	> Tom Dickey:
	+ add to $cfgopts some drivers (ansi, borland, ntcons, ntwin, os2vio,
	  vmsvt) and useful settings (iconv, multibyte).
	+ make ansi driver support color syntax highlighting.
	+ make xvile-pager work by adding a "+fork" option to ensure inputs
	  are captured before the script exits.
	+ fix a regression in "R" command from 9.7i; the check for quoting now
	  checks for UTF-8 continuation bytes but did not ensure that only
	  UTF-8 codes were tested before deciding whether to delete old bytes
	  during a replace.

 20081130 (i)
	> Tom Dickey:
	+ modify vilemenu.rc to work with --disable-shell configuration, by
	  making it scriptable, and using the scripting feature to omit menu
	  entries which use shell features.
	+ add "define-menu-entry" command.
	+ eliminate fixed limit of xvile's menu size.
	+ modify vileinit.rc to work with --disable-shell configuration.
	+ modify assert() in main.c to allow assert-checking with xvile.
	+ modify keyword ".merge" directive to make it distinct from ".source".
	  The former reads without modifying the table name, the latter builds
	  a new table.  Use this feature in the yacc syntax filter to keep the
	  terminal names and C keywords separate.
	+ improve yacc syntax filter, highlighting all of the terminal symbols
	  with "Terminal" class.
	+ improve lex keywords, from flex manpage.
	+ improve lex syntax filter to work with files having no "%{" section.
	+ correct treatment of "R" command for quoted characters, e.g,. ^V^G;
	  it was not deleting the characters which were replaced.
	+ correct one place where inserted bytes were interpreted as
	  characters, which caused the map-command to insert UTF-8 bytes as
	  characters (report by Christopher Illies).
	+ fix sign-extension in map.c, which caused a command like this
		:map! ^Ks, ^Vu0219
	  corresponding to UTF8 0xc8,0x99 to insert 0xffc8,0xffc9 (report by
	  Christopher Illies).
	+ modify end_named_cmd() and more_named_cmd() to check clexec
	  independently of isnamedcmd, since the latter is for interactive use,
	  and the former is for scripts.  This allows a .vilerc file to contain
	  a "map!" line which will be shown at startup.
	+ build-fixes for MinGW.
	+ experimented with flex's "-+" C++ option (but decided that cannot be
	  used in vile, since it changes the scope of yy_start).
	+ mods to compile with g++
	+ improve highlighting of vile macros by displaying numeric codes
	  following a control/V as in a map-command as numbers or errors if
	  fewer digits were found than expected (prompted by report by
	  Christopher Illies).
	+ modify make-filter to show tokens marked with @'s as preprocessor,
	  e.g., as used for autoconf.
	+ set file-encoding in digraph.rc to make comments (which are
	  in ISO-8859-1) display properly in UTF-8.

 20081110 (h)
	> J Chris Coppick:
	+ updated CaptHook.pm
	> Mark Robinson
	+ fix compiler-name for MinGW in version.c
	+ build-fix for MinGW
	> Tom Dickey:
	+ add "auto" value for recordseparator mode, which tells vile that if
	  all of the line-endings are CR/LF to use "crlf", and if all are
	  LF, to use "lf".  This overrides the dos mode which provides a
	  platform bias of the recordseparator mode.
	+ add a few overlooked mode initializations in init_mode_value().
	+ add percent-autocolor mode, which can be used to override the
	  autocolor mode for very large files.
	+ modify makefile.djg and borland.c to allow building
	  syntax-highlighting version for DJGPP, using builtin-filters.
	+ modify $startup-path for DOS/Windows where VILE_STARTUP_PATH is not
	  #define'd to add $exec-path to allow vile to find startup scripts in
	  the same directory as the executable (request by Rugxulo).
	+ fixes for which.rc in case vile is running in view or readonly mode.
	+ modify check for language value in html filter to accept anything
	  beginning "javascript", e.g., "javascript1.1".
	+ modify sql filter to highlight hexadecimal constants, which may be
	  used in T-SQL.
	+ correct parsing of C-style comments in sql filter, which did not
	  handle trailing blanks after the "*/" marker.

 20081027 (g)
	> Tom Dickey:
	+ extend vile-html-filt to use language value in script tag, e.g., to
	  handle C# scripts.
	+ modify mac_tokval() to set end-string value when processing the last
	  token on a line in script mode.  This lets a "set" command work by
	  itself in a ".vilerc".
	+ fix special case of killing buffers from [Buffer List], broken in
	  9.7f by increasing the number of digits available for buffer number.
	+ extend vile-html-filt to support asp/jsp files.
	+ add aspmode
	+ improve parsing of "<%" "%>" markers in htmlfilt.l, which must be
	  recognized anywhere - not just outside tags.
	+ implement extra-colors for hypertext commands, e.g., as used in the
	  which-keywords macro.
	+ improve loading of UTF-16 and UTF-32 when no byteorder-mark is
	  specified (report by Rugxulo).
	+ modify as-filt.l to disallow quoted strings from extending past the
	  end of a line (report by Paul Fox).

 20081019 (f)
	> Tom Dickey:
	+ add ".aspx" suffix to htmlmode.
	+ improve keyword parsing by switching back to the original table if
	  no parameter is given for ".table" directive.
	+ catch invalid-handle exception for winvile to fix problem with
	  spell-check.
	+ improve incremental search by highlighting match if the extra-color
	  isearch is set.
	+ improve manipulation of line-attributes in lnewline(), needed for
	  some cases in "show-extra-colors".
	+ add "show-extra-colors" command.
	+ add several "list-XXX" aliases to match "show-XXX" commands, for
	  consistency.
	+ correct amount of characters to replay after getting a backspace in
	  incremental search (report by David Rolfe).
	+ new "set-extra-colors modeline" provides better color+attributes
	  combinations than the mcolor mode.
	+ add "set-extra-colors" command, which will allow setting extra
	  colors for special buffers such as [Settings].
	+ correct ifdef in main.c for platforms which have 'environ', but do
	  not declare it.
	+ add configure check for utf8 library, needed for some platforms to
	  use iconv library.
	+ update config.guess, config.sub

 20080928 (e)
	> Tom Dickey:
	+ add checks to two places where a empty buffer would be reused when
	  loading a new buffer, to disallow that if the first buffer was one
	  specified on the command-line. This case is addressed:
		mkdir foo bar
		vile foo/file bar/file
	  as well as toggling the current/alternate buffers with "_" (report
	  by Decklin Foster).
	+ add Haskell (haskell) mode.
	+ add objective-c (objc) mode.
	+ use PERL_SYS_INIT3() and PERL_SYS_TERM() in perl.xs (Debian #495068).
	+ fixes to resume UTF-8 after suspend (^Z) or subshell (report by Janis
	  Rucis).

 20080817 (d)
	> Tom Dickey:
	+ add "show-undo-stack" command.
	+ fixes for passing macro parameters which contain a leading quote,
	  to avoid reinterpreting that as a string to de-quote (report by Janis
	  Rucis).
	+ improve vilefilt.l:
	  + remain in NORMAL state when an operator is found, since a motion
	    should follow.
	  + correct SSTRING pattern, which should not allow escaped
	    single-quotes.
	+ disable autocolor while processing any &function (report by Janis
	  Rucis).
	+ implement user-definable operators (prompted by discussion with Janis
	  Rucis):
	  + store-operator command
	  + $cmd-motion variable
	  Caveat: the "undo" applies to individual commands within the macro,
	  rather than to the whole macro.
	+ add a null-pointer check to kcod2fnc(), to handle case where parameter
	  of &gtmotion is incorrect (report by Janis Rucis).
	+ modify leak-checking to include forked processes, e.g., for npopen.
	+ add link-test to the configure --with-perl option, in case Perl is
	  only partly installed (report by Janis Rucis).
	+ add case for dragonfly to CF_XOPEN_SOURCE configure macro.
	+ extend vile-lex-filt to handle some of flex's scanner skeleton:
	  + treat lines beginning with "%%" as a comment if they contain text.
	  + recognize copy-directives "%+", "%-" and "%*".

 20080727 (c)
	> Tom Dickey:
	+ modify winvile installer to optionally refrain from putting the
	  newly installed directories first in $VILE_STARTUP_PATH, etc.,
	  if they already exist in the given path.  That allows one to
	  have vile.rc in the first path, e.g.,
	  	c:\vile;c:\program files\vi like emacs
	+ add append-number, insert-number, overwrite-number commands to
	  work with character-numbers.
	+ highlight matches in which-keywords, etc., and put a hyperlink on
	  the highlighted text to view the corresponding file.
	+ fix initialization of XIM in xvile; compose sequences did not work.
	  Also make xvile build XIM code for configurations other than Athena,
	  by supplying fallback for resource definitions.
	  (report/analysis by Fabien Coutant).
	+ parse preprocessor-style directives for basic syntax highlighter.
	+ add complex fences to vbmode for try-blocks, with-blocks and classes.
	+ correct pattern for vbmode used for sub- and function-blocks to
	  ignore leading blanks.

 20080714 (b)
	> Mark Robinson
	+ modify configure script, etc., to build "minvile" and "convile"
	  flavors using MinGW.
	> Tom Dickey:
	+ add dtd majormode.
	+ move most of the ".XXXrc" files to confmode, except ".XXXshrc".
	+ minor fix for vile-sh-filt to allow filenames with embedded "-"'s.
	+ tabulate in borland.c the shift/control/alt flavors of cursor- and
	  function-keys, defining function keys up to 48 to reflect this.
	+ modify makefile.djg to make it simpler to build locale configuration.
	+ fill in some DTD-related keywords in xml.key
	+ add a brief mode format "%M" for modeline-format
	+ improve basic syntax filter by accepting a "." at the beginning of
	  identifiers to distinguish methods and properties from other names.
	+ split-out vb6 majormode from vbmode, leaving the latter for .Net
	+ modify vile-conf-filt to disallow quoted strings to extend to
	  multiple lines without escaping the newline.
	+ add mailcap mode.
	+ add "-c" option to vile-key-filt, which tells it to display tokens
	  in their final color rather than based on syntax.
	+ extend syntax keyword parsing to allow flags to be set for each
	  keyword, e.g., to mark keywords that are used to delimit comments.
	  Use this in vile-sql-filt to treat "prompt" and similar keywords
	  specially.

 20080624 (a)
	> Decklin Foster:
	+ modify spell filter to use $TMPDIR rather putting its temporary
	  files in the current directory.
	> Tom Dickey:
	+ improved sql highlighting:
	  + allow host variables in LEAD state.
	  + reset state to LEAD after "then" or "else".
	  + improve parsing of "@" character.
	  + fix a couple of state-transitions for numbers and strings.
	  + correct a misspelled color class "ident2" to "Ident2".
	  + allow newlines inside quoted strings.
	+ improved php highlighting:
	  + identifiers may begin with "_".
	  + color heredocs and nowdocs
	  + color comments beginning with "#".
	  + add preamble pattern for phpmode.
	+ improve locale initialization in vl_init_8bit() by merging the
	  with/without iconv chunks, except for the parts that explicitly
	  rely on iconv.  That fixes an unintended call to vl_mb_getch()
	  for some non-UTF-8 locales.
	+ correct initialization of table_8bit_utf8[] when iconv is not used.
	  If the locale did not use ISO-8859-1, the table was not initialized,
	  causing input to be ignored (report by Gary Jennejohn).

Changes for vile 9.7 (released Sat Jun 14 2008)

 20080601 (o)
	> Tom Dickey:
	+ simplify wvlwrap.exe by disabling globbing temporarily.  This allows
	  opening files whose names contain square brackets.
	+ improve checks in SetVarValue() and PromptAndSet() to ensure that a
	  mode is actually found, and checking whether a '$' prefix is used.
	+ modify fsm_complete() to lowercase the test-string, making it
	  simpler to save a boolean mode-value in a variable and restore it by
	  assignment.  This works because all of the enumerations use
	  lowercase names.
	+ suppress part of wildcard expansion in call to expand_wild_args(),
	  e.g., for command-line of winvile, since that interferes with
	  reading file whose names contain square brackets.
	+ modify wrapmargin mode to use negative values as a count from the
	  left of the screen (discussion by Chris Green, Paul Fox).
	+ make perlpod sections more readable by highlighting the control
	  lines (request by Steven Lembark).
	+ improve here-document parsing in sh-filt.l to work with "words"
	  which contain blanks.
	+ expand description of command-line history in vile.hlp
	+ document change to ".abbrev" and ".brief" in doc/filters.doc

 20080525 (n)
	> Brendan MacDonell:
	+ improve ruby syntax filter:
	  + match keywords containing '!' '?' and '=' depending on the context
	    (based on my best guesses as to the most common uses, which work
	    99% of the time - otherwise the entire ruby parser would need to be
	    integrated to correctly mimic these syntax quirks).
	  + remove unmatchable characters from the list of those matched
	    following $.
	  + change the instance variable matching to @@?{KEYWORD} instead of
	    @+{KEYWORD}.
	  + matching symbols as literals.
	  + constants (keywords beginning with a capital) are highlighted with
            the Type attribute.
	> Tom Dickey:
	+ modify ruby syntax filter to highlight binary integers (such as
	  0b10101).
	+ disable "*" and "?" abbreviation feature in ruby.key
	+ modify parsing of keyword files to accept an empty parameter for
	  "abbrev" and "brief", to disable the "*" and "?" feature.
	  Note: this syntax breaks earlier versions of vile.
	+ revise 9.6c fix for offs2col0(), restores selection highlighting
	  of newline (report by Eric Krohn).

 20080508 (m)
	> Mark Robinson:
	+ build-fix for eightbit.c without iconv functions.
	> Tom Dickey:
	+ update input-method code, from xterm.
	+ add xvile resource setting "openIm" to control whether it tries to
	  open input-method.
	+ change order of tests for iconv availability and configure option
	  "--with-iconv" to avoid adding iconv library to build unnecessarily
	  (report by Mark Robinson).
	+ modify prompt for new mode value to consistently show the mode's full
	  name.
	+ add "fk" alias for file-encoding mode.
	+ modify mktbls to allow special-case alias for modes which have no
	  convenient abbreviation.
	+ update config.guess, config.sub

 20080426 (l)
	> Tom Dickey:
	+ minor fixes to perl syntax highlighter:
	  + add double-quote to quote-delimitors.
	  + show interpreted symbols in double-quoted regular expressions.
	  + if "/e" modifier is set for regular expression, show interpreted
	    symbols for that.
	  + show regular expression modifiers in keyword-attribute, not string
	+ correct a loop expression in wrapword (report by Chris Green).
	+ correct a byte- versus character-count in wrapword() (report by
	  Chris Green).
	+ add $buf-encoding symbol, to show the actual encoding used by the
	  current buffer vs the file-encoding which is one of vile's internal
	  names such as "8bit" or "locale".
	+ add a "locale" value for file-encoding, use that as the default
	  (discussion with Paul Van Tilburg and Chris Green).

 20080410 (k)
	> Tom Dickey:
	+ remove obsolete lex-filters for perl and ruby (only the C versions
	  have been supported).
	+ update list of filters in doc/config.doc
	+ improve locale initialization, checking if there is no installed
	  narrow locale corresponding to the given (wide) locale.  In that
	  case, default to either ISO-8859-1 or ASCII, depending on whether
	  there was actually a wide locale whose encoding is UTF-8 or
	  ISO-8859-1, or neither (report by Paul Van Tilburg).
	+ force the [Printable Chars] buffer to use file-encoding=8bit,
	  makes it display consistently legal codes in the second column.
	+ modify xvile to use imdying() to handle runtime X errors, which
	  will attempt to save buffers (prompted by discussion with Steven
	  Lembark).
	+ flush the standard output before writing version message using the
	  standard error, in case there was some output pending (report by
	  Chris Green).
	+ improve bytes_before() behavior on illegal bytes; it was returning
	  the length of all illegal bytes adjacent to the current position
	  rather than just one.
	+ modify vl_conv_to_utf32() to use consistent error-return code when
	  continuation byte of UTF-8 fails check.  This is needed in some
	  cases to make ISO-8859-1 data display consistently in UTF-8 buffer
	  as "\?xx".
	+ fix display of ISO-8859-1 encoded file when file-encoding is set
	  to utf-8 (report by Chris Green).

 20080325 (j)
	> Tom Dickey:
	+ modify curses-driver to avoid a curses-refresh (repainting the
	  whole screen) between a shell command and the "Press return to
	  continue" message.
	+ make transpose-characters work for wide-characters.
	+ make "~" (flip-character) and related case-conversion work for
	  Unicode in 0..255 range.
	+ modify behavior of ":ww!" to act like ":w!", allowing it to write
	  all files.
	+ modify the vl_init_8bit() to use vile's built-in UTF-8 decoder for
	  cases where iconv() sees that the result will not fit into the narrow
	  encoding.
	+ correct bytes versus characters for inserting/replacing text in
	  utf-8 buffers (reports by Chris Green, Paul Van Tilburg).
	+ amend fix for recomputing list of modes used for name-completion
	  from 9.6e, to also force reallocation of an associated index.
	+ fix a missing #define in trace.h for GCC_PRINTFLIKE.

 20080313 (i)
	> Tom Dickey:
	+ change class color of parentheses in lisp syntax filter to "Action"
	  to make them easier to distinguish from "String".
	+ improve lisp syntax filter by coloring binary, octal and hexadecimal
	  constants, as well as parsing the "#\" patterns.
	+ remove ".scm" from c-suffixes pattern (report by Brendan MacDonell).
	> Brendan MacDonell
	+ add schememode and keywords based on
	  http://community.schemewiki.org/?scheme-keywords

 20080311 (h)
	> Tom Dickey:
	+ minor fix to configure --with-iconv to handle failure to find iconv.
	+ compiler warnings for DJGPP 2.04 with gcc 4.2.3 (report by
	  Rugxulo).

 20080224 (g)
	> Tom Dickey:
	+ correct conversion of facename for wide-character winvile's $font
	  symbol (report by George Eccles).

 20080217 (f)
	> Tom Dickey:
	+ minor improvement to vbmode's fence-if to ignore lines with
	  continuations.
	+ correct a pattern in latexflt.l, making it parse this pattern:
		\foo{$\{a, b\}$}.
	  (report by Paul van Tilburg).
	+ modify perl syntax filter to color &foo as a variable.
	+ modify perl syntax filter to color both class and member in variables
	  such as $foo::bar (request by Steven Lembark).

 20080207 (e)
	> Tom Dickey:
	+ reinitialize, rather than free the TBUFF result in run_func(), in
	  case some caller reuses that value.
	+ correct limit-check in xvile's really_draw() function (noted by
	  valgrind).
	+ recompute a list of modes used for name-completion after removing
	  a submode definition (from test data by Steven Lembark).
	+ modify getcol() to compensate for 9.6b change to next_column().
	  That fix prevents increasing the next-column computation past the
	  end of the line; while getcol()'s alttabpos computation assumes it
	  can get the column value of the next character.
	+ fix an incorrect reference in chgd_fences() which was exposed by
	  changing fence-pairs more than once in .vilerc, dating from 5.3l
	  (report by Steven Lembark).

 20080124 (d)
	> Tom Dickey:
	+ documentation improvements (suggested by Steven Lembark).
	+ add ".t" to perlmode, using $mode-pathname, noting that while perl
	  uses it, other programs do also (request by Steven Lembark).
	+ strip redundant "mode" from majormode names, avoiding the potential
	  for creating foomodemode when the script says
		  define-majormode foomode
	  (prompted by report by Steven Lembark).
	+ make vile's symbol-tables accessible to vilemode in winvile.  This
	  required some renaming to avoid symbol conflicts:
	  + rename TEXT and PATTERN states in filters to sTEXT and sPATTERN
	  + rename RECTANGLE to rgn_RECTANGLE, and the other region-shapes
	    to match.
	+ add stub for vl_check_cmd() to filterio.c, to work when the some
	  filters are external, and the selected built-in or loadable filters
	  did not include vilefilt.l (reports by Adam Denton, Steven Lembark).

 20080113 (c)
	> Tom Dickey:
	+ another fix for offs2col0(), to reduce an off-by-one limit check.
	+ workaround for HPUX lex, whose YYSTATE variable is unusable.
	+ cleanup/reduce g++ warnings.
	+ improve configure check for iconv.
	+ add workaround in eightbit.c for systems without
	  nl_langinfo(CODESET)), e.g., OpenBSD.
	+ make memory leak-checking work for filters.

 20080106 (b)
	> Tom Dickey:
	+ fix an out-of-bounds error reported by valgrind in next_column().
	+ modify treatment of ":setl dos" to behave the same as ":set-dos".
	  That makes it possible to put a "vile:dos" in a modeline and make
	  vile convert the line-endings.
	+ trim trailing blanks from text handled in modelines in case there
	  was a ^M.

 20071231 (a)
	> Tom Dickey:
	+ add a null-pointer check in offs2col0().
	+ fix an arithmetic overflow on HPUX which caused mis-encoding of
	  files read via slowreadf(), e.g., in [Output].

Changes for vile 9.6 (released Thu Dec 27 2007)

	> Tom Dickey:
	+ update makefile.blc, adding charsets.c, eightbit.c and wcwidth.c
	+ build-fix for OS/2 IBM CSet (define a delay function for catnap).
	+ minor build-fixes for VMS:
	  + modify vmsbuild.com to simplify workaround for broken MMS 3.8
	  + provide dummy variables for xvile to reflect modularization changes
	    with respect to vmsvt.c
	+ documentation updates.
	+ minor fix to manfilt.c to pass-through UTF-8 codes by testing with
	  both iswprint() and isprint().

 20071224 (u)
	> Tom Dickey:
	+ separate vile's ttputc from termcap prototype to pass integer param
	  rather than just a char on Solaris.
	+ fix computation of columns needed to show UTF-8 codes in POSIX
	  locale.
	+ modify manfilt.c to provide UTF-8 output in a UTF-8 locale.
	+ minor fix to CF_FUNC_ICONV to link iconv on cygwin (noting that
	  cygwin has no useful locale support, it may someday).

 20071202 (t)
	> Tom Dickey:
	+ modify filters makefile "clean" rule to accommodate OSF/1 4.0D
	  whose make program leaves intermediate ".c" files for each lexer.
	+ change order of restore-flags and switch-buffer in
	  restore_buffer_state, avoiding an unnecessary prompt to discard
	  changes when attempting to read a buffer that cannot be read.
	+ increase a few table sizes to work with AIX 5.1 lex.
	+ modify check for lex version to avoid hanging on older platforms
	  where it would try to read from standard input even if it does not
	  recognize the option.

 20071125 (s)
	> Tom Dickey:
	+ several changes to provide usable Unicode support:
	  + add mode percent-utf8 to set a threshold for file-encoding mode
	    "auto" detection of UTF-16/UTF-32 files.
	  + file-encoding mode can be set to "auto", to detect UTF-16 files,
	    which are loaded as UTF-8.
	  + UTF-8 files are detected based on the file-encoding mode as well.
	  + Unicode values are displayed (where no locale controls) as "\uXXXX"
	    in 4 hexadecimal digits.
	  + add unicode-as-hex mode to override locale, forcing Unicode values
	    to display as "\uXXXX".
	  + for buffers with UTF-8 encoding, show illegal bytes as "\?XX".
	  + Unicode values can be inserted into buffers using ^VuXXXX form.
	  Limitations:
	  + terminal drivers support Unicode display in varying degrees:
	    + winvile - multicolumn characters, depends on font selection
	    + termcap/terminfo - relies on terminal emulator, knows about
	      multicolumn characters
	    + xvile - displays only single-column characters
	    + curses - depends on the curses library, e.g., ncursesw
	    + win32 console - not yet implemented
	  + combining characters are not combined.
	  + registers hold byte data, will show the UTF-8 encoding for data
	    rather than a \uXXXX (unless the file-encoding for [Registers]
	    is changed).
	  + some "characters" such as the report for yanked text is still
	    really a byte-count.
	  + inserting a \uXXXX into the minibuffer will display the UTF-8
	    encoding.
	  + regular expressions are not wide-character aware.
	  + UTF-16 and UTF-32 files are detected based on BOM and/or the
	    contents of the first line of the file.
	  + external syntax filters do not handle BOM or UTF-16, UTF-32.
	+ improve name-completion by saving/restoring the original window and
	  buffer when [Completions] closes, rather than the closest window.
	+ add output from rcshist to diffmode.
	+ add ".vbp" files to inimode.
	+ modify configure script to omit lex-filt.l from build if lex is not
	  really flex, since the tables are too large for the older program.
	+ modify spell.pm to use a temporary file to work with newer Perl's
	  that do not handle tied variables exactly as filehandles.
	+ update Kevin Buettner's email address.
	+ add -class option to xvile.
	+ remove a redundant XtDestroyWidget() from x_close() to quiet a
	  warning from XtRemoveGrab() when doing a ":q" from Xm-vile
	  (report by Chris Green).
	+ use va_copy() in dofmt() to work with Linux on powerpc
	  (report by Paul van Tilburg).
	+ add docbookmode
	+ improve 9.5m/9.5q check for file ownership, adding a warning message
	  for files which are ignored (report by Chris Green).
	+ change default for --with-locale configure option to mesh with
	  --disable-extensions.
	+ improve paste-performance in winvile by passing whole-line chunks
	  to the insert-function.
	+ improved cppmode's identifier-expr (report by Gerry Fredette).
	+ correct order of evaluation from 9.4w when setting record-separator,
	  which was setting "crlf" ending temporarily when computing the buffer
	  size, even when "lf" was intended.  That would cause an immediate
	  write from winvile (without change) for a buffer to write too many
	  characters.
	+ add syntax filter conffilt.l, for "ordinary" config-files.
	+ add "rectangle-insert-mode".
	+ fill in several omitted items in init_mode_value().
	+ add "describe-&functions" and "describe-$variables" commands.
	  (The latter is a stub for later).
	+ improve repainting in winvile while processing external command.
	  also modify keyboard handling to provide type-ahead while processing
	  external command.
	+ remove obsolete $tpause variable.
	+ modify majormode inferencing to check preamble for [Standard Input]
	  and [Output] buffers.
	+ add "&gtmotion" function for scripts.
	+ improve handling of enumerated values by forcing all to lowercase,
	  e.g., to eliminate the need for the special case in 9.1x to handle
	  "TRUE" and "true".
	+ revise lstrinsert() and associated logic which implements changes
	  to rectangles, e.g., with c^Aq, to ensure that it pads the change
	  with blanks rather than nulls (report by Paul van Tilburg).
	+ improve modeline support by ignoring strict "vi" modeline options
	  that are not recognized by vile, rather than reporting an error.
	+ use new module blist (binary search of lists) to reduce linear
	  searches in the places where btree is not already used.
	+ change rename-other-buffer command to other-buffer-rename, to avoid
	  name-completion conflict with rename-command (feedback from Steven
	  Lembark).
	+ remove obsolete check for ANSI qsort.
	+ improve vilefilt.l, highlighting mode names and displaying error
	  for unknown mode, function and state variables.
	+ fix typo in manpage.rc which broke use of pod2man in 9.5m
	+ add &pquote in manpage.rc, to allow it to format html output when
	  vile-manfilt, etc., reside in directories containing spaces in their
	  name.
	+ add ".reg" filetypes to inimode.
	+ add several package-related suffixes to sqlmode.
	+ add xpmmode

 20070603 (r)
	> Tom Dickey:
	+ amend makefile.in change for $(SRC) to use a translation rule that
	  works with IRIX64 (and some broken BSD) make programs.
	+ correct parsing/removal of "-i" option in winvile, taking into
	  account double-quoting of parameters and also options which have
	  parameters.
	+ make configure --with-no-leaks work for external filters, e.g., using
	  valgrind.
	+ add configure script check for tdelete(), provide a replacement if
	  not found (report by Gary Jennejohn).

 20070528 (q)
	> Tom Dickey:
	+ change configure script to check for ispell before aspell; Fedora 5's
	  problem with aspell was eventually fixed.
	+ make cursor-adjustment after paste in xvile dependent on whether the
	  pasted text ended with a newline (request by Eric Krohn).
	+ cleanup the bottom line on the screen when exiting the curses driver,
	  to match the termcap/terminfo driver (report by Chris Green).
	+ fixes for pl-filt.c, the perl highlighter:
	  + allow blanks before tag for here-document, e.g.,
		cat << 'TAG'
	  + allow '~' as a quote-delimiter (this is used by linklint).
	+ modify CF_IMAKE_CFLAGS to work with Solaris sed, which (unlike a
	  standard UNIX implementation) does not honor nested subexpressions.
	+ add rename-other-buffer command, use that to modify spell.rc so it
	  can work with scratch buffers which otherwise would be lost, e.g.,
	  "[Help]".
	+ add modelines for winvile.rc and w32ole.rc to set the majormode to
	  rcmode, and modify a special case in main.c to make "vile winvile.rc"
	  get the corresponding majormode.
	+ add some null-pointer checks in filters for result from flt_alloc().
	+ add a check in flt_alloc() in case the pointer has not been
	  allocated.
	+ derive $(SRC) from $(OBJ) in makefile.in, to avoid losing trace.c
	  in tags rule.
	+ check for empty/default "put" in line.c's PutChar() to avoid
	  attempting to remove a trailing newline from that, since the
	  corresponding line has already been freed as part of the undo process
	  (report by Paul Fox).
	+ use O_NONBLOCK if O_NDELAY is undefined, needed for a few platforms
	  which have the POSIX definition but not the legacy, e.g., Minix and
	  OS X.
	+ make autocolor work for curses-driver, e.g., --with-screen=ncurses
	  (report by Chris Green).
	+ widen the check for "winvile" in vileinit's initialization for win32
	  shifted cursor bind-key's.
	+ modify spell filter so that it can get VILE_SPELL_FILT from the
	  registry on win32.
	+ improve spell filter camelcasing that when parsing things like
	  "UXTerm" it splits off the "Term" as a possible word.
	+ amend 9.5m change to check for file ownership to ensure this is
	  only done for files that might be source'd.  It was checking files
	  for read/write too.
	+ correct syntax highlighting for end of JavaScript embedded in HTML,
	  which did not allow for the marker in an inline comment.
	+ modify "filename" shown in :show-filtermsgs to use the buffer name
	  if no filename is available.
	+ modify preamble patterns for shell modes such as awk, etc., to allow
	  for programs without an absolute pathname, e.g., "#! awk".
	+ modify the symbol-table lookup in filters.c to use tsearch() when
	  available.  For an 8Mb rtf file this improved performance by about
	  a factor of two (on Linux - Visual C++ has no tsearch).
	+ add configure check for getc_unlocked(), putc_unlocked() and
	  tsearch() to use in performance improvements for syntax filters.
	+ add syntax filter for RTF files.
	+ improve autocolor on win32 by not allowing the cursor to be repainted
	  while autocoloring is in progress.
	+ modify winvile's command-line parsing, adding "-i" option to perform
	  the case used for "Send To": use the part of the command line after
	  options as the filename and change working directory to match
	  (request by Larry Gensch).

 20070425 (p)
	> Tom Dickey:
	+ modify spell- and txt-filters to allow users to add words to their
	  respective ".keywords" files to override the builtin highlighting.
	+ correct check of return of ffread() in spellflt.l's workaround for
	  platforms such as win32 which have no usable popen().  That made
	  spelling checks require two ^X-i presses.
	+ modify spellflt.l to chop words according to Camel-case, so
	  tokens such as "ChopWords" are treated by the spell checker as
	  multiple words.
	+ fix a limit check in argc/argv[] parsing for winvile (report by
	  Larry Gensch).
	+ modify wvwrap.exe to work with pathnames containing "$", "&" and "'".
	+ change OPT_MULTIBYTE definition to depend on OPT_LOCALE.

 20070115 (o)
	> Tom Dickey:
	+ change Inno Setup script to not put version numbers on the SendTo
	  and context-menu entries.
	+ start adding support for UTF-8 (modes "byteorder-mark" and
	  "file-encoding").  The byteorder-mark is workable, but the
	  file-encoding is a stub.  This works to strip the BOM from files
	  as they are loaded, making syntax highlighting work for XML files.
	+ correct two places in exec.c which used skip_blanks() rather than
	  skip_space_tab() from 9.5l changes.  This caused the command
	  parser to treat ^K as a blank, breaking digraph.rc which uses
	  that character (report by Gary Jennejohn).

 20070108 (n)
	> Tom Dickey:
	+ add a character-class check to find_b_file() to prevent names such
	  as "<vile.1>" from being canonicalized into "vile.1" on win32 via
	  FindFirstFile().  This fixes a problem where ^X-n would sometimes
	  display the wrong buffer.
	+ add shifted-cursor-key bindings for winvile, like xterm.
	+ amend cursor-tokens mode so that ^X-e in a directory-buffer always
	  uses the whole line (no regular expressions).
	+ fix a null-pointer dereference in the cursor-tokens mode.
	+ minor fix to sh-filt.l to handle lines like
		: ${BUILD_CC:='${CC}'}
	+ improve iss-flt.l to highlight preprocessor lines.
	+ improve winvile.iss (Inno Setup):
	  + use values in patchlev.h to set the package version information.
	  + add context menu and Send To shortcuts
	  + install the keyword files
	+ add configure --with-valgrind option.

 20061212 (m)
	> Tom Dickey:
	+ add showvariables mode, for testing expressions used in [Variables].
	+ correct comparisons used for handling bounds in regular expressions,
	  e.g., the "2" in "\(this\|[l-m]\)\{2\}".
	+ change behavior of regular expression OR'd alternatives - only the
	  first match was used rather than the longest one.
	+ fix configure script macros which omitted X_EXTRA_LIBS in one case,
	  and repeated libs in another.
	+ fill in complete list of event names for xres.key from Xt/TMParse.c
	+ make ShowFormatted macro more configurable by allowing environment
	  variables $VILE_NROFF_FILT and $VILE_TABLE_FILT to override the
	  choice of programs therein.
	+ disallow source'ing from the current directory if the source'd file
	  might be writable by other users.
	+ improve fences in vbs- and vbmode.
	+ fix xresfilt.l; X resource files do not have embedded comments.
	+ minor improvements/fixes to &default, to allow it to assume that
	  '$' is implied for modes.
	+ modify locale initialization to work with koi8rxterm.
	+ add character classes [:ident:], [:octal:] and [:path:], and change
	  the association of \w and \W to [:ident:], making [:alnum:] no longer
	  include "_".
	+ add cursor-tokens mode to control whether vile uses regular
	  expressions, character classes or a combination to obtain tokens
	  from the screen.
	+ add $buf-fname-expr to show the combined bufname-expr, pathname-expr
	  used to interpret ^X-e.
	+ add bufname-expr, identifier-expr and pathname-expr buffer modes to
	  provide regular expression parsing of $bufname, $identifier and
	  $pathname in the show-variables command as well as for the related
	  expansion of tokens from the cursor position.  If the expressions are
	  empty, the code falls through to use the corresponding older
	  character-class parsing.  Default values are provided for each *-expr
	  mode.
	+ fix a case where set-window might remove the only window before
	  attempting to put a file in it.
	+ quote "$HOME" in CF_SUBDIR_PATH, for cygwin users.

 20061107 (l)
	> Tom Dickey:
	+ modify ":describe-bindings" to show whether the command accepts a
	  range, and whether it is undoable.
	+ add ":goto-percent" function.
	+ add (nvi/vim) ex-commands: a!, c!, i!
	+ add ":c" as alias for ":change-til" (nvi/vim).
	+ change unimplemented ":c" to ":co" (reference O'Reilly vi-book)
	+ fix makefile dependency for tags
	+ review/update use of "CNT" in describe-bindings
	+ revised command-line option parsing to use scripting more effectively:
	  + multiple startup files are allowed.
	  + most command-line options are translated to their equivalent script
	    and executed, rather than saving state for the most recent of each
	    option.  This makes the -s, -S, -g, -G options obsolete (but still
	    accepted).
	  + add "-c" option (the POSIX form of "+").
	+ modify configure script to use ncurses5-config, etc., if found when
	  handling the --with-screen=ncurses or --with-screen=ncursesw options.
	  It also is checked when handling the --with-ncurses option for the
	  termcap/terminfo driver.
	+ add suffix/name rules for "Jam" files.
	+ fix preamble pattern for pymode so it does not match a ":" line
	  which should be shmode.
	+ implement patterns as line-specifiers in ex-mode.
	  (this does not work with history-scrolling yet).
	+ remove incorrect check for empty parameter from which-menu from 9.4m
	  changes.
	+ check xvile menu to ensure that "C" header is given, adding a
	  dummy one if not (report by Chris Green).
	+ add checks to ensure that neither modelines nor majormodes can alter
	  these modes: all, crypt, readonly, viewonly.
	+ implement vi-style modeline, limited to setting buffer- and window-
	  modes, or majormodes.
	+ add "#" as an alias for number-lines-til
	+ improve highlighting of comment-lines (denoted by "--") in txtmode.
	+ fixes for termcap syntax highlighter, i.e., tcmode:
	  + allow description field to be empty
	  + color the "|" between aliases.
	  + improve string- and escape-parsing
	+ fixes for terminfo syntax highlighter, i.e., timode:
	  + allow description field to be empty
	  + color the "|" between aliases.
	  + allow aliases to contain blanks.

 20060924 (k)
	> Paul van Tilburg
	+ add syntax filter (mcrl) for mCRL/mCRL2 modeling language.
	> Tom Dickey:
	+ modify fileread() to ensure that the error-buffer is reset after
	  reading (or re-reading) a shell/pipe command, e.g., using ":e!".
	+ fix configure --disable-largefile option, from ncurses.
	+ minor fixes for nroff filter to improve rendition of groff's macros.
	+ add configure check for ncurses 5.2(sic) on FreeBSD, which was broken
	  by an incomplete set of changes to wchar.h (report by Chris Green).
	+ add configure check for aspell, whose attempt at a compatibility
	  script for ispell does not recognize ispell's options.
	+ workaround for breakage in FreeBSD's header files: updates to wchar.h
	  were not reflected in updates to curses.h (report by Chris Green).
	+ remove reference to obsolete http://www.vile.cx from README (report
	  by Paul Fox).
	+ update config.guess, config.sub

 20060625 (j)
	> Tom Dickey:
	+ fix expression for shmode $mode-filename to match ".profile".
	+ various small build-fixes (prompted by reports by Paul Fox, Clark
	  Morgan).
	+ amend 20050214 change to set_files_to_edit(), which caused partly-
	  read buffer to be discarded if ffgetline() was interrupted, e.g.,
	  by a ^C during a slow pipe read.  Now the buffer contents are
	  retained.
	+ update config.guess, config.sub

 20060531 (i)
	> Tom Dickey:
	+ fix error-reporting for a "~break" without a preceding "~while"
	  (report by Clark Morgan).
	+ minor fixes for tc-filt.l (termcap mode).
	+ fix x11.c for Motif broken in 9.5f cleanup (reported by Paul Fox).
	+ improve bas-filt.l by not highlighting incidental matches in the
	  attribute section of a Visual Basic form-file.
	+ correct parsing of hexadecimal constants in bas-filt.l
	+ add .ctl suffix for vbmode
	+ fix a case in bsizes() which subtracted line-ending from zero-sized
	  buffer when nonewline mode was set (Debian #368007).

 20060521 (h)
	> Clark Morgan:
	+ document write-all-buffers command.
	+ add echo-to-clipboard mode for Win32 hosts:
	  all text selected with the mouse is automatically
	  copied to the Windows clipboard. (U)
	> Paul Fox:
	+ updated contact information in README, vile.1 and vile.hlp
	> Tom Dickey:
	+ allow a version number in rbmode (ruby) preamble.
	+ add check in m4-filt.c for unbalanced quote, show the affected area
	  as an error.
	+ add ".ddl" suffix to sqlmode.
	+ add ".dsr" suffix to vbmode.
	+ fix makefile.blc, broken in 9.5f cleanup.
	+ fixes for 64-bit warnings of Visual Studio .NET 2003:
	  + modify Member_Offset() macro to cast the difference between
	    addresses to a long rather than casting a pointer to a long.
	    Use this flavor for Visual C++.
	  + size_t is not necessarily the same size as unsigned - modify code
	    to use size_t where it is consistent, otherwise cast as needed.
	+ updated for python keywords
	+ modify some lex filters, e.g., sql, to exclude \r in the places that
	  exclude \n, since \r should not be colored.
	+ fix for tb_enquote(); a value pointed to memory that had been
	  reallocated.
	+ make OBJEXT configure feature work for optional objects such as api.o
	+ updated configure macros CF_CURSES_CPPFLAGS, CF_CURSES_LIBS,
	  CF_NCURSES_CPPFLAGS, CF_PATH_SYNTAX, CF_WITH_IMAKE_CFLAGS,
	  CF_XOPEN_SOURCE.
	+ update config.guess, config.sub

 20060402 (g)
	> Tom Dickey:
	+ minor fixes to make most of the lex filters build with "old" lex,
	  e.g.,
		http://heirloom.sourceforge.net/devtools.html
	  Note: the lex-filt.l file is too complex for some older lex's.
	+ add lua mode
	+ save/restore curgoal variable in b2vprintf() to avoid side effects
	  when invoking "backward-row" or "forward-row" commands (report
	  by Chris Green).
	+ add delphi mode
	+ add "*.cs" files to grep macros on win32 platform
	+ improve csmode by making the section macros look for function
	  headers.

 20060219 (f)
	> Clark Morgan:
	+ update vile.hlp for %n and %N title format changes.
	> Tom Dickey:
	+ fix sh-filt.l for parameter substitutions containing an escaped
	  quote, e.g.,
		VERSION=${VERSION#*VERSION \"}
		VERSION=${VERSION%\"*}
	+ add csmode (for C# ".cs" files) and cs.key, using vile-c-filter for
	  parsing.
	+ modify ntwinio.c to invoke build_recent_file_and_folder_menus() in
	  the WM_INITMENUPOPUP event rather than WM_SYSCOMMAND.  This makes
	  winvile initialize the recent-folders and recent-files if one uses a
	  right-click on the title of the window.
	+ change winvile's registry subkey for recent-folders and recent-files
	  to match environment variable settings from 9.4r, e.g., change
		"Software\winvile\MRUFiles"
	  to
		"Software\VI Like Emacs\MRUFiles"
	+ add new symbols $return and $_ which can be used to implement simple
	  functions (request by William James).
	+ fix filters/makefile.2nd to allow build for gcov
	+ improve majormodes for complex fences by initializing the (non-string)
	  buffer mode values for submode groups according to the values in
	  the submode.  This makes ignorecase work as expected in the complex
	  fence matching for vbmode.
	+ add complex fences to vbmode.
	+ minor fix to bat-filt.l to avoid highlighting ".bat" as a string in
		call foo.bat
	+ change htmlfilt.l to highlight character- and URI-references as
	  numbers to make them distinct from strings with ordinary text.
	+ add makefile rules for installing/uninstalling files from doc
	  directory:
		install-doc
		uninstall-doc
	  as well as installing/uninstalling macros
		install-macros
		uninstall-macros
		uninstall-perl
	+ correct logic for goto-char, broken in 9.4za (report by William
	  James).
	+ fix change to cpp.key in 9.5e, which put the C keywords in the wrong
	  table.
	+ add spell.rc to makefile.wnt install rule.
	+ add test_io.exe rule to vmsbuild.com
	+ add TERM.clean(), TERM.unclean(), TERM.openup() to help move diverse
	  code out of termio.c
	+ modify var_TITLEFORMAT() only call set_editor_title() when setting
	  $title-format, and modify get_statevar_val() to handle some limited
	  recursion just in case there are other cases where it could be called
	  from the statevar.c module while retrieving a value.  This fixes a
	  bug introduced in 9.5e (report by Clark Morgan).
	+ update title when doing a "cd", in case it uses %r substitution.
	+ change %n in modeline substitutions to use file name (pathleaf)
	  rather than relative path (shorten_path).  Use %r for the latter.
	  (request by Clark Morgan).
	+ move VMS-specific code from termio.c to vmsvt.c
	+ remove unused start_debug_log() and mallocdbg() from main.c
	+ correct typo in ifdef for Visual Studio C++ 6.0 ifdef in w32ole.cpp
	  from 9.5e changes.
	+ move 9.5c check for stdout not a tty on startup to allow "vile -V"
	  to pipe to other programs.
	+ split-out nullterm.c
	+ add test_io stub, to help isolate dependencies of the I/O drivers.

 20060109 (e)
	> Clark Morgan:
	+ improved winvile's "flash".
	+ several changes to w32reg.c:
	  + if at all possible, don't register ole-enabled winvile using the
	    path ".\winvile.exe" (obscure cygwin corner case).
	  + remove use of toUpper(), which is not legit for winvile in this
	    context because the underlying mapping array is apparently _not_
	    initialized.  With this fix, "winvile -Ou" now displays the
	    editor's name in MessageBox text (rather than "").
	  + fixed lots of misuses of registry APIs (not properly testing return
	    code).  With fixes in place, winvile -Ou/-Or now properly reports
	    an error when registration/unregistration is attempted by an
	    account with insufficient privileges.
	+ add section definitions to vbmode.
	+ fix:  wvwrap caused winvile to show an 8.3 folder name in Recent
	  Folders list.
	+ fix:  when CD'ing to a directory stored in winvile's "recent folders"
	  list, the cursor stayed in the mini-buffer following a call to pwd().
	> Tom Dickey:
	+ adjust makefile dependencies to allow "make -j4" when building the
	  loadable filter configuration (report by Ciaran McCreesh).
	+ add "+", ",", "&", "@" and ";" to URL patterns in filters.
	+ modify nr-filt.l to allow for optional blanks between the leading
	  "." and the command.  This is common in nroff library macros, not
	  in manpages, etc.
	+ improve lex-filt.l, allowing for some flex extensions:
	  + allow code in action rules to not have curly braces
	  + allow curly-braces to surround chunks of flex actions
	  + "*" as a state name.
	+ add named marks for decimal digits (request by George Eccles).
	+ fix stray ^@'s on the winvile popup menu resulting from changes to
	  kcod2prc() for xterm-fkeys mode (report by Clark Morgan).
	+ add a call to set_editor_title() at the end of swbuffer_lfl() to
	  make title updates work properly with termcap configuration.
	+ add %n and %N substitutions for $title-format (prompted by Clark
	  Morgan comments).
	+ modify FreeBuffer() to clear window's buffer-pointers that point to
	  the freed buffer, e.g., to prevent reference to free memory in title
	  updates (report by Clark Morgan).
	+ check file descriptors in stdin_data_available() to avoid doing a
	  fdopen() on an invalid descriptor.
	+ add "#import" in cpp.key
	+ modify preamble for xml- and html-modes to ensure that the first
	  tag determines the type.
	+ fixes to makefile.wnt and mkprlenv.wnt to work with Visual C++ 7.
	+ correct padding of subtitle line for "Temporary variables" in
	  [Variables] buffer, which was applied to all temporary variable
	  lines.

 20051129 (d)
	> Tom Dickey:
	+ fix vl_ctype.h to avoid redefinition of UCHAR (reports by Clark
	  Morgan, Mark Robinson).
	+ fix lex-filt.l to build with lex (report by Dave Rolfe).
	+ fix include-path in makefile.wnt, makefile.djg makefile.icc to work
	  with split-out headers for regexp.c
	+ remove code for DISP_IBMPC
	+ remove makefile.emx and config.emx (obsolete).
	+ remove makefile.wat and makefile.tbc, since they used ibmpc.c

 20051123 (c)
	> Clark Morgan:
	+ remove an obsolete comment in macros.doc regarding underscore in
	  macro names.
	> Paul Fox:
	+ correct logic for check_percent_crlf(), ensuring that empty buffers
	  are not counted as having CRLF endings.
	> Tom Dickey:
	+ fix to_tabstop() function used for :describe-bindings to ensure that
	  a binding that happens to be 8 columns will still have a tab after
	  it.
	+ add a fflush() to ensure that the control string to reset xterm mouse
	  mode is written during ^Z handling (report by Fabien Coutant).
	+ add a call to term.kopen() in rtfrmshell(), making ^Z/resume work
	  properly with the curses driver (report by Fabien Coutant).
	+ make mouse work for curses driver just like the termcap/terminfo
	  driver.
	+ split xterm-specific code out of tcap.c as xterm.c, to share with
	  curses.c
	+ indent'd borland.c
	+ remove ibmpc.c (obsolete)
	+ check if stdout is not a tty on startup, print error message and
	  exit (request by Paul Fox).
	+ add mode xterm-fkeys, to allow termcap driver to generate
	  shift/control/alt modifiers for function keys.
	+ modify regexp.c so tab is not matched by \p or [[:print:]] for
	  consistency with POSIX regular expressions.
	+ modified regexp.c, add headers vl_regex.h, vl_alloc.h and vl_ctype.h
	  to allow it to be easily built outside vile (request by Adrian Kole).
	+ add KEY_BackTab to the output of show-key-names
	+ fix kcod2prc() so that a shifted-tab is converted to "Shift+^I"
	  rather than emitting a literal tab in the result.
	+ update vilemenu.rc fonts to work on Debian/testing.
	+ improve scrollbar/cursor tracking in winvile by calling
	  gui_update_scrollbar() when WFMOVE flag is set (report by Deraj
	  Puma).
	+ add a simple csvmode for ".csv" files.
	+ add ".ebuild" suffix for shmode.
	+ improve mode-pathname for xresmode to handle things like KOI8Term.

 20051002 (b)
	> Tom Dickey:
	+ update config.guess, config.sub
	+ improve os2vio.c, adding a check to distinguish between fullscreen
	  and VIO to allow using bright background colors in the latter (report
	  by George Eccles).
	+ add KEY_xxx definitions to OS/2 and Win32 drivers, defining up to
	  KEY_F35 for the former and KEY_F24 for the latter (report by George
	  Eccles).
	+ several improvements and fixes to lex-filt.l
	  + expressions for regular expression parsing are more complete, which
	    allows separating patterns from state lists.  That allows some
	    error-checking in the rules section to flag spurious whitespace
	    after a regular expression.  The more-complete regular expressions
	    make the parser much larger (about 5 times the original size).
	    A rewrite in C might be shorter.
	  + ignore case of "%s" vs "%S" or "%state", etc.
	  + parse the pattern names, applying highlighting to the names where
	    they are embedded in regular expressions.
	  + parse the "%s" (state) lists, applying highlighting to the states.
	  + handle flex's <<EOF>> token.
	  + handle character classes in the RANGE pattern.
	+ remove an update() call from the logic in input.c which decodes
	  hex/octal input after a ^V.  That caused the screen to move the view
	  according to the address in the command, e.g.,
		:%s/^Vx12
	  would scroll to the bottom on entry of the "x" (report by Daniel L
	  Ashbrook).
	+ correct behavior of set-dos command, which did not recompute the
	  buffer-size.
	+ make end-of-token test for store-proc consistent with bind-key,
	  i.e., alphanumerics and hyphen.  Amend that test to allow underscore
	  (report by George Eccles).

 20050905 (a)
	> Tom Dickey:
	+ review/improve vl-filt.l based on Verilog LRM draft
	+ add configure check for lex's which support character classes, and
	  add filters/noclass.sh to work around those which do not.
	+ improvements to configure script from ncurses:
	  + improve check for Intel compiler warnings
	  + improve check for gcc version
	  + define _QNX_SOURCE for QNX
	+ revert part of 9.4n, which caused readin() to return false if there
	  was no filename associated with the buffer.  Doing this broke some
	  macros such as which-keywords (using buffer constructed by the
	  macro).  Previously it returned true, indicating success.
	+ improve parsing of range expressions in lex-filt.l, fixes a case
	  exposed by css-filt.l
	+ correct a case where slowread() in dosmode would compute an incorrect
	  buffer size.
	+ modify bat-filt.l to highlight "echo." consistently with M$ usage.
	+ modify bat-filt.l to highlight "%*".
	+ add syntax filters for bnf, css, midl, php and wbt, for WinBatch.
	+ modify syntax filters to use flex's character classes.

Changes for vile 9.5 (released Mon Jul 25 2005)

 20050717 (zb)
	> Clark Morgan:
	+ if winvile is minimized, don't resize client rectangle.  This fixes
	  a case where minimizing the editor with more than one window, then
	  restoring it, only one window was shown.
	+ amend change from 9.4p which changes the pointer symbol; fixes a case
	  where the pointer is not restored when moving along a mode line onto
	  the scrollbar.
	> Tom Dickey:
	+ rename spawn() to vl_spawn(), since QNX has a conflicting symbol.
	  Doing this makes shell and pipe commands work for QNX.
	+ amend change made in 9.4za to check if the compiler can support
	  the -U/-D combination.
	+ fix sign-extension problem in ldelete() caused by B_COUNT change
	  in 9.4u (report/analysis by Clark Morgan).
	+ remove a chunk in tcap.c which assumed that all xterms implement
	  scrolling.  Since the test-variable could be set when the terminal
	  implements xterm-mouse (termcap Km or terminfo kmous), then this
	  could cause misbehavior.
	+ fix an ifdef for O_NDELAY in termio.c that broke BeOS build in 9.3e
	+ amend test for struct dirent64 to ensure it is used only when it is
	  part of the prototype for readdir().
	+ apply change used in 9.4x for built-in filters to fix redefinition
	  to use this in loadable and external filters.
	+ compiler-warning fixes for various platforms.

 20050710 (za)
	> Peter Prymmer:
	+ fixes for building on VMS
	> Tom Dickey:
	+ suppress a check for VMS from changes to quickreadf() in 9.4u which
	  made vile unable to read VFC files.
	+ improve configure checks for _XOPEN_SOURCE and _POSIX_C_SOURCE by
	  not adding a -U option to cancel conflicting -D's, but by stripping
	  the conflicting option from $CFLAGS and $CPPFLAGS.  This addresses
	  compilers that do not process options left-to-right (report by Urs
	  Jansen).
	+ update list of warning options for Intel C compiler for 9.0 running
	  on 64-bit platform.
	+ modify configure script to allow it to define _GNU_SOURCE for Intel
	  compiler (report by Urs Jansen).
	+ deprecate TYPECAST() macro by using it only for gcc
	+ add ".asp" to jspmode suffixes

 20050626 (z)
	> Tom Dickey:
	+ add ".dcl" filetype for dclmode.
	+ add ".cls" filetype for vbmode, add symbols for Visual Basic class
	  modules to vb.key
	+ fix to ntwinio.c change from 9.4y which broke parsing of multiple
	  filenames on the command-line.

 20050618 (y)
	> Tom Dickey:
	+ revert 9.4p change to vilefilt.l
	+ add ".mm" to nroff mode.
	+ modify ShowFormatted macro to support "-mm" macros.
	+ modify dequoting of winvile's command-line in ntwinio.c to allow for
	  quoting to be within parameters, e.g.,
	  	winvile +"100" makefile
	+ fix a pointer for tgetstr() result which was not initialized for the
	  termcap driver.  The corresponding terminfo call does not use the
	  pointer (since 9.3d).

 20050612 (x)
	> Tom Dickey:
	+ fix a problem with curses driver where doing
		:r !date
	  would result in garbage screen display.
	+ workaround for redefinition via includes generated by flex before
	  filters.h was included, by prepending that include to flex's output.

 20050608 (w)
	> Tom Dickey:
	+ eliminate some strlen() calls to improve performance by caching the
	  record separator value and its length in BUFFER.
	+ fix inconsistent use of dummy value for DIRECTIVE in filterio.c
	  (report by Clark Morgan).
	+ change TILDE to CH_TILDE to avoid symbol conflict on AIX.
	+ improve largefile support by ensuring that _LARGE_FILES and/or
	  _LARGEFILE_SOURCE are defined before including any header file.

 20050530 (v)
	> Tom Dickey:
	+ add reader-policy mode, which allows one to control whether vile will
	  fall-back to slowreadf() if it encounters an error.  The case where
	  quickreadf() would fail that slowreadf() might succeed is for reading
	  a very large file when memory was also fragmented.  But using
	  slowreadf() would (besides being much slower), also use even more
	  memory in this case, making it unlikely that it would succeed in any
	  case (discussion with Dave Kristol).
	+ fixes to build clean(er) with Intel compiler:
	  + adjust ifdef's for fallback prototype for open() in case it is
	    really open64().
	  + add a "%u" format type to dofmt(), use it to display file-sizes.
	  + define DIRENT to struct dirent64 for the case where
	    _FILE_OFFSET_BITS is 64 and _LP64 is not defined.  Use a configure
	    script check to ensure the type exists.
	  + add/use function bpadc() to replace "%P" and "%Q" formats in
	    dofmt().
	  + add/use function format_int() to replace "%r" format in dofmt().
	+ modify name-completion to allow completion of filenames containing
	  a '$':
	  + modify shell_complete() to only try to expand $variables if the
	    '$' is not escaped.
	  + modify glob's expansion of $variables to ignore a trailing '$' or a
	    '$' not followed by a name-character, as well as a '$' preceded by
	    a backslash.
	  + split string_has_wildcards() into two parts; the new part (called
	    from the old) string_has_globs() checks only for wildcards that are
	    processed after expanding tilde and environment variables.
	  + escape backslashes and $'s in expand_wild_args() to account for the
	    checks for backslashes added in this change.
	+ restore default search for buffer by number omitted in changes to
	  use for-buffer mode, e.g., ":ki 1".

 20050522 (u)
	> Paul Fox:
	+ relax a check in ":w" by checking if the given name differs from
	  the current filename.  If so, do not require ":w!" to write a
	  readonly file to a different location.  This allows one to reuse
	  the filename history for ":w".
	> Tom Dickey:
	+ add mode for-buffers, which specifies whether kill-buffer (and
	  for-buffers) command use globbing or regular expressions (request
	  by Clark Morgan).
	+ fix ifdef's in filters.h to allow configuring --with-no-leaks when
	  no built-in filters are used.
	+ add configure script option for largefile support.
	+ modify computed percentages in ruler and ^G command to avoid overflow
	  (report by Dave Kristol)
	+ modify interfaces of ffread() and ffsize() to allow results to be
	  returned as ULONG.
	+ change B_COUNT to an unsigned type (ULONG), to allow for reading
	  files larger than a signed value would allow (report by Dave
	  Kristol).
	+ add command for-buffers, which performs the same command for the
	  specified buffers.

 20050515 (t)
	> Tom Dickey:
	+ add --disable-imake option to configure script, from xterm.
	+ skip some unnecessary checks in configure script if imake is not
	  found.
	+ add ".ph" and ".pph" to esqlmode suffixes.
	+ add parsing in perl filter for range operator ".." (reported by
	  H C Dickey).
	+ correct definition of nmakemode, which left fence operations out
	  since they were assigned to makemode.
	+ add syntax filters for iss- and ini-modes.
	+ add iss-, nsis- and ini-modes
	+ improved the winvile.iss script, allowing installer to set system-
	  or user-environment variables, or to put the corresponding paths
	  in the system- or user-registry settings.
	+ correct parameters of "~local" in pictmode.rc, which omitted the
	  "%" designating local variables.

 20050324 (s)
	> Tom Dickey:
	+ improve rubyfilt.c
	  + check for token beginning here-document cannot begin with a digit.
	  + improve operator-parsing, use that to fix a case where "<<"
	    operator was confused with the beginning of a here-document.
	  + treat newline as a statement terminator (report by Paul van
	    Tilburg).
	+ correct a loop limit in on_double_click(), used by winvile.  Double
	  clicking on the first line of a file would (depending on content and
	  the build configuration) set the beginning of the region before the
	  line.
	+ add VILE_HELP_FILE to the list of environment variables managed by the
	  Inno Setup script.
	+ fix a missing include for w32vile.h needed to compile filters on
	  win32 (also reported by Larry Gensch).
	+ correct extent of highlighting in update_line_attrs() when number
	  mode is active.

 20050313 (r)
	> Tom Dickey:
	+ modify environment variable lookup for win32 to look in the registry
	  for the VILE* environment variables:
		VILEINIT
		VILE_HELP_FILE
		VILE_LIBDIR_PATH
		VILE_STARTUP_PATH
		VILE_ERROR_ABORT
	  This change is made to make it more easily installable; Windows
	  changes to environment variables apparently do not take effect until
	  the machine is rebooted.  Registry changes take effect immediately.
	+ improve checks for _XOPEN_SOURCE, _POSIX_C_SOURCE in configure script.
	+ improve sql-filt.l's parsing of SQL*PLUS
	+ modify spellflt.l to allow it to be used in winvile, using npopen,
	  etc.
	+ add package script for winvile using Inno Setup.
	+ rename PATCHLEVEL to VILE_PATCHLEVEL to avoid conflict with Perl's
	  symbol.
	+ move the version definition from edef.h to patchlev.h to reduce the
	  number of places to change.
	+ modify manpage.rc to check if txtmode exists before attempting to use
	  it.
	+ add parsing in rubyfilt.c for %x, like %Q.  Change parsing for
	  backtic to match %x (report by Paul van Tilburg).
	+ correct quoting for here-document beginning in rb-filt.l (report by
	  Paul van Tilburg).
	+ modify interpretation of ~local, ~with, ~elsewith and ~endwith so
	  they are within the normal ~if/~endif hierarchy.  This makes the
	  9.4q change for SpellFilter work as intended.
	+ fixes for tbuff.c to ensure TBUFF is updated properly when cancelling
	  a macro prompt, e.g., with ESC (report by Paul Fox).
	+ add configure check for popen(), use corresponding ifdef's to enable
	  console version of vile-spell-filt.exe on win32.

 20050213 (q)
	> Tom Dickey:
	+ several improvements to rubyfilt.c:
	  + show variable-expansion within generalized double-quote %Q.
	  + implement [] ranges in regular expressions.
	  + fix handling of escaped characters, which were not always ignored.
	  + correct logic for regular expression options, which used the wrong
	    location (noticeable if there was a newline nearby).
	  + add check to distinguish '/' operator from regular expression.
	  + add parsing for alias statements.
	  + add parsing for def statements.
	  + add parsing for class definitions to avoid conflict with
	    here-documents.
	  + add parsing for "$1" and similar symbols
	  + add parsing for "1.upto(n)" and similar operators applied to
	    constants.
	+ add vbsmode using ".vbs" suffix based on basmode.
	+ fix two issues related to rbmode (Debian #292652):
	  + correct order in flt_lookup(), which tested filtername value after
	    checking against built-in modes.  Since rbmode should use
	    vile-ruby-filt, that caused it to use vile-rb-filt instead.
	  + rb-filt.l (vile-rb-filt) had a "?" in the expression which begins
	    here-document that applied to the "<<-" string.  It should have
	    applied to optional whitespace after that.
	  With the combination of the two, files containing a quoted name were
	  treated as a here-document.  This bug was exposed by a difference in
	  order of evaluation that came from quoting the "<<-" to work with an
	  old version of flex.
	+ change highlighting for misspelled words to Error class.
	+ remove "-x" option from fallback definition of SPELL_PIPE, since that
	  is only useful if ispell happened to be installed as "spell".  For
	  Solaris, "-x" means something entirely different.
	+ add environment variable VILE_SPELL_FILT to vile-spell-filt, to allow
	  overriding the compiled-in program and options used for performing
	  the lookup.
	+ move ~local declaration for SpellFilter inside ~if statement where
	  they are used; otherwise using external filter does not work.
	+ add limit-check for kcod2escape_seq().
	+ correct mode-filename for vilemode, which needs an optional "." to
	  match ".vilerc".
	+ correct sql-filt.l, which did not restore default symbol table after
	  processing an token with the sqlplus symbol table.

 20050202 (p)
	> Clark Morgan:
	+ make ":w! cygwin_rdonly_ntfs-based_file" work.  Tested as follows:
	     win98 -- fat32
	     win2k -- fat32 and ntfs
	     winxp -- fat32 and ntfs (with administrator privs and no privs)
	+ when selecting text, show I-beam cursor (winvile only).
	+ when selecting a movable mode line, show a double-headed, north-south
	  cursor (winvile only).
	+ when moving the mouse over a movable mode line, show a double-headed,
	  north-south cursor (winvile only).
	+ don't allow mouse capture if LMB is pressed in the area encompassing
	  the editor's last two lines (message line and nonmovable mode line).
	  Don't allow mouse capture if LMB is pressed on movable mode line.
	  Corrects long-standing winvile bugs.
	+ add graphical CD to [win]vile via new command "wincd".  The graphical
	  CD is also accessible via winvile's system menu and right mouse popup
	  menu.
	+ ensure that files created via winvile's "Save As" and vile's ":f"
	  commands are remembered in winvile's "Recent Files" list.
	+ winvile uses status return of edit_recent_file()/cd_recent_folder()
	  as negated argument to update(), which subsequently moves cursor out
	  of message line if either function reports an error.
	General comments:
	- the editor's bottom mode line is not movable.
	- I tried making similar cursor shape changes for console vile (when
	  LMB is clicked) but Windows XP would not allow the vile process to
	  change the cursor of the parent window, as returned by
	  GetForegroundWindow().
	> Tom Dickey:
	+ correct state-switching in sh-filt.l for backtic's; it was not
	  flushing the buffer used to build up quoted text (since 9.3e).
	+ add a null-pointer check in write_states() of lex-filt.l which did
	  not appear to be needed (since 9.3q).
	+ ".jsp" files are really (close to) a variety of HTML files.  Add
	  simple support for JSP in htmlfilt.l
	+ fix pl.filt.c to check for arrows inside parenthesis, e.g.,
		if ($a->y != $b->y) {return $a->y <=> $b->y}
	+ modify vilefilt.l to disallow escaped single-quote in single-quoted
	  strings, and to flag unterminated strings as an error.
	+ modify tb_enquote() and tb_dequote(), eliminating feature that
	  allowed single-quotes to be escaped in a single-quoted string.  That
	  led to inconsistent results when a string contained a trailing
	  backslash.  Noticed this when using shifts.rc on an X app-defaults
	  file, this also appears to fix a related report by Clark Morgan.
	+ correct mode-filename for RCSmode from 9.4o changes.
	+ review/update some beginDisplay/endofDisplay checks, making these
	  use assert's whenever tracing is compiled-in.
	+ add check in vl_restore_modes() to ensure that it does nothing if
	  vl_save_modes() was not called.  For some platforms, that would cause
	  screen or script to die if the output of "vile -V" were redirected.

 20050124 (o)
	> Tom Dickey:
	+ correct change to tb_error() which freed data buffer without also
	  resetting the corresponding size recorded for the buffer.

 20050124 (n)
	> Clark Morgan:
	+ remove deprecated SHGetMalloc() from w32oo.cpp, tested on WinXP, 2K,
	  98.
	+ fix a case where spawned winvile console would sometimes be missing
	  error message.  For example, if winvile is invoked from a cygwin
	  shell command line and a command is spawned like so:
		:!command_that_generates_error
	  Then _no_ error text appeared in the spawned console window.
		:!mkdir name_of_existing_dir
	  Tested on win2K, xp, win98.
	+ several changes to allow winvile to remember recent files and folders
	  + winvile remembers up to 20 of the files it has recently
	    opened/created (feature disabled by default).
	  + winvile remembers up to 20 of the folders it has recently visited
	    via an implicit or explicit cd (feature disabled by default).
	  + Remembered files/folders are accessible and "replayable" from
	    winvile's system menu.
	  + Two new modes:  recent-folders and recent-files specify maximum
	    number of folders/files that may appear in winvile's system menu.
	    Range is 0-20; a value of 0 disables feature.  (U)
	  + Two new commands:  purge-recent-folders and purge-recent-files
	    clear the list of folders/files that appear in winvile's system
	    menu.
	  + modes and commands work in console mode (minimizes conflicts when
	    sharing a single vile.rc), but the files/folders that console vile
	    accesses are _not_ remembered.
	  + tested on win98, win2k, XP.  Changes test-compiled on linux.
	  + tested with multiple users on XP, as well as in the context of an
	    unprivileged user.
	+ improve the winvile resize/status window:
	  + make resize window wide enough to show geometries that exceed 99
	    columns
	  + make resize window continually center itself over the editor's
	    frame (NT and XP only).
	  + Tested on a variety of screen geometries on NT and XP using both
	    large and small fonts. Cross-checked on win98.
	+ amend oleauto.doc to tell how to make wvwrap work with XP service
	  pack 2.
	+ update vile.hlp to describe new modes.rc file.
	> Tom Dickey:
	+ review/correct places where result of malloc is not checked for null.
	  Test using small memory limit (addresses report by Emil Rojas for
	  processing very large tags files, and earlier report by George
	  Eccles).
	+ change gutter width for line-numbers from 2 to 1.
	+ work around for Borland C++ 5.5 to ignore EPIPE on an end-of-file.
	+ work around in mlwarn() to report system errors with Borland C++ 5.5,
	  whose strerror() values have trailing newlines.
	+ indent'd btree.c
	+ change return-value of readin() to false if the given filename is
	  empty (report by Clark Morgan).
	+ ensure that all mode-filename values are anchored to avoid confusing
	  them with piped commands.
	+ modify diffmode to use pipe output as a mode-filename value, and
	  modify mode inference to allow this special case.  Pipe output is
	  not checked for suffixes, since its filename value may contain
	  many filenames.

 20041215 (m)
	> Tom Dickey:
	+ modify x11.c, ntconio.c and ntwinio.c to make modifiers work with tab
	  key, e.g., to add shift-key as a back-tab key.
	+ add macro show-each-buffer (file showeach.rc), which splits up the
	  screen into equal chunks to display as many of the non-scratch
	  buffers as possible.
	+ modify macro parameter evaluation so it does not attempt to compute
	  a value for function tokens or goto-labels.  Otherwise pathnames such
	  as "~\foo" look like macro directives and produce an error.
	+ correct slash/backslash translation (win32, etc) for some of the
	  built-in functions; the translated result was not actually the return
	  value:  &path and &pcat.
	+ correct flags in modetbl used to annotate trace of &seq and a few
	  other operators.
	+ correct length computed for $bflags variable; an empty string was
	  returned.
	+ add a section on command-line options to doc/filters.doc
	+ add macro which-filter to show which locations would be checked for
	  an external filter.  If the filter happens to be built-in, this is
	  also noted, in the message line.
	+ improve 'eval' command, provide for mixture of functions and other
	  tokens which are passed to the script interpreter.
	+ modify SpellFilter macro to use the results from [Filter Messages]
	  with the error-finder to step through the misspellings.
	+ add macro show-filtermsgs to show syntax filter messages, setting the
	  list to the error-buffer to provide simple stepping through the
	  errors which are found.
	+ add commands popup-buffer and popdown-buffer, which open/close
	  windows for the given buffer rather than changing the current window
	  to show a different buffer.  The popup-buffer command is a wrapper
	  for the existing logic used for help and similar commands.  The
	  popdown-buffer command differs from delete-window by closing all
	  windows for the given buffer.
	+ remove the pre-9.4e workarounds for set-highlighting and
	  which-keywords macros.
	+ modify kdb_reply() to shift the minibuffer left/right as needed after
	  doing the initial tab of a name-completion, in case that left the
	  cursor position past the end of the line (report by Paul Fox).
	+ add new operators to make it simpler for macros to check for
	  features: &isa, &classof and &mclass.
	+ modify historical-buffer to allow tab/back-tab to cycle through the
	  first 9 buffers, solves the problem of seeing more than the first
	  few possibilities on the message line.  Toggling with the repeated
	  '_' selects the first buffer shown.
	+ add back-tab to termcap/terminfo driver as a bindable key.
	+ modify configure script to make builtflt.h part of $(BUILTHDRS) to
	  simplify "make sources" rule.
	+ modify htmlfilt.l to match </script> in the middle of a line to
	  accommodate pages where the script is given by a "src=".
	+ add filtermsgs mode, for built-in filters to report syntax errors
	  into [Filter Messages] buffer so that one may use the error finder to
	  locate these (motivated by a 200,000 line xml file).
	+ correct state manipulation in xml-filt.l, which was confused by
	  CDATA pattern.
	+ correct $CPPFLAGS for linting configurations with built-in filters.
	+ correct typo in configure script from 9.4k fixes for iconv_open().

 20041207 (l)
	> Clark Morgan:
	+ modify special treatment of "#" which prevents it from being shifted
	  with ">>" by disabling that when cindent is unset.
	+ reenable SHIFT+INSERT in the win32 mini-buffer (for both vile.exe and
	  winvile.exe).  Unfortunately, the cygwin shell eats SHIFT+INSERT for
	  console vile (mini-buffer input only), but I don't think I can do
	  much about that.  So, now, it's once again possible to:
		$ vile somefile
		/<shift+insert>     <- search for string sitting on clipboard
	> Tom Dickey:
	+ correct computation for 0-based versus 1-based column/line values in
	  the error-finder; the values were computed but not saved in the
	  compiled error expression's state.
	+ improve complex fences for adamode.
	+ add ".termcap" and ".terminfo" suffixes for respective majormodes.
	+ add ".jad" suffix for javamode for Java Disassembler.
	+ add a few ex-commands: nu, j!, wq!
	+ change kbd_reply() to check if the current value is the ERROR token,
	  and to clear it in that case.  This fixes a bug which would show the
	  trailing null (since the computed length for ERROR ignores the TBUFF
	  length), e.g.,
	  	setv $title=ERROR\^@
	+ modify statevars.c to make read/write of $title consistent, i.e.,
	  will warn that it cannot be set in the termcap configuration.
	+ correct logic for changing the xterm-mouse via the termcap driver.
	  It was not opening or closing the keyboard, not both, which would
	  leave xterm switched from the alternate screen.
	+ modify [Messages] buffer so that it is only invisible, not a scratch
	  buffer.  The latter makes it be automatically removed after viewing
	  and closing the window.
	+ fix search scanner to know about left-margin property.
	+ review/repair logic for OPT_CACHE_VCOL in dot_to_vcol(), in
	  particular making it work properly with [Registers] and similar
	  buffers having a left-margin property (reported by Paul Fox).
	+ fixes to build with Intel 8.0 compiler on Linux:
	  + add check for _XOPEN_SOURCE, _POSIX_C_SOURCE in configure script.
	  + add macros DECL_EXTERN_CONST() and DECL_EXTERN().
	  + turn off its so-called default gcc-compatibility and set compiler
	    warnings specially.
	+ fixes to build with Borland C++BuilderX 1.0.  It requires a rename
	  of regexec/regcomp to avoid calling like-named functions in a DLL.
	+ fixes to build with lcc-win32 (though its makefile-generator is
	  limited and requires one to edit the makefile).
	+ correct configure script macro CF_FUNC_ICONV so the script does not
	  exit with an error if the system does not happen to have iconv.
	+ some fixes to compile filters with Tru64 4.0g's lex/flex:
	  + ensure angle brackets in patterns are quoted
	  + put whitespace between command/value in options such as "%o3000".
	+ add pattern for "ant" (Java make-program) to a few of the patterns
	  in finderr.c
	+ modify ".table" command in filters parsing to read the user's color
	  definitions, e.g., from .vile.keywords, as is done in a ".source"
	  command.
	+ add a ".brief" to filters parsing, which uses "?" to match zero or
	  all of the following characters, in contrast to ".abbrev" which uses
	  "*" to match zero or more of the following characters.
	+ modify sql-filt.l to distinguish between SQL*PLUS and SQL, PL/SQL.
	  The latter delimit statements with semicolons, while the former makes
	  that optional, using newlines.
	+ modify call on insert_keyword() to use the given name, e.g., a class
	  rather than its attribute.  This fixes a bug exposed in sql-filt.l
	  by changing sql.key to use ".default" to simplify it.
	+ add check for setlocale() returning null.

 20041107 (k)
	> Tom Dickey:
	+ modify glob_match_leaf() to work with 8-bit characters.
	+ correct loop in glob_match_leaf(), which did not handle strings such
	  as "[!strings xyz-]".
	+ correct expression in filters.rc for %filters-modes (report by
	  Duncan Sargeant).
	+ fix conflict between DECWindows Motif/Xt libraries and the non-Motif
	  Xt library in vmsbuild.com
	+ make xvile compile properly on VMS by defining XTSTRINGDEFINES.
	+ modify catnap() function to use IEEE floating point on IA64, since
	  that platform does not support F-floats.
	+ modify vmsbuild.com and descrip.mms to work with IA64.
	+ add $goal-column variable for debugging.
	+ fix quoting and parameter list for iconv_open() in configure macro
	  CF_ICONV_FUNC.

 20041031 (j)
	> Clark Morgan:
	+ add "explicit" and "typename" to cpp.key
	+ correct parameter lists for chgd_icursor() and chgd_popupmenu()
	  in ntconio.c and ntwinio.c which were not updated in 9.4b, which
	  added a BUFFER* parameter.
	> Tom Dickey:
	+ add parameter to hst_append() to control logic which is used to build
	  up shell commands for replay.  Use this parameter to suppress shell
	  command construction when prompting for regular expressions and other
	  strings that cannot be shell commands (report by Daniel L Ashbrook).
	+ save/restore MK in kbd_reply() to work around lost value of MK when
	  swbuffer() is called as a side-effect of name-completion.  This
	  caused commands such as
	  	!Gls /tmp/<tab><tab>
	  to report a "BUG: no mark" (report by Daniel L Ashbrook).
	+ modify PromptAndSet() to allow a cancelled prompt for variable's
	  value to store an ERROR token, which can be tested in scripts with
	  &error (request by Clark Morgan).
	+ modify filters.rc, modes.rc and vileinit.rc as follows (reports by
	  Clark Morgan and J Chris Coppick):
	  + filters.rc turns on automatic syntax highlighting only if both
	    builtin-filters and colors are available.  Before 9.4i, vileinit.rc
	    turned on automatic syntax highlighting.
	    NOTE: if you are using external syntax filters, vileinit.rc no
	    longer automatically enables highlighting for this case.  The
	    builtin or loadable filters perform better for most systems.
	  + add a variable %filters-modes, set in modes.rc to be tested by
	    filters.rc to ensure that modes.rc is source'd if needed.  Both of
	    these files are sourced by vileinit.rc in 9.4i, but not everyone
	    uses vileinit.rc
	  + update vile.hlp to reflect these changes.
	+ ensure values for $bchars and $blines are up-to-date, e.g., if
	  which-keywords is called twice in succession in the same macro the
	  values were not, causing the [Which Keywords] content to be repeated.
	+ indent'd vmsvt.c, vms2unix.c
	+ add VMS mode record-attrs, modify logic in vms_creat() to use this
	  information to make the default VFC files written from DCL editable.
	  Those use PRN (print file format) record attributes (report by
	  Jordan Henderson).
	+ modify terminal settings for VMS to improve type-ahead.
	+ add xterm-style bindings for F1-F5 to vmsvt.c
	+ modify which.rc to use &pcat rather than $pathname-separator, since
	  the latter is ambiguous on VMS.
	+ modify infer_majormode() to work with VMS pathnames.
	+ correct logic for VMS pathnames so that a directory buffer will,
	  as on Unix, give the same buffer name as the directory leaf.
	+ improve fakevms test-driver and related OPT_VMS_PATH code for VMS
	  pathnames, making name-completion work for VMS pathnames on Unix.
	+ fix a memory leak in old_namebst().
	+ modify tb_bappend() to avoid memcpy() with the same source/target
	  address (valgrind warning).
	+ add/use CAN_TRACE symbol to allow configure --with-no-leaks, since
	  the unfilter program otherwise fails to link in that configuration.
	+ add some discussion of character classes to vile.hlp
	+ fixes for vile-9.4.spec, adds vile-pager to list of installed files
	  and installs manpage in the normal man-directory (patch by Radek
	  Liboska).
	+ add configure option --with-iconv, use that to extend termcap driver
	  to allow it to handle encodings other than Latin-1, e.g., Latin-2
	  (request by Radek Liboska).
	+ extend workaround for UTF-8 locale in termcap driver to translate
	  UTF-8 input to Latin-1.
	+ improve/extend checks for locales which correspond to 8-bit character
	  encoding, resetting to POSIX locale (ASCII) if the nl_langinfo()
	  function returns a value that does not look like ASCII or ISO-8859-x.
	  This change applies to the termcap/terminfo and X11 drivers.
	+ show locale and encoding values in header of [Printable Chars].
	+ add $encoding and $locale variables to show what vile's internal
	  8-bit encoding and locale are set to.
	+ turn on locale feature on win32
	+ workaround for broken locale table on Solaris8 and Windows2000, etc.,
	  which shows tab as both as printable and a control character.  The
	  ISO C standard states that control characters are not printable.
	+ add nmakemode, for special cases such as M$'s ".dsp" files.
	+ add syntax filter for AutoIt version 3 and majormode au3mode.
	+ correct pattern for HEX in bas-filt.l

 20040808 (i)
	> Mark Robinson:
	+ split-out modes.rc from filters.rc to make configuration more
	  flexible, e.g., for --disable-filters.
	> Tom Dickey:
	+ add named operators (eq, ge, gt, le, lt, ne, or, and, cmp, not, xor)
	  to perl syntax highlighter check for tokens that may precede a
	  pattern (report by Daniel L Ashbrook).
	+ fix escaping within strings for tcmode; it was looking only for ":"
	  or newline, but any character could be escaped.
	+ fix highlighting of aliases without description in tcmode and timode.
	+ add ".tic" as a suffix for timode.

 20040620 (h)
	> Tom Dickey:
	+ correct which-keywords to work with 9.4e change that appends "mode"
	  to majormode parameters of procedures.
	+ rename utility macro which-filename to WhichFilename, to avoid
	  conflict with which-filter.
	+ add/use tb_setlen() in run_func() to update the lengths of TBUFF's
	  which are built by unusual methods, e.g., allocating a large TBUFF
	  and using lengthen_path() to rewrite its contents.  This was not
	  a noticeable problem until run_func() called tb_enquote(), which
	  assumed the TBUFF length was correct.
	+ modify FindMode() in perl.xs to dequote results from evaluating
	  a function, since 9.4f changes cause string results of functions to
	  always be quoted.

 20040617 (g)
	> Clark Morgan:
	+ modify manpage.rc and color-ls.rc to avoid showing their guts if
	  aborted.
	+ vile.hlp changes:
	  + add discussion of mode-pathname and mode-filename to the section
	    on Majormodes.
	  + add notes about optimizing suffixes for C versus C++ editing.
	> Fabien Coutant:
	+ add experimental plugin support and example.
	> Tom Dickey:
	+ indent'd ansi.c
	+ configure-script fixes:
	  + change prerequisite to autoconf 2.13.20030927 patch, mainly for
	    OS/2 EMX. Other systems use the 2.52-generated configure script.
	  + modify --with-Xaw3d, --with-neXtaw and --with-XawPlus options to
	    avoid being confused by options such as --without-Xaw3d.
	  + several fixes to accommodate quoted string definitions introduced
	    in some imake configurations, which did not work with the
	    CF_ADD_CFLAGS macro's parsing.
	  + modify CF_X_TOOLKIT to remove the checks for clix (obsolete) and
	    move the call to AC_PATH_XTRA to the beginning - which it
	    essentially was anyway.  Now it simply calls AC_PATH_XTRA and
	    ensures that I can get -lXt and -lX11.  Reading the code, it seems
	    that the IRIX6/IRIX5 issue was taken care of in autoconf 2.13.
	  + modify CF_NCURSES_LIBS to only look for -lmytinfo when building
	    with ncurses.  This works around FreeBSD's broken linker semantics
	    when configuring for ncursesw.
	+ add $error-tabstop variable, to allow changing the tabstop value
	  used when interpreting %C results in the error finder.  Most programs
	  assume 8, and that does not work well when editing buffers with other
	  tabstops such as 4.
	+ correct perl highlighting of subscripts which happen to be the same
	  as quote-operator names, e.g.,
		$foo{y}
	  (report by Daniel L Ashbrook).
	+ correct perl highlighting of variables within double quotes, ignoring
	  single-quotes which may happen to follow, e.g.,
		"foo = '$foo'"
	  (report by Daniel L Ashbrook).
	+ correct logic in vl_lookup_func(), which did not allow match on
	  "&gt", since that appeared to conflict with "&gtseq" (report by
	  Clark Morgan).
	+ change TPRINTF() macro so that if debugging trace is turned on, the
	  same text that would be written to [Trace] is also written to the
	  Trace.out file.
	+ modify dofmt() to handle "%*.*s" and "%.*s" formats, removed "%*S"
	  format.
	+ replace doc/indent.pro with ncu-indent, a script which allows preview
	  of the indent changes.  Note that preview relies on bug-fixes which
	  are not in "official" indent.  See the indent section in
		http://invisible-island.net/gnu-patches/gnu-patches.html
	+ modify needQuotes() to return true only if both conditions apply
	  (the token needs quoting and it is not the first token) rather than either.
	  This makes [History] show things like
		set tags=foo
		set tags="foo bar"
	  rather than
		set "tags"="foo"
		set "tags"="foo bar"
	+ revise quoting of strings returned by run_func(), using new
	  functions tb_enquote() and tb_dequote(). This fixes case such as
		set tags=''
		write-message &cat "tags: " $tags
	  which lost one of the single-quotes when the "set" command was
	  interactive (report by Clark Morgan).
	+ modify cppmode's suffixes to look for .C, .H and .CC only on systems
	  where filenames are case-sensitive.
	+ call attrib_matches() at the end of attribute_directly() to restore
	  highlighting due to visual-matches.  This fixes a bug where autocolor
	  might wipe that highlighting away (report by Clark Morgan).
	+ modify pattern for logmode to allow filenames such as gmake.out
	+ modify latexflt.l to not color "|" in TEXT state.
	+ add map's for newer XFree86 xterm shifted cursor-keys (see
	+ improve label-expression in dcl-filt.l
	+ modify dcl-filt.l to recognize $DECK / $EOD literal lines.
	+ modify c-filt.c to recognize Java double suffix, e.g., 1.0e1d
	+ revise/extend js.key based on ECMA-262 and other online information.
	+ add a mode-pathname setting for cppmode, so files under (for example)
	  /usr/include/g++ will be treated as C++.  Newer C++ headers have
	  no suffixes.
	+ add ".hpp" to suffixes for cppmode.
	+ add ".el" to suffixes for lispmode.
	+ add an "-s" option to c-filt.c, for JavaScript (to support jsmode).
	  Use this to control whether to allow regular expressions in certain
	  cases.

 20040411 (f)
	> Clark Morgan:
	+ modify vilemode, adding "sections" expression.
	+ vile.hlp changes:
	  + modify syntax coloring topic to remove prerequisites that refer to
	    features from long, long ago ("nocmode" and old copies of c syntax
	    coloring files) that most users won't remember or encounter.
	  + revamped "Editor modes" section, in particular, moving discussion
	    of majormodes to a point in the help file that directly follows
	    syntax coloring.
	  + added mode flavor tags (B, U, W, M) to modes that lacked same.
	  + documented that "suffixes" is tested against a filename's complete
	    path.
	  + stripped c-tabstop from vile startup example.
	  + explicitly emphasized ignoresuffix's behavior.
	  + for cindent, tabstop and shiftwidth modes, documented cmode's
	    default local mode values.
	  + added a "Majormodes" section. Added a subsection entitled
	    "cmode: the original vile builtin majormode"
	> Tom Dickey:
	+ indent'd csrch.c, globals.c, map.c, wordmov.c
	+ modify logic for RS_AUTO to treat it consistently as the "default"
	  keyword for record separator (report by Clark Morgan).
	+ remove an unnecessary message from makelist.sh (report by Clark
	  Morgan).
	+ modify mac_tokval() to avoid calling tb_scopy() if the result from
	  tokval() is the original pointer plus one (for stripping a leading
	  quote), fixes an overlapping memcpy warning from valgrind.
	+ correct logic in test_by_suffix(), which was not obtaining the
	  submode value for "ignoresuffix" as intended (discussion with Clark
	  Morgan).
	+ modify comparison for maplength to use at least 25.  Very small
	  values make vile unusable (report by Clark Morgan).
	+ revert part of the initialization in substreg1() so the replacement
	  pattern is reset rather than copied (report by Brendan O'Dea, 9.3n).
	+ make "TODO" a txtmode file.
	+ add ".shar" to shmode suffixes.
	+ add "&match" and "&cmatch" functions for checking if a given regular
	  expression matches a string (request by Clark Morgan).
	+ split up the majormode "suffixes" into suffixes, mode-filename and
	  mode-pathname to make it clearer how to associated regular
	  expressions with the filename for majormodes (discussion with Clark
	  Morgan).
	+ remove explicit assignment to DESTDIR in makefile.in's, since newer
	  GNU make program does not allow command-line to override it (it
	  apparently did work with some version of GNU make in 1999 for 8.3i).
	+ correct logic in perl.xs from 9.4d which parses $VILE_LIBDIR_PATH;
	  it used the wrong variable for storing an intermediate result.

 20040321 (e)
	> Clark Morgan:
	+ document set-highlighting macro in vile.hlp
	+ update/revise some details in doc/modes.doc relating to cmode:
	  + remove any mention of "set cmode" as a (presently) useful command.
	  + list "setl [no]{majormode}" as essential majormode features [as
	    near as I can tell, "setl {majormode}" is the only mechanism
	    available for a user to explicitly attach a majormode to a buffer]
	  + update the history of majormodes to reflect the way things were in
	    the past, but not now.  This is done primarily by changing the
	    grammatical tense of various sentences.
	> Tom Dickey:
	+ add mode "ignoresuffix", which tells vile to strip the given pattern
	  from a filename before matching majormode suffixes against it.
	+ add mode "showchar", which turns on a field in the modeline that
	  tells what the character value is at the current editing position.
	+ modify pregion() to reset the "counted" state on the buffer, to work
	  around a case on win32, where CRLF_LINES is set, the "p" command's
	  output did not count the extra byte per line for ^M's.  When saving
	  [p-lines] to a file, it was truncated.
	+ modify isMiniEdit() to always return true if miniedit mode is set.
	  That allows one to use ^Ga to toggle miniedit mode and append to
	  the buffer shown from a previous command rather than having it
	  erased (discussion with George Eccles).
	+ modify mac_tokval() to avoid calling tb_scopy() if the result from
	  tokval() is the original pointer, fixes an overlapping memcpy warning
	  from valgrind.
	+ fix incremental-search's initialization, broken in 9.3l (report by
	  Richard Mitchell).
	+ improve COMMENT expression in txt-filt.l to include the lines of
	  dashes in vile.hlp (report by Clark Morgan).
	+ fix to avoid putting dummy entries into the list of all modes when
	  a corresponding short modename does not exist for a given submode of
	  a majormode.  That was making ":set <tab><tab>" show names such as
	  "RCSX" and "cppX".
	+ fix a couple of places reported by gcc -Wundef on OS/2, e.g., the
	  OPT_WORKING macro.
	+ modify htmlfilt.l to use caseless comparison for HTML keywords.
	+ improve configure-script checks for dbmalloc and dmalloc.
	+ modify preamble pattern for pymode to work with
		"#!/usr/bin/python2.3 -S"
	+ modified [a-z] expression to [\a] in preamble for awkmode, cshmode,
	  sedmode, shmode, tclmode to allow uppercase options.
	+ add ".jsp" to jsmode suffixes.
	+ fix imake filter to handle a case where XCOMM comment contained a
	  colon; it was highlighted as if it were a makefile target.
	+ modify name-completion for majormode names used as macro parameters
	  to use the long name (with "mode" ending) rather than the short
	  name, for consistency (suggested by Clark Morgan).
	+ modify filters/*.awk to ensure that space-separated lists for the
	  --with-builtin-filters, etc., options are handled properly.  Both
	  comma-separated and space-separated lists are permitted now (report
	  by Clark Morgan).
	+ fix missing assignments from 9.4b changes to $builtins and $loadable
	  variables in configure script, which caused build to fail if explicit
	  list was given for --with-builtin-filters or --with-loadable-filters
	  (report by Clark Morgan).

 20031220 (d)
	> Tom Dickey:
	+ modify pl-filt.c to handle
		sub y { }
	  i.e., not treat the "y" as the beginning of a pattern.
	+ modify perl.xs to allow for $VILE_LIBDIR_PATH to be a list of paths.
	  Only add the corresponding xxx/perl names to @INC if they correspond
	  to a real directory.
	+ rewrote pascal syntax filter in lex, adding highlighting for numbers,
	  and TurboC, Delphi comments.
	+ improve pascal keywords.
	+ relax check for dlopen() by assuming that at least RTLD_LAZY is
	  defined.  This works for SunOS 4.1.4.
	+ add a check in de_extend_lines() for a null wp->w_line.l, recover
	  by resetting to the buffer-head (report by George Eccles).
	+ add some more debugging code, calls to valid_buffer(), valid_window()
	  and new functions valid_line_bp(), valid_line_wp().
	+ change minimum/maximum repeat counts for regular expressions from a
	  byte to an integer (report by George Eccles).
	+ modify "dist" rule in makefile.wnt to make it set the name of the
	  zip-file based on the executable.  Add a ".map" file to the zip file.

 20031105 (c)
	> Tom Dickey:
	+ improved check for dlsym to make loadable filters work on Solaris and
	  IRIX64 (tested with gcc).
	+ make "--disable-echo" apply to making the loadable filters.
	+ use EXEEXT and OBJEXT in generated makefiles.
	+ corrected parameter to lookup_filter(); it did not account for the
	  $filtername symbol, e.g., as used for cshmode to invoke vile-sh-filt.
	+ corrected ifdef's in cfgopts() used to build xvile's $cfgopts values.
	  The ifdef's used "#ifdef" rather than "#if", causing all possible
	  values to be shown (problem introduced in 9.3e).

 20031102 (b)
	> Brendan O'Dea:
	+ add code to support dynamic loading of syntax filters which are
	  compiled as a shared object.
	> Tom Dickey:
	+ modify is_ESCAPED() in pl-filt.c to not treat backslash before
	  double-quote specially.  This fixes man2html, which contains a line
		  *bs = \"\b";
	+ modify latexflt.l to recognize strings such as "\def$", which begin
	  a redefinition of "$".
	+ remove suffix conflict between latex and tex modes.
	+ modify check in set_vilemode() so that buffers other than the current
	  one can be set, provided that they are not scratch buffers.  A
	  change in 20030630 had suppressed set_vilemode() for buffers other
	  than the current one, from noting odd error messages when the current
	  buffer was [Buffer List], which is a scratch buffer and therefore
	  cannot have a majormode assigned to it.
	+ add "--with-loadable-filters" option to configure script and modified
	  related files to integrate Brendan O'Dea's patch for dynamic loading.
	  Timed filtering of vile's larger source-files to compare the three
	  schemes.  Loadable filters ran about 50% slower than the builtin
	  filters, while external filters ran about 5 times slower (ymmv).
	+ use AC_EXEEXT in configure script.
	+ modify configure script check for imake's $CFLAGS to ensure that
	  imake or xmkmf was found.

 20031008 (a)
	> Daniel L Ashbrook:
	+ add lispmode, to use vile-lisp-filt.
	> Mark Robinson:
	+ add cygwin to OPT_CASELESS
	+ modify xvile's wheelScrollAmount resource to scroll by pages if the
	  resource value is negative.
	> Tom Dickey:
	+ correct suffix pattern for xresmode, which did not match ".Xdefaults"
	  (see 9.2p).
	+ add macro "which-menu" to which.rc, which shows the locations that
	  xvile checks for a menu-file.
	+ revise lookup for xvile's menu file to look for dotnames in the
	  current and home-directories, while non-dotnames may be found there
	  and in $HOME/.vile and on $startup-path.  Combine this with changing
	  the default for $menu-file back to ".vilemenu" as documented rather
	  than "vilemenu.rc".  The latter name is used in the non-dotname
	  locations if $menu-file is a dot-name (report by Alf Pearce noted
	  that the default for $menu-file no longer matched the documented
	  ".vilemenu").
	+ change order of charinit() and global_val_init() so that mkupper()
	  works, e.g., for use in computing the value of $XVILE_MENU (report by
	  Alf Pearce <alfp@unimelb.edu.au> noted that the environment variable
	  did not work).
	+ improve lisp syntax highlighting (reports by Daniel L Ashbrook,
	  used the HyperSpec for reference):
	  + recognize "#|"..."|#" comments.
	  + revise patterns for numbers.
	  + allow decimal digits embedded in identifiers
	+ change makefile.djg to use zip rather than pkzip, and go32-v2.exe
	  rather than go32.exe
	+ improve configure check for <term.h>, which may be <ncursesw/term.h>.
	+ correct highlighting of sh construct
		${#variable}
	  (report by Michael Finken).

Changes for vile 9.4 (released Mon Aug 04 2003)

 20030727 (v)
	> Kevin Buettner, Paul Fox:
	+ fix include-path in filters/makefile.in to allow compiling with
	  separate src/build trees.
	> Tom Dickey:
	+ set regionshape to EXACT in editMiniBuffer() before executing
	  editing commands.
	+ review/fix several places where a negative value could be converted
	  to unsigned, or a zero value might be used as a malloc-size (report
	  by Paul Fox dealt with a negative length passed to tb_bappend).
	+ add "profile$" and "\.bash_[a-z]\+$" to shmode suffixes.
	+ modify print_usage() to exit with non-error status if only the usage
	  message was requested.

 20030708 (u)
	> Tom Dickey:
	+ modify parsing of here-document tags in sh-filt.l to allow '-', '<'
	  and '>' characters if the tag is quoted.  This is used in some recent
	  shar-files, e.g., cone.shar
	+ modify filters.h to allow HP's lex program to be used:
	  + put declarations for yylex() and yywrap() in gcc-specific ifdef
	  + add definition of YYCHAR_ARRAY to prevent redefinition of yytext[]
	    which caused failure to compile because HP's compiler refused to
	    compare char* and unsigned char* pointers.
	+ correct a missing dependency for neproto.h in descrip.mms

 20030630 (t)
	> Tom Dickey:
	+ add VMS to the OPT_CASELESS ifdef's, allowing majormodes to be
	  recognized.
	+ reorganized vmsbuild.com to allow the first parameter to be used as
	  a goto-target (which it was originally).  VMS DCL does not allow a
	  goto target to match when within an if-then-else block.
	+ restore selection-highlighting at the end of attribute-directly.
	+ add a check in update() to avoid calling newscreensize() when it
	  would not really be able to adjust the screensize.  Otherwise,
	  update's while-loop would not terminate.
	+ guard vtinit() against interrupt to ensure that a SIGWINCH does not
	  cause newscreensize() to recur into it.
	+ set "vilemode" for [History] buffer.
	+ modify vilefilt.l to highlight shell commands.
	+ fix an ifdef in main.c so valid_buffer() and valid_window() compile
	  with Visual C++.

 20030618 (s)
	> Tom Dickey:
	+ modify detach_attrib() to ensure that its parameter is still a valid
	  buffer pointer.
	+ add debug functions valid_buffer() and valid_window() and non-debug
	  macros to replace null-pointer checks on BUFFER* and WINDOW* pointers
	  with more extensive sanity checking.

 20030611 (r)
	> Tom Dickey:
	+ add a dummy entry to table in siginit() for VMS, which has no signal
	  handlers.
	+ correct a sign-extension problem with SAME() macro in regexp.c, which
	  made searches for upper-128 characters fail.

 20030526 (q)
	> Danny Zerkel:
	+ revert part of regexp.c changes in regmatch(), which caused pattern
		"^ *case"
	  to not match lines with more than one blank.
	> Paul Fox:
	+ modify ansi.c to get screensize from system.
	+ modify display.c to ensure default $modeline-format is interpreted
	  when building with SMALLER.
	> Tom Dickey:
	+ correct logic in hst_display(), which did not check for the case
	  where a shell command was being appended to an empty result.  The
	  code only checked if the result was not a shell command before
	  splitting the source into tokens.  This would happen for a sequence
	  of commands such as
		:!ls foo
		:!mv bar foo
		:e!
		:!<uparrow>
	  Then scrolling back through history would show only "!mv" and "!ls"
	  rather than the complete command.
	+ indent'd termio.c
	+ removed ifdef's for SYS_APOLLO.
	+ minor fix to imdying(), shows the list of files only if 'wrote' was
	  set, just in case none could be written.
	+ modify imdying() so email is always sent on a failure if
	  VILE_ERROR_ABORT is defined.  This helps distinguish accidentally
	  typing 'Q' versus a failure.
	+ modify ExitProgram() to reset fatal-error signals back to default,
	  so abort() will work properly, i.e., make a core dump.  Modify
	  imdying() so that if VILE_ERROR_ABORT is defined, ExitProgram()
	  is called rather than abort().  The latter calls abort() if the
	  environment variable $VILE_ERROR_ABORT is set.
	+ add cases for 'u', 'U', 'x' and 'X' to RegStrChr2(), making the
	  [:upper:] and [:xdigit:] regular expression character classes work.
	+ modify configure script to suppress -Winline if using gcc 3.3, since
	  that feature is broken.
	+ tested with gcc 3.3 and g++ 3.3, modifying several interfaces to use
	  'const'.  gcc 3.x also introduces more nonstandard name-pollution.
	+ add configure check/warning for flex 2.5.31, which has broken support
	  for the "-P" option used for built-in filters.
	+ reorder lex-based filters to allow building with flex 2.5.31, which
	  introduces several incompatibilities with respect to flex 2.5.4
	  and lex (report by Brendan O'Dea).
	+ add makefile rules to generate test-programs for btree.c, regexp.c

 20030510 (p)
	> Danny Zerkel:
	+ revert 9.3o change for pl-filt.c, since "!" should be allowed as
	  a pattern delimiter.
	+ add a limit check in pl-filt.c
	> Tom Dickey:
	+ modify manpage.rc to check if the current buffer is perl, and if so,
	  to render contents using pod2man or pod2text.
	+ several fixes for pl-filt.c, i.e., vile-perl-filt:
	  + check for a leading POD area, i.e., the first line is "=head",
	    with no preceding blank lines.
	  + allow floating-point numbers without a decimal point.
	  + add "@", ";", "=" to QUOTE_DELIMS
	  + add preprocessor keywords such as __END__ to perl.key
	  + check for __DATA__ keyword, which ends the script like __END__.
	  + add "grep", "unless", "until", "while" to the keywords which may
	    have a pattern following not in parenthesis.
	  + improve logic in is_QIDENT, testing for a quoted string in addition
	    to an identifier for here-document marker.
	  + check for identifier after "$#".
	  + check for typeglob, i.e, a "*" preceding an identifier, e.g,. "*x".
	  + add check in add_to_PATTERN() for nested parenthesis, e.g., when
	    parenthesis are the pattern delimiters.
	  + modify add_to_PATTERN() to accommodate multiple delimiters in a
	    substitute command, e.g., "s{a}(b)".
	  + check for pattern immediately after a left curly-brace.
	  + modify check for operators to allow "||", etc., not within
	    parentheses.
	  + make buffer-checks more readable with macros MORE() and ATLEAST().
	  + check for "..." in pattern, which makes a range of expressions.
	  + parse backtic expressions.
	  + parse file glob expressions.
	  + parse format-statements.
	  + suppress highlighting of variables inside single-quotes.
	  + show variables highlighted inside double-quoted here-documents.
	  + correct count returned from is_ESCAPED(), which did not count the
	    character after the backslash if it was a quote character.
	+ correct logic in encode_attributes(), which did not recompute region
	  size for a buffer attribute that started on the current line, but did
	  not end there.
	+ add un-filters (atr2ansi, atr2html, atr2text) which convert encoded
	  control/A text to different forms.
	+ modify "decode-attributes-til" to allow multiple regions to start
	  at the same point.
	+ modify "encode-attributes-til" to set local nohighlight mode on the
	  modified buffer (was global).
	+ modify a limit-check in add_line_attrib(), in case an external
	  filter provides a region that extends beyond the line.  In that
	  case, it continued to set attributes beyond the allocated space.
	+ modify "encode-attributes-til" to render selected text with "R"
	  attribute.  It would be more consistent to use "S", but there would
	  be no proper way to read the attribute back into vile.
	+ rename a 'lvalue' variable in display.c to avoid conflict with macro
	  preventing compile with unproto on SunOS 4.1.

 20030504 (o)
	> Danny Zerkel:
	+ modify perl filters to disallow a blank between "<<" and the
	  identifier for a here-document.
	> Tom Dickey:
	+ fix for pl-filt.c, make it treat "!" as an operator rather than a
	  pattern delimiter.
	+ modify support for ^X-e to make it use the whole line if the current
	  buffer is a directory.
	+ use realpath() rather than resolve_directory() if it is available,
	  and "$VILE_PWD" environment variable rather than "." as parameter to
	  getcwd() if it is valid, to speed up operation on quasi-filesystems
	  such as ClearCase (adapted from patch by Danny Zerkel).
	+ add ".PL" to suffixes for perl mode, e.g., for Makefile.PL
	+ add no_minimsgs variable, check in mlmsg() to allow editMiniBuffer()
	  to keep editing commands from overwriting the minibuffer with a
	  message.
	+ improved editMiniBuffer(), correcting treatment of commands which
	  would modify the result.  Overlooked in 9.3k, this copies the result
	  from calls on execute() back to the TBUFF passed to editMiniBuffer().
	+ use insert-mode bindings in editMiniBuffer() when mini-edit mode is
	  active.  Use insert-key to toggle, rather than set mini-edit mode
	  (adapted from patch by Mark Robinson).
	+ modify latexflt.l to suppress treatment of "|" as a quoting character
	  when within curly braces (report by Paul van Tilburg).
	+ correct highlighting of "+=" in makefilt.l
	+ move a comment out of the pattern section of latexflt.l to work
	  around bug in HPUX lex (report by Adam Denton).
	+ increase output- and state transitions-limits for latexflt.l,
	  rpm-filt.l, sh-filt.l and vilefilt.l to compile with Solaris and HPUX
	  lex programs (report by Adam Denton).
	+ make configure check for flex's version contingent on ensuring that
	  it is really flex (report by Adam Denton indicates that HPUX lex
	  is confused by "--version", and requires further input).
	+ modify vile-manfilt to decode UTF-8 emitted by groff 1.18

 20030318 (n)
	> Tom Dickey:
	+ fix typo in CF_WCTYPE macro, needed to add "-lw" to $LIBS.
	+ workaround for bug in autoconf 2.52 which made it not show help
	  text for "--with-locale" option, since it was quoted to pass it as
	  a parameter to CF_LOCALE.
	+ modify delins() to work with text that contains nulls.
	+ fixes to make replacepat (the variable that holds the value supplied
	  as a replacement pattern, e.g., when "~" is typed) work with embedded
	  nulls.
	+ move upper/lower case-conversion into tables vl_uppercase[] and
	  vl_lowercase[], so that locale support can replace the DIFCASE
	  variable.
	+ fix an infinite loop in c-filt.c, from 9.3k changes (-j option).

 20030310 (m)
	> Tom Dickey:
	+ revise lgettext() and screen_string() to use TBUFF's directly, fixing
	  the ^X-, macro broken in 9.3k.
	+ fixes to avoid adding a trailing null to the "$search" variable.
	+ correct parenthesis in dfputf(), which truncated "%f" format used to
	  display "count-words" result.
	+ implement logic for hypertext commands in "encode-attributes-til".
	+ fix misplaced ":" appended in "encode-attributes-til".
	+ add mode overlap-matches, to control whether highlighting for the
	  visual-matches mode should skip to the next character, or past the
	  current match when checking.
	+ correct comparison in EXACTLY case of regrepeat(), which broke logic
	  for "  *$" pattern - two blanks (reported by Danny Zerkel).
	+ correct limit check in regrepeat(), which must account for the
	  operand size directly since it is no longer null-terminated.
	  Fixes match for patterns such as "X*$" (reported by Danny Zerkel).

 20030226 (l)
	> Tom Dickey:
	+ remove special check in kbd_putc() to advance the cursor, since fix
	  in 9.3k using after_linsert() function duplicated this, making the
	  cursor move twice for each character inserted in the minibuffer.
	+ fix a sign-extension in hash_function() (filters.c), which could make
	  a negative hash code.
	+ modify regexp.c and callers to pass length into regcomp(), making
	  its interface not rely upon whether the pattern is a null-terminated
	  string (prompted by recent change for KBD_0CHAR, which dated from
	  980312).
	+ add more keywords for js.key
	+ correct handling of backtic in here-document by sh-filt.l when
	  command-substitution happens to be disabled.
	+ modify imdying() to always exit with an error status.
	+ amend changes to editMiniBuffer(), which did not allow arrow-key
	  movement unless the ^G toggle was used.

 20030217 (k)
	> Clark Morgan:
	+ make ^X-s reflect the documentation in vile.hlp by implementing a
	  new command substitute-all-til.
	> Paul van Tilburg
	+ add Ruby syntax filter (rb-filt.l, rb.key).
	> Tom Dickey:
	+ add -j option to c-filt.c, to implement some java-specific features
	  such as "$" as part of an identifier, and \u escapes.
	+ fix: java has no 'operator' keyword.
	+ suppress KBD_0CHAR flag in kbd_string() function, since it is only
	  designed to handle null-terminated strings.  This plugs a hole which
	  would allow
		:%s/^@/!/g
	  to have unexpected results (report by Clark Morgan).
	+ correct return from kbd_reply() used in scripts; sometimes it would
	  add an extra null to the result.
	+ correct an overlap between bits used to denote NOMINI (now MINIBUF)
	  and FROM (part of RANGE) which caused some commands to be incorrectly
	  treated as minibuffer editing commands when logic was changed to
	  allow MINIBUF to be treated this way.
	+ implement a few new editing commands in the minibuffer:  r, ~, x, X.
	  Other editing commands such as R would require special handling;
	  these are implemented by setting the appropriate flag in cmdtbl.
	+ change cmdtbl to use MINIBUF rather than NOMINI, to implement
	  encoding of editing commands which are limited to the minibuffer.
	+ modify buffer- and filename-completion on Unix to escape backslashes
	  which are stored in the [Completions] buffer.  Doing this allows one
	  to complete a buffer or filename containing a backslash (Debian
	  #164593).
	+ add configure check for -lw library, needed for Solaris <wctype.h>
	  functions.
	+ correct logic of CF_X_ATHENA_LIBS, which did not really add extra X
	  libraries.
	+ use CF_LOCALE, CF_WITH_DBMALLOC and CF_DMALLOC macros to simplify
	  configure.in
	+ use fltstack.h in sccs filter.
	+ highlight expanded and unexpanded sccs keywords in sccs files.
	+ add texmode, as a variation of latexmode.
	+ add .ltx, .sty suffixes for latexmode.
	+ review/revise latex filter (reports by Daniel L Ashbrook
	  <njiro@cc.gatech.edu>).  It still does not implement \[ \] and \( \)
	  toggles for math mode, but is improved.
	+ cleanup display of whitespace in key-filt.c using new functions
	  chop_newline() and flt_put_blanks() (report by Clark Morgan).
	+ add case for "abbrev" to key-filt.c
	+ improve state stacking in yacc highlighting filter, correcting some
	  problems introduced by fltstack.h changes.
	+ modify lex syntax filter to accept C-style comments in the RULES
	  state; apparently flex allows this.
	+ add a C version of Ruby syntax filter.
	+ add new commands encode-attributes-til and write-encoded-til to
	  convert the syntax highlighting in a region back to control/A
	  sequences, or to write the corresponding data to a file.  Added a
	  corresponding alias decode-attributes-til for
	  attribute-cntl_a-sequences-til.
	+ change lrepltext() to use a given length rather than assume its
	  parameter is null-terminated.

 20030102 (j)
	> Clark Morgan:
	+ fix a couple of compile-problems.
	> Tom Dickey:
	+ correct operation of chgreg() when no text is present in the buffer
	  before inserting the replacement.  This makes a command such as
	  	1GcG<esc>
	  work properly (report by Paul Fox).
	+ modify tracing code to show names of CMDFUNC's.
	+ modify ifile() to mark a buffer changed only if data were read from
	  the inserted file.  Otherwise an error was reported when trying to
	  undo the modified state.
	+ modify getregion() to check if the buffer is empty, and in that case
	  return an empty region with status indicating there is a region.
	  That allows filtering of empty buffers (report by Paul Fox).
	+ trim a leading quote from internal arguments in run_func(), to make
	  this type of construct work properly:
		setv %w='*.[Cchis] llib-l*'
		use-reg f load-reg &cat "^X!grep -n -w : " &cat %w "^M"
	+ modify sh-filt.l to handle escaped newlines within quotes.
	+ change some quoted includes in filters to bracketed form (report by
	  Paul Fox).
	+ more fixes to ncurses configure-script check.
	+ add a configure option for XawPlus (see homepage
	  http://people.freenet.de/kra/XawPlus/)

 20021223 (i)
	> Adam Denton:
	+ implement xml-filter based on html-filter.
	> Clark Morgan:
	+ fix: if winvile is in insert mode when wvwrap opens a new file, the
	  "remote" editing commands used to open said file were inserted into
	  curbuf.  This is a bug in the original implementation.
	+ update doc/filters.doc for 9.3h
	> Mark Robinson:
	+ modify perform_dobuf() to allow multiple occurrences of directives
	  such as "~force" on a line.
	> Paul Fox:
	+ add mode parameter to open() call in ffwopen() used by imdying().
	> Tom Dickey:
	+ add configure check for wctype functions, to work around defect in
	  glibc's ctype functions: in UTF-8 locale, the latter return useless
	  information on character classes.  This works on Solaris.
	+ add configure option --with-screen=ncursesw to allow building the
	  curses driver using the wide-character version of ncurses.
	+ in UTF-8 locale, adjust termcap driver to use UTF-8 to display codes
	  in the 160-255 range, setting vile's locale to non-UTF-8 locale.
	  (yes, this is a short-term fix).
	+ modify logic in set_mode_value() to fix a memory leak of changes to
	  global mode values (see 9.2o, which made those consistently
	  allocated rather than some constants).
	+ modified filters.h and some filters to include estruct.h, thereby
	  using definitions for no-leaks checking in trace.h
	+ add more beginDisplay/endofDisplay macros to work with the assertions
	  in trace.c (basic.c, finderr.c, modes.c, select.c, tags.c).
	+ split-out fltstack.h to simplify state-stacks in filters.
	+ modify yaccfilt.l to use %keywords in yacc.key
	+ modify xml-filt.l to handle CDATA and inline DTD's.  Add some other
	  features based on patch from Mark Robinson.
	+ change term.set_title() calls so they are only executed in update(),
	  to make it more efficient, e.g., when [Buffer List] is visible, the
	  internal buffer-switching for that was causing 2 title updates for
	  each character modified in the current buffer.
	+ implement xterm-title mode.
	+ correct a "&" to "&&" in ifdef's generated by mktbls
	+ remove 'termdef' symbol, since it was redundant.
	+ change typeallocplus() to use calloc().
	+ add configure option --with-curses-dir
	+ altered search-lists for configure script to find ncurses in more
	  unusual places, such as the user's home directory.
	+ change default for --with-locale option to yes.  Note that this
	  option is only tested if locale support is found, and it is becoming
	  less common to encounter systems with broken locale support.
	+ update config.guess, config.sub
	+ add ".S" to asmode suffixes.
	+ add ".C" and ".cc" to cppmode suffixes.
	+ add "locale" to the $cfgopts variable if vile is compiled with
	  locale support.

 20021105 (h)
	> Clark Morgan:
	+ change home_dir() function to check for $HOME before $HOMEPATH, etc.,
	  on win32.  Otherwise home_dir() may return something like
	  c:\/usr/cmorgan, which performs badly.
	> Danny Zerkel:
	+ add a few Perl 5.6 reserved words, highlight binary values, and
	  version numbers.
	> Tom Dickey:
	+ modify logic of compute_majormodes_order() to avoid skipping items
	  in the list of majormodes.  This fixes the relative ordering of
	  "rc" versus "vile" modes.  Because some items were skipped, the
		"nr" after "sh"
	  	"rc" after "vile"
	  rules caused the second one to be ignored (reported by Clark Morgan).
	+ modify pathcat() so the MS-DOS configuration will not attempt to
	  supply an extra slash when concatenating strings such as "c:" and
	  "/usr/cmorgan" (report by Clark Morgan).
	+ correct allocation size of argv in ntwinio.c, which did not allow
	  enough space.
	+ correct handling of escaped backtic in sh-filt.l
	+ add syntax filters and corresponding modes for assembler (GNU and M$),
	  info and texinfo.
	+ add beginDisplay/endofDisplay macros in several places to work with
	  the assertions in trace.c
	+ add assertions to trace.c in doalloc/dofree to check for places where
	  beginDisplay/endofDisplay should be used to prevent the OPT_WORKING
	  code from interrupting malloc/free calls.
	+ improve error-checking for numbers in perl filter.
	+ implement pot-filt.l, to highlight ".po" files.  Using sh-filt.l was
	  not satisfactory since the quoting rules were not close enough.
	+ modify configure script to fix existence-style ifdef's for crypt,
	  setbuffer, strerror.

 20021027 (g)
	> Tom Dickey:
	+ improve perl filter by recognizing q[] and q() quote-like operators.
	+ improve rpm filter to avoid exiting text area on embedded "%" names,
	  added several keywords to rpm.key
	+ modify suffix rule for terminfo (timode) to allow nrmode to pick up
	  ncurses' terminfo.tail, and corrected preamble for nrmode, which used
	  the wrong quote character.
	+ add yankmotion mode, to control whether the cursor should be moved
	  as in vi after yanking text (discussion with George Eccles and Paul
	  Fox).
	+ modify ifdef's to allow builtin-filters to be tested with the
	  configure --no-leaks code.
	+ improved perl filter by recognizing a pattern at the beginning of
	  a statement, or after the word "split" (the latter was reported by
	  Duncan Sargeant).
	+ fix a place where 9.3f changes quoted a token which was already a
	  quoted string (report by George Eccles).

 20021023 (f)
	> Clark Morgan:
	+ update list of filters in config.doc
	> Tom Dickey:
	+ correct a check in builtflt.c that had the effect of making some
	  keyword files only work if the -v option was given in the filtername
	  string (broken in 9.2y).
	+ small fix to argument parsing in builtflt.c, to avoid going past the
	  end of the string (found with valgrind).
	+ documented the filtername majormode value in modes.doc
	+ correct initialization of which.rc, so it can be run more than once.
	+ improve/complete XtArgVal casts using macros Nval() and Sval().
	+ modify x11.c to make scrolling always use mvupwind() - one place used
	  forwline(), and to fix some cases where horizontal resizing would
	  change the width of the Xaw scrollbar (patch by D J Hawkey Jr).
	+ modify run_func() to quote string-results, to ensure that they are
	  not mistaken for other token types such as directives.  This change
	  is needed to make "which.rc" work on win32.
	+ implemented tilde-expansion on win32.  Actually it was present, but
	  globbing did not work, and the environment variables did not match
	  the Windows 2000 configuration.
	+ modify debug traces to allow Trace() to make an indented listing,
	  according to the function-nesting level.  This is done, originally in
	  ncurses by prefixing the format string with T_CALLED or T_RETURN
	  strings.  Used this feature to help debug changes for which.rc on
	  win32.  Not all functions are traced this way, but all that call
	  swbuffer() are, as well as some others that were useful.
	+ adjust ifdef's so VILE_ERROR_ABORT and VILE_OLE can be defined at
	  the same time.

 20021016 (e)
	> Clark Morgan:
	+ correction to 9.3d change:  @<register> was busted (command mode) and
	  :write-message "@stuff" caused vile to complain when '@' was pressed.
	+ I noticed recently that I could not use vile's file/directory
	  traversal feature (on linux) to find the value of an errno.h macro
	  (e.g., EINVAL).  As it turns out, linux puts these definitions in a
	  directory that's referenced via a symbolic link resident within
	  /usr/include (other features such as the X11 includes files are
	  handled similarly).  Seems that GNU's find won't traverse symbolic
	  links without specifying an explicit option (it appears SunOS 5.7
	  exhibits similar behavior and uses the exact same option name).  The
	  enclosed patch adds "-follow" as an optional parameter to vile's
	  file/directory traversal repertoire.
	> Duncan Sargeant:
	+ fix a small bug in the perl filter where pod code starting with
	  "=cut" would not be filtered (it's a valid start and end marker for
	  pod).
	> Paul Fox:
	+ make filters/makefile.in's LDFLAGS variable the same as in the
	  top-level makefile to fix a case where flex libraries were not found
	  in a nonstandard location.
	> Tom Dickey:
	+ add b_procname field to BUFFER, use that to save the given procedure
	  name when storing a macro.  This fixes a problem when removing
	  procedures whose name is longer than NBUFN-2, which could leave the
	  key binding table pointing to a non-existent buffer, e.g., ^X-, for
	  next-cur-identifier.
	+ documented ~elsewith in doc/modes.doc (report by Adam Denton).
	+ correct handling of "uc" keyword for perl filter in this line:
		if ($diagType =~ uc $widgetType)
	  It was being treated as a pattern delimiter.
	+ add several short-named relational operators "&geq", "&gt", "&leq",
	  "&lt", "&neq", "&sgeq", "&sgt", "&sleq", "&slt", "&sneq" to reduce
	  the need for "&not" (suggested by Adam Denton).
	+ change UFxxx variables to an enum, using this to check for unhandled
	  cases in eval.c
	+ repair missing mktemp() call in imydying(), broken in 9.3d changes
	  (reports by George Eccles and Paul Fox).
	+ add syntax filter for rpm ".spec" files.
	+ add syntax filter for PostScript ".ps" files.
	+ add syntax filter for enscript ".st" files.
	+ make cursor-movement on a yank command match vi's, tested for various
	  left/up motions such as yk, yh, yH, y1G, y0, y-, yb (report by
	  George Eccles).
	+ correct order of initialization in operyank() from 9.3b changes,
	  which could cause a core dump (reported by George Eccles).
	+ modify check for renaming the unnamed-buffer when writing it; do not
	  rename it if the write was to a pipe (report by Paul Fox).
	+ add definition for OWTOOLKIT_WARNING_DISABLED to x11.c, without which
	  the Xol version cannot be compiled under Solaris 8.
	+ add -Wundef flag for gcc warnings, modified ifdef's to make SYS_xxx,
	  CC_xxx, DISP_xxx variables always defined as 0/1, and use #ifdef to
	  check for the HAVE_xxx and similar variables rather than #if.
	+ modify configure check for Athena (Xaw, etc) libraries to include
	  Xpm, on which XFree86 4.x Xaw depends.  That allows xvile to be
	  built on cygwin.
	+ modify logic of pop_fake_win() to allow for the possibility that the
	  current buffer is not related to the current window.  This can/did
	  happen in tprintf(), for example, but could happen in one of the
	  other calls.  In particular, if ~trace was enabled, that resulted in
	  making ":ww" fail to write files which had no current window.
	+ add pattern for hexadecimal character codes in htmlfilt.l
	+ modify configure script to use '%' consistently as sed delimiter,
	  rather than sometimes '@', to avoid problems with AFS.
	+ update config.guess, config.sub

 20020902 (d)
	> Brendan O'Dea:
	+ updates to allow vile to build with perl 5.8.0 (ifdef's checked for
	  5.6.1, 5.5.3 and 5.4.5).
	> Clark Morgan:
	+ modify ntconio.c and ntwinio.c to recognize control/@ as a null,
	  to allow inserting null characters.
	+ config.doc:
	  - correct erroneous statement; namely, vile build only creates as many
	    external filters as necessary, not all filters.
	  - restructure doc/config.doc's builtin-filter prose for improved clarity.
	+ vile.hlp:
	  - fix ispell macro so that users avoid a "warn-reread" prompt.
	  - remove ShowManpage macro from vile.hlp; it's long and complex.
	    Interested readers can read the macro directly by browsing
	    manpage.rc .
	  - documented builtin filters.  One of the more notable changes here
	    is that I dumped the description of how to optimally build vile on
	    a Unix host when disk space is limited.  I don't think that's much
	    of an issue these days and it substantially simplifies the prose.
	> Tom Dickey:
	+ add which-keywords, as a macro.
	+ add $pathname-separator variable.
	+ implement edit-buffer command, to simplify which-keywords macro.
	  In turn, this required modifying readin() to allow us to treat
	  an empty filename as a non-error condition, and adding the KBD_OPTIONS
	  flags to the DONE_ARGS to propagate this down to kbd_complete(),
	  to make the code which does name-completion of buffer-names allow
	  a partial match.
	+ put nrmode after shmode to allow scripts such as "with-perl-5.8.0".
	+ reorganize decode_prefix() to allow parsing of bindings such as
	  ^X-#-a (report by Christian Neumann <jarva@t-online.de>)
	+ reset, if possible, real uid/gid values to match effective uid/gid
	  values, to appease Perl's check for setuid scripts.  This fixes a
	  problem where vileperl.rc would stop during initialization because
	  fcron's fcrontab program would run the editor process with the group
	  id's not matching (reported by Clemens Fischer).
	+ change test in fscan(), aka forward-char-scan to an inequality to
	  allow for the case where the line is empty (report by Adam Denton).
	+ correct logic of label2bp(), which did not skip leading blanks on the
	  line before checking for a label.  This happened to work until 9.2u
	  indented macros as they are stored (reportd by Adam Denton).
	+ modify built-in spell filter to work with encrypted files.
	+ improve check for flex's version (patch by Danny Zerkel
	  <dzerkel@cas.org>).
	+ correct check for mkdtemp() in create_save_dir() (reported by
	  D J Hawkey Jr <hawkeyd@visi.com>).
	+ add vile's patches to RPM spec (patch by Mark Milhollan
	  <mlm@mlm.ath.cx>).
	+ correct parsing of '+' in prc2kcod(), so one can bind that key
	  to a command, e.g.,
		bind-key next-buffer +
	  (patch by Brian T. Schellenberger <bts@babbleon.org>).
	+ add x11menu to descrip.mms and vmsbuild.com (patch by Jouk Jansen
	  <joukj@hrem.stm.tudelft.nl>).
	+ use XtArgVal casts on data passed by XtVaSetValues() calls.  This is
	  needed to make xvile run reliably on an LP64 platform, since Xt
	  uses a long for this value.
	+ add an #error in perl.xs to flag instances where patchlevel.h is
	  included from places other than Perl's directory (report by Clemens
	  Fischer).

 20020704 (c)
	> Tom Dickey:
	+ add calls to file_stat() to make vile's cache obsolete when spawning
	  and external shell process or when handing ^Z (suspend).  This fixes
	  a problem where the subprocess may have removed a file.  Vile would
	  thereafter be unwilling to write the corresponding buffer to disk
	  (reported by Clark Morgan).
	+ omit double-quote in finderr expression for weblint, to avoid a
	  conflict with some of ncurses' messages.
	+ make vile syntax filter recognize hexadecimal constants.
	+ add a -t option to filters, to pass tabstop value.  Use this in
	  makefilt.l to provide better highlighting of problems with leading
	  whitespace.
	+ supply install-rule in makefile.in for gnugpg.rc, search.rc and
	  shifts.rc

 20020703 (b)
	> Tom Dickey:
	+ correct missing limit-check in repaint_window(), which caused winvile
	  to GPF if resizing beyond its initially allocated 256x128 size.
	+ add a dummy log-file majormode, to distinguish some makefiles from
	  logfiles.
	+ add some features of GNU make to makefilt.l and make.key that are
	  useful in conditional evaluation.
	+ add percent-crlf mode, which controls the threshold at which the
	  whole file will be considered DOS-format (CRLF record separators)
	  if the given percentage already ends with CR/LF.
	+ save/restore window modes such as linewrap when rereading a file,
	  or when executing a shell command.
	+ amend change to operyank() to also set the cursor position to the
	  beginning of the yanked region when it is before the current position,
	  e.g., by typing y?pattern or y1G (reported by Clark Morgan).

 20020630 (a)
	> Clark Morgan:
	+ document configure-script options for color syntax highlighting.
	> Tom Dickey:
	+ correct change made to operyank() to handle y0p command in 9.2za by
	  not moving the cursor when there is no motion associated with the
	  yank, e.g., when typing yy or Y (reported by Clark Morgan).
	+ fix esqlfilt.l to start with C symbol table rather than SQL.
	+ fix esqlfilt.l to allow a blank between "#" and "include".
	+ add check in tcap.c for terminfo kmous capability like xterm, in case
	  we are running in screen, which also supports xterm mouse protocol.
	+ modify sed-filt.c to allow semicolon as an address separator.
	+ modify spell.rc, spellflt.l and select.c to allow spell filter to
	  work as a built-in filter (reported by Clark Morgan).
	+ corrected misleading description of rc-filt.l (reported by Clark
	  Morgan).
	+ rewrote spell.rc to make it work properly if the spell-filter is
	  built-in (reported by Clark Morgan).
	+ remove a spurious call to flt_bfr_append() in sh-filt.l which broke
	  highlighting of quoted symbols such as "${foo+bar}".
	+ correct ifdef's in estruct.h and fileio.c so that DJGPP version
	  builds.

Changes for vile 9.3 (released Tue Jun 25 2002)

 20020625 (ze)
	> Clark Morgan:
	+ more trouble shooting tips for syntax coloring to vile.hlp
	+ update README.PC to cover platforms that have been tested.
	+ update README file to cover 9.3 changes.
	> Gary Jennejohn <garyj@jennejohn.org>:
	+ add ".S" to default C suffixes on Unix.  The difference between ".s"
	  and ".S" is that the latter may have C-preprocessor statements.
	> Tom Dickey:
	+ update list of macros in makefile.in and makefile.wnt to include
	  gnugpg.rc, search.rc and shifts.rc
	+ add macro loaderrs.rc to illustrate how to extend the built-in
	  error expressions (request by Neil Milne <ngm@orange.net>).

 20020521 (zd)
	> Tom Dickey:
	+ move save/restore of dotcmdactive and pre_op_dot variables from
	  autocolor() to run_a_hook() so they are restored if any hook calls
	  would modify them.  This fixes a case where the "." command did not
	  work when [Buffer List] was visible while a $buffer-hook was used to
	  set xvile's title (report by David Letcher <David.Letcher@ot.com.au>).
	+ add itb_visible() to trace.c

 20020514 (zc)
	> Tom Dickey:
	+ modify fallback definitions in path.c to work with CSet compiler,
	  which did not define S_IFMT in <sys/stat.h>
	+ modify mktbls.c to provide workaround for OS/2 CSet compiler, which
	  does not accept struct-offsets as switch-statement case values, e.g.,
	  as used in implementing the &default builtin function.
	+ add an ifdef'd version of ExitProgram() to main.c which will call
	  abort() rather than exit if the environment variable VILE_ERROR_ABORT
	  is set to a nonempty value.  This is useful for debugging.
	+ modify insert.c to rename 'leave' to 'leave_loop', avoiding symbol
	  defined in Visual C++ 4.1
	+ modify vileinit.rc to disable resolve-links on cygwin

 20020511 (zb)
	> Clark Morgan:
	+ more documentation tweaks.
	+ add example macro underline-currline to vile.hlp, based on submission
	  from Daniel L Ashbrook.
	> Tom Dickey:
	+ updated buglist
	+ add Help.pm and CaptHook.pm to makefile.wnt
	+ add a check to prevent runaway recursion in a case where a dynamic
	  buffer such as [Variables] was visible when a $buffer-hook is used.
	  When reading from a pipe, the buffer hook would activate and then
	  attempt to switch back to [Output], which was not yet marked active.
	  So it would attempt to re-read the pipe, which then repeated the
	  whole process indefinitely.  The check uses a new flag BFISREAD,
	  and macro b_is_reading().
	+ more fixes for pl-filt.c
	  + add 'grep' to the quote-like operator list, and in doing so make
	    is_QUOTE() simpler.
	  + modify check for blank lines in begin_POD() to allow for DOS-style
	    line endings.
	  + correct computation of number of blanks before a comment
	  + add/use isBlank() macro to treat tabs and spaces more alike, e.g.,
	    before embedded comments in a quoted list.
	  + modify test for end-delimiter of a quoted list which specified
	    a curly-brace to allow the square bracket and parenthesis pairs
	    that Perl recognizes.

 20020507 (za)
	> Clark Morgan:
	+ remove pointers to foxharp host.
	+ update copyrights.
	+ remove duplicate use of $(CFLWIN32) from makefile.wnt
	> J Chris Coppick:
	+ tcl files were being edited in shmod since .*sh was matching 'wish',
	  and we weren't catching files with tclsh, wishx, or tcl preambles,
	  unless the file suffix was '.tcl'.
	+ update Breadcrumbs.pm to version 0.4
	> Paul Fox:
	+ add 'directory' to modeline for directory buffers.
	+ change file-mode test in 9.2y to check for FIFO's rather than
	  character-devices.
	+ modify ifile() to avoid marking the current buffer as modified when
	  attempting to insert the contents of a file which fails the "not a
	  file" test.
	> Tom Dickey:
	+ disable "working..." when writing to a pipe, but not reading from it.
	  In that case, the pipe may be an interactive process, and we do not
	  want to pollute its display (reported by Clark Morgan).
	+ restore 'working()' mode at the end of directory.pm's dir() function,
	  which is required to allow xvile to resume processing mouse
	  double-clicks for hyperlink selection.  Reviewed/updated a few other
	  scripts which had the same issue (report by J Chris Coppick).
	+ disable autosave for readonly files.
	+ add check in main loop for failure in repeat-last-cmd, which may
	  have terminated in the middle of a change-command.  If a failure is
	  detected, discard the remaining characters in the replay (report by
	  Kevin Buettner).
	+ modify logic of operyank() to set DOT to the beginning of the region,
	  so that y0p will move the cursor to the beginning of the line just
	  like vi.
	+ improve perl filter's handling of quote-like operators.
	+ show filenames opened for read or write in [Trace], to make it
	  simpler to see which scripts are used.
	+ add check in finderr.c to ensure that line numbers past the end of
	  the buffer result in going to the end of the buffer rather than
	  wrapping around to the beginning.
	+ correct configure script CF_HEADER_PATH macro, which did not look in
	  the proper directories under $HOME.
	+ update config.guess, config.sub
	+ add expectk to programs in tclmode preamble.
	+ highlight TPU files like DCL (.com) files.  The available keywords
	  are different, but the syntax looks the same.
	+ move the list of majormodes from [Settings] to [Major Modes], to
	  reduce clutter in the former.
	+ indent'd (with updated patch against indent 2.0) api.c, fences.c,
	  glob.c, input.c, isearch.c itbuff.c, lckfiles.c, msgs.c, npopen.c,
	  spawn.c, statevar.c, tcap.c, window.c, as well as the .c files in
	  filters.

 20020228 (z)
	> Clark Morgan:
	+ makefiles converted to DevStudio V6.0
	+ visvile modified to pop winvile to foreground on Win2K/XP
	+ fix clipped text in configuration dialog (at various geometries)
	+ if the build log from an unsuccessful build is placed in winvile's
	  error buffer (visvile config option), the editor's CWD is changed to
	  match the build log's parent directory.  Without this change,
	  visvile's CWD defaults to <WinDir>\system32 on a Win2K host.
	+ remove compiler warnings from w32reg.c
	+ wheelmouse didn't work on my wife's laptop (uses an el cheapo USB
	  mouse) so I'm submitting an official patch to enable WM_WHEELMOUSE
	  support.  Adding this support requires mucking with the makefile a
	  bit.
	+ added a static child window that shows winvile row/col geometry as
	  winvile is resized (Win2K/NT/XP only).  I could only test this on a
	  single screen geometry (i.e., laptop's 1024 x 768).  Someone should
	  try resizing winvile on a 2K/NT/XP host with these screen settings:
	  800x600, 1280 x 1024, 1115 x 864 .  Let me know if you see text
	  clipping in the child window under these conditions.
	+ following tested on WinME/98 and Win2K:
	  + remove all but one warning from automation-based modules.
	  + add get_MainHwnd() method to automation-based version of winvile.
	  + modify wvwrap to pop winvile to foreground on a Win2K host.
	  + modify wvwrap to restore winvile window if minimized
	+ vile.hlp tweaks (typos, omissions, and minor formatting).
	> Tom Dickey:
	+ split-out specialized logic for cindent's character list as
	  cindent-chars mode so appropriate pieces can be applied to other
	  modes such as esqlmode and cppmode.
	+ filter scrollbar-tracking events to make winvile's scrollbars work
	  for files longer than 65536 lines.

 20020217 (y)
	> Tom Dickey:
	+ indent'd tags.c
	+ make xvile -rv work by adding reverseVideo resource to its
	  application resources, and interpreting that.
	+ add new selection for showformat, "foreign".  Change default of
	  showformat to this, to reduce clutter (discussion with Paul Fox).
	+ do not infer majormodes for directory buffers, e.g., vile-9.2 would
	  be inferred as nrmode (reported by Paul Fox).
	+ remove an empty section of the suffixes pattern for cppmode which
	  made it match files ending with ".".
	+ add a call to show_mark_is_set() in updatelistbuffers() so the
	  [Marks] buffer will be recomputed anytime it is visible and the
	  [Buffer List] is updated.  Usually that is when one of the buffers
	  changes size, which means that marks may have moved.
	+ repair logic for cleanup after pipes:  mods for directory buffer lost
	  the cleanup after writing a pipe because ffstatus is reset now in
	  ffclose() before it was tested in CleanAfterPipe().  Moved related
	  state & logic into CleanToPipe(), CleanAfterPipe() to make them
	  simpler to understand (reported by Clark Morgan).
	+ use catnap() rather than sleep() in softfork(), since the former is
	  less likely to get spurious SIGALRM's.
	+ correct tprintf() to fix a core-dump when using ^X-, in [Trace],
	  i.e., set DOT.o to zero.  Also prevent tprintf() from being called
	  recursively.
	+ add TPRINTF calls to show in [Trace] why a particular majormode was
	  chosen, i.e., whether the suffix or preamble matched, or both.
	+ add command-line -D option which turns on macro tracing (~trace on).
	+ simplify argument processing a little, removing the non-XTOOLKIT code.
	+ modify lremove() to fixup the bp->b_wline value.  This fixes a hole
	  exposed by the directory-buffer changes, e.g.,
		vile
		isomething<esc>
		:e /
		__
		:r /
		__
		(crash)
	  (reported by Paul Fox).
	+ avoid calling both mktemp() and mkdir() in create_save_dir().  Only
	  one flavor should be used (reported by Paul Fox).
	+ modify ffwopen(), ffclose() and ffputc() to avoid using buffered I/O
	  when called from imdying().  Recent versions of glibc make the
	  process lockup when using ElectricFence in this situation.  It is
	  not POSIX, anyway, to use buffered I/O or malloc in a signal handler.
	+ modify checks for non-file to allow character devices, e.g., a
	  named pipe for people who use that feature to randomly generate an
	  email signature (reported by Paul Fox).

 20020213 (x)
	> Tom Dickey:
	+ improve describe-key so it displays bindings for named procedures
	  and perl commands.
	+ add fence-patterns to sqlmode, for PL/SQL.
	+ implement extended command-line options for filters, allowing them
	  to specify which options (other than -k, -q, -v) are recognized for
	  their own use.  Use this to add -p option to c-filt.c, which tells
	  vile-c-filt to mark '#' (preprocessor) as an error.
	+ correct two bugs in sh-filt.l
	  a) add/use return value from embed_or_append() to decide whether to
	     switch to SUBST state.
	  b) emit token that does not match EOF-marker for here-document.
	+ add cursor-attributes and other keywords from Oracle 7.
	+ modify sql filter to flag "remark" as an error if it is not the
	  first token on a line.
	+ correct highlighting of "remark" keyword in sql filter, which did
	  not allow for "REMARK".

 20020203 (w)
	> Tom Dickey:
	+ indent'd line.c, oneliner.c, opers.c
	+ implemented '< and '> marks, which denote the limits of the
	  selection.
	+ add ".ac" as a suffix for m4-files.
	+ disallow attempts to re-read [p-lines] by making fileread() use the
	  is_internalname() function rather than simply checking the length
	  of the filename.
	+ add commands leading-detab-til and leading-entab-til, binding those
	  to ^X-' ' and ^X-^I.  Most of the logic was available internally.
	+ modify ifile() to avoid infinite loop when reading a directory buffer
	  into itself, e.g.,
		:e /
		:r /
	  This still has a minor problem: the window scrolls up by one line
	  each time the ":r" is performed.
	+ modify sortMyBuff() to avoid corrupting DOT when reconstructing
	  linked list, e.g., if reading a directory buffer into itself.
	+ modify file.c to print the number of lines read from a directory.
	+ modify makename() to check if the result buffer name is empty,
	  setting it to NoName if that happens, e.g., when editing the root
	  directory "/".
	+ modify current_directory() and pathcat() to ensure their result
	  cannot be longer than NFILEN.
	+ replace several strncpy() and strcpy() calls by vl_strncpy().
	+ modify fileuid_get() to discard file_stat's cache.
	+ modify append_to_path_list() to use file_stat(), to check if a given
	  file or directory exists before adding it to the list.

 20020121 (v)
	> Tom Dickey:
	+ indent'd menu.c, x11.c
	+ add commands for manipulating menus: hide-menus, show-menus,
	  load-menus and remove-menus.
	+ add $menu-file variable.
	+ modify menu-file lookup to look for $VILE_MENU as well as $XVILE_MENU,
	  making the latter derived from $progname, to make it more extensible.
	+ changed install rule for vilemenu to be consistent with other config
	  files, i.e., as vilemenu.rc rather than .vilemenu -- xvile will still
	  search for .vilemenu if vilemenu.rc is not found, however.
	+ split-out X11-specific part of menu support as x11menu.c
	+ add call to set_editor_title() at the end of set_buffer_name(), so
	  that if the filename changes as a result of writing to a file, the
	  window title is updated correspondingly.
	+ implemented bindings for shift/control/alt modifiers for function
	  keys in xvile and winvile by extending Clark Morgan's 9.1c changes.
	  This does not support remapping.
	+ modify prc2engl() so it may return an error_val, making the &bind
	  builtin function report any error in this function.
	+ correct logic in parse_filtername(), which could index out of bounds
	  when processing a manpage buffer.
	+ correct/improve highlighting of delimiters for here-documents, by
	  flagging places where the quoted delimiter includes a newline, and
	  by eliminating a spurious repeat of the ending delimiter.
	+ correct highlighting of variable in perl files where a pattern would
	  be expected, e.g.,
		if ( $c !~ $DST )
	+ add undo-dos-trim mode, which when true causes vile to make the
	  trimming of ^M's done as part of setting dosmode or set-dos, set-unix
	  commands undoable.  Also, trim ^Z character if it is the last line
	  in the buffer (suggested by Clark Morgan).
	+ remove spurious b_set_counted() from rewritten quickreadf(), which
	  had the effect of making bsizes() count crlf conversion twice.
	+ correct resync of CF_CURSES_TERMCAP, needed to make curses.h included
	  in some configurations.

 20020112 (u)
	> Clark Morgan:
	+ add example of --with-cflags to doc/config.doc
	> Paul Fox:
	+ modify c-filt.c to make it simpler to find unterminated quotes from
	  preprocessor lines.
	> Tom Dickey:
	+ indent'd basic.c, filec.c, insert.c, region.c
	+ cache stat() results for files to improve performance on systems that
	  do not do this automatically.
	+ modified treatment of attempt to read directory by reusing logic in
	  filec.c which builds a sorted list of the directory's contents, to
	  make a corresponding non-hidden buffer.
	+ add error checking to ensure vile does not open non-files such as
	  /dev/tty.
	+ modified directory.pm to limit the filename by the page width rather
	  than to a hardcoded 14.  The directory names are limited to 14 to
	  make the layout work.
	+ check in lremove() to avoid removing the buf_head() line.  Otherwise,
	  infinite loops would result in iterating over lines in the buffer.
	  This could happen if the cursor was placed on the next to last
	  line of a buffer, and the command y<return>ddp were given (report
	  by Clemens Fischer).
	+ correct an off-by-one that allowed a very long mode value to touch
	  the next column in [Settings] if the next column contained a boolean
	  set to "no".
	+ correct calculation in next_column(), which did not take into account
	  the HIGHBIT effect on cell width.
	+ correct $bflags value, which was only one character rather than a
	  combination.
	+ correct macro next-alt-identifier, which declared $identifier as a
	  local, which had the side-effect of marking the file as modified.
	+ moved array used for file- or directory-completion into BUFFER
	  struct, to make code in filec.c more reusable.
	+ eliminated symbols SIZE_T and ALLOC_T, replacing them by size_t.
	+ eliminated global curtabval.  Like curswval, it is not really
	  possible to update it properly everywhere.
	+ change beginDisplay() and endofDisplay() to macros, no need for
	  functions.
	+ indent macros as they are stored, making complex ones easier to
	  read and debug.
	+ add "noshell" to $cfgopts if shell is disabled in the current config.
	+ add --disable-filters option to configure script, to allow building
	  just the editor.
	+ eliminate a duplicated $(LIBS) in $(FILTER_LIBS) variable in makefile
	+ improved CF_TERM_H configure macro, to look for ncurses/term.h for
	  platforms where ncurses is an add-on.
	+ modify configure script to print message showing result of the
	  --disable-extensions and --disable-shell options.
	+ correct guess_recordseparator() to set the number of lines to at
	  least one if the file is not empty.  A binary file containing no CR's
	  or LF's would cause a core dump from 9.2s changes.
	+ modify logic of charinit() so that if one sets printing-high but not
	  printing-low, the latter defaults to 160.

 20011230 (t)
	> Tom Dickey:
	+ force screen to repaint if stripping ^M's as part of set-dos
	  command, overlooked in 9.2s.
	+ modify set-highlighting macro, using "~force" to prevent vile from
	  switching to show the macro buffer if the "setl" fails, e.g., if
	  one attempts to set the majormode of [Output].
	+ add "showformat" mode, to control when the recordseparator is shown
	  in the status line.  Choices are local, differs, always or never.
	+ add &stoken function, which searches for a token in a string, e.g.,
	  "perl" in $cfgopts by
		&stoken  "perl"  ","  $cfgopts
	+ add &translate function, e.g.,
		&trans   ","     " "  "a,b"
	  to change commas to spaces
	+ add backslash as a possible quote character in determining type of
	  here-documents for perl filter.
	+ add xvile configuration types to $cfgopts: openlook, motif, athena,
	  xaw, xaw3d and nextaw.
	+ ifdef'd $prompt string if extensions are disabled.
	+ indent'd display.c, version.c
	+ trim trailing blanks from some source files.  lispfilt.l did not
	  compile with Solaris lex because it was confused by a trailing blank.
	+ modify configure script to check $CFLAGS values obtained from perl or
	  imake with a test-compile to ensure that we do not try to use options
	  for a different compiler, e.g., gcc versus cc (report by Steven
	  Lembark <lembark@wrkhors.com>).
	+ update several configure macros to use AC_CACHE_CHECK to replace
	  AC_MSG_CHECKING and AC_CACHE_VAL, except those which are not
	  compatible, e.g., CF_MISSING_CHECK.
	+ updates for configure macros CF_CHECK_CACHE and CF_CURSES_CPPFLAGS

 20011225 (s)
	> Tom Dickey:
	+ fix a memory leak in vars_complete(), as well as make it faster by
	  caching the sorted list of temporary variables until one is added or
	  removed.
	+ modify modeline display to show local recordseparator values (cr, lf,
	  crlf) rather than dos mode, since the latter is redundant in that
	  context.
	+ implemented support for reading/writing Macintosh files, i.e.,
	  recordseparator=cr.  New commands set-rs-cr, set-rs-lf, set-rs-crlf
	  extend the set-unix-mode and set-dos-mode commands to include Mac's.
	+ indent'd fileio.c, mktbls.c, tbuff.c
	+ modify ntconio.c so that default fcolor is 7 (request by Walter
	  Kennedy <wkennedy@softintegration.com>).
	+ modify ntconio.c so that "reverse" color scheme works.
	+ add $prompt variable, to allow changing the command-line prompt.
	+ fix an infinite loop in sh-filt.c (reported by Paul Fox).
	+ add a configure check for mkdtemp().
	+ regenerate configure script, overlooked in 9.2r after resyncing
	  macros in aclocal.m4

 20011216 (r)
	> Paul Fox:
	+ fix a problem where repeated ":!cmd" invocations (with no intervening
	  carriage return) cause the "Press return..." message to be
	  suppressed.  (The problem is that mlforce suppresses its output if
	  sgarbf is set.  The first shell invocation sets sgarbf, so the prompt
	  after the second shell command never comes out.)
	> Tom Dickey:
	+ change warning level in makefile.wnt to "-W4"
	+ modify ntconio.c to use the original attributes when erasing the last
	  line of the screen when closing the console.  This works around a bug
	  in w95/.../win-me that would leave vile's color settings in effect
	  after vile exited (reported by Walter Kennedy
	  <wkennedy@softintegration.com>).
	+ modify pl-filt.c to handle pattern immediately after "if" keyword,
	  e.g.,
		if /SHLIB_VERSION_NUMBER *"([^"]+)"/; # "
	+ modify sh-filt.l to handle quotes in substitutions, e.g.,
		ACLOCAL=${ACLOCAL-"${am_missing_run}aclocal"}
	+ update config.guess and config.sub from
		http://subversions.gnu.org/cgi-bin/viewcvs/config/config/
	+ regenerate configure script with autoconf 2.52, patched with
		autoconf-2.52-20011201.patch.gz
	  at
		ftp://invisible-island.net/autoconf/
	+ check for $ac_top_srcdir in configure.in, to work with autoconf 2.5x,
	  which renamed this variable from $top_srcdir in 2.13.
	+ modify CF_PROG_PERL to work with autoconf 2.5x, which does not permit
	  unbalanced brackets, using a sed expression to obtain the "$]" token.
	+ modify configure.in to avoid using changequote(), which is broken
	  in autoconf 2.5x
	+ updated install.sh from tin.
	+ updated some configure script macros from changes for tin/lynx:
	  CF_HEADER_PATH, CF_LIBRARY_PATH, CF_MKSTEMP, CF_NCURSES_CPPFLAGS,
	  CF_NCURSES_LIBS, CF_PATH_SYNTAX.

 20011205 (q)
	> Clark Morgan:
	+ fix:  the new builtin find feature makes it relatively easy to
	  construct arbitrarily long pipe commands.  Such long commands could
	  overflow a number of vile's internal temp vars.
	+ Some win2k cleanups:
	  - on a win2k host, if $shell is bogus, read pipes don't display an
	    error message.  Instead, the editor would just hang.
	  - on a win2k host, the shell process spawned via ":!cmd" was usually
	    not executed in the foreground window.
	+ add a pattern to finderr.c to handle this case:  When using visvile
	  under developer studio, the compiler can generate (HTML-based)
	  messages have leading tabs before the filename.
	+ doc/config.doc - numbered macros noted as an anachronism
	+ doc/macros.doc - mention that numbered macros are allocated from fixed
	  pool and describe their (as far as I can tell) single
	  advantage.
	+ vile.hlp:
	  + fix typo where #-<c> binding was attempted in insertmode.
	  + reorganize discussion of macros to mimic (in a very
	    abbreviated form) the key information from
	    doc/macros.doc .
	> J Chris Coppick:
	+ various fixes to Vileserv.pm:
	  + various code and documentation tweaks
	  + Vileserv now automatically installs a $write-hook
	    (for "vileget -w"), unless you tell it not to (details in the doc).
	  + Vileget used to start xvile if needed.  Now it tries 'xvile', then
	    'vile'.
	  + If you hand Vileget a directory name, it will try to do something
	    useful with it.
	  + handle old Vileserv sockets more gracefully, in theory...
	+ minor fixes to Breadcrumbs.pm
	+ add perl/Help.pm
	+ add perl/CaptHook.pm, which provides useful wrappers for Vile's
	  "hook" variables.
	> Tom Dickey:
	+ correct a state in sed-filt.c after parsing a substitute command,
	  which caused alternate lines to not be highlighted.
	+ indent'd trace.c
	+ modify trace.c to make Trace() thread-safe on win32.
	+ correct small bug in ntwinio.c which would allow repaint_window() to
	  be called for a scrollbar.  This normally will not occur because of
	  the way the event queue is processed, but was apparent in debugging.

 20010925 (p)
	> Clark Morgan:
	+ Removed an ugly wart from win32 vile (dated September 11).  Tested on
	  WinME (bash and command.com), Win98 (Thompson Toolkit and
	  command.com), Win2K (cmd.exe).
	+ makefile.wnt and makefile.blc no longer use npopen.c -- all
	  equivalent functionality has been moved into w32pipe.c
	+ w32pipe.c
	  - added completely new approach for temp-files-based pipes (required
	    when using command.com as shell).
	  - force-console code removed (see next bullet)
	  - during testing noticed cases where winvile writes last ditch error
	    messages to stdout.  Uses popup-msgs now.
	+ force-console mode is now a no-op for winvile (retained solely to
	  prevent breaking existing config files).
	+ spawn.c:
	  - npflush() no longer called if using native win32 pipes (the
	    original call was always a nop for native pipes).
	  - win32 hosts call npflush() _after_ closing write pipe file
	    descriptor (important for the temp files implementation).
	+ filters.rc no longer worries about the setting of w32pipes.
	+ gnugpg.rc no longer mentions w32pipes.
	+ macros.doc: remove force-console from example config file
	+ delete doc/w32modes.doc
	+ vile.hlp:
	  - w32pipes and force-console updates.
	  - mention macros/gnugpg.rc wrt encryption (updated in vile.1 as well)
	  - documented interaction between cygwin's bash, console vile, and
	    interrupts.
	  - updated $os description to mirror Tom's changes in doc/macros.doc
	  - within the "Color basics" topic, discuss custom winvile colors
	+ explain how to build filters via makefile.wnt (README.PC).
	+ update vile.hlp's install dir and be more specific regarding vile's
	  installation components (doc/config.doc).
	> J Chris Coppick:
	+ implement perl/Breadcrumbs.pm (request by Clemens Fischer).
	> Kuntal Daftary:
	+ two new perl extensions for vile:
	  1. man.pm is a Unix manual pages viewer in vile.
	  2. dict.pm is a dictionary/thesaurus interface (uses the DICT protocol)
	  Drop both the files in the appropriate path ($HOME/.vile/perl for
	  Unix) and add the following lines in your .vilerc
	     perl "use dict"
	     perl "use man"
	> Mark Robinson:
	+ modify selection in winvile so that DOT is not moved.
	+ improve paste-by-right-mouse-click operation in winvile by NOT
	  setting the insertion point at the position where the mouse happens
	  to be when executing the right-click, but rather pasting at the
	  current DOT (i.e.  right-mouse-click never sets DOT).
	+ change paste in winvile to insert at DOT rather than after.  Also,
	  when pasting in insert mode, set DOT to the end of the inserted
	  text.
	> Tom Dickey:
	+ modify the check in glueBufferToResult() so that parameters of
	  search-commands can have quote-characters escaped, for consistency
	  with the logic that strips them.
	+ extend insert-exec to allow ^A and ^X prefixes to be interpreted
	  in insert mode (based on a patch by Mark Robinson).
	+ corrected binding in dates.rc that demonstrates insert-mode bindings.
	+ add a show-key-names command to show the #-style coding for function-
	  and cursor-keys.
	+ correct number of arguments for &ftime (incorrect number of arguments
	  caused the increased error-checking in 9.2o to break this function).
	+ extend support for alternate bindings by duplicating the default
	  special-key bindings at initialization so they can be customized
	  independently.  For example, this lets one define in vileinit.rc a
	  different home/end key binding for command-mode than for the default
	  (prompted by a patch by Mark Robinson).
	+ modify support for alternate bindings to use different buffer names
	  for describe-xxx-bindings commands, i.e., [Command-Bindings],
	  [Insert-Bindings] and [Select-Bindings], to make it simpler to
	  distinguish them.
	+ add a configure check for working mkstemp() function, use this for
	  spell filter to quiet linker warnings (corresponding warnings for
	  file.c are bogus).
	+ modify configure script for VILE_LIBDIR_PATH and VILE_STARTUP_PATH
	  to double backslashes, just in case the user has defined the
	  corresponding environment variables in DOS-pathname syntax (request
	  by Mark Robinson).
	+ modify adjvalset() to allow an empty response for the mode value if
	  running in a macro.
	+ modify push_variable(), which implements "~local", to check if a
	  given symbol requires quoting to avoid interpreting meta characters
	  when restoring its value (reported by Clark Morgan, e.g., for
	  $paragraph).
	+ add C preprocessor parsing to xresmode, for files that use xrdb.
	+ extend xresmode suffix pattern to add .Xdefaults-hostname
	+ correct parsing of single-line "remark" comments in sql filter, which
	  did not work unless some character followed the "rem" or "remark"
	  keyword (report by Chris Green).
	+ split-out include of <windows.h> into w32vile.h, adding some pragmas
	  which stifle warnings emitted by Visual C++ for M$ header files when
	  compiling with -W4 warning level.  Changed default warning level in
	  makefile.wnt to -W4.

 20010826 (o)
	> Clark Morgan:
	+ correct return code from set_files_to_edit() when no buffer can be
	  found or created.
	+ updates to vile.hlp:
	  a) refine w32pipes description as well as adding updates for
	     WinME/W2K
	  b) documented unmark-buffer
	+ doc/w32modes.doc now mentions WinME and W2K.
	+ add macros/gnugpg.rc, examples of using GNU gpg to encrypt/decrypt
	  a buffer.
	+ added &qpasswd, which solicits a password string from the keyboard.
	  Each typed character is echoed as '*'.  The password is not
	  recallable via vile's usual history mechanism.  This feature enhances
	  the security of the gpg macro wrappers (which have been successfully
	  tested on Unix and Windows).  The only fly in the ointment is the
	  brief time the passphrase is visible at the top of the buffer that's
	  being encrypted/decrypted.
	> Shawn Halpenny:
	+ add lisp syntax highlighter (lispfilt.l)
	> Tom Dickey:
	+ indent'd history.c, main.c, search.c
	+ add search.rc macro (based on discussion with clemens fischer
	  <rabat@web.de>).
	+ change a few places (search.c, eval.c) which used mlforce() to
	  display "Aborted" messages to use mlwarn().
	+ several changes to improve error handling in macros (prompted by
	  reports by Clark Morgan):
	  + modify run_func() to ensure that the pointer error_val is returned
	    on an error condition.  Previously the corresponding string "ERROR"
	    was returned rather than the special pointer value, preventing
	    run_func() from detecting operations on erroneous data.
	  + return error_val from run_func() if the built-in function
	    parameters were error_val, except for special cases such as the
	    &error function.
	  + add error-checking for divide-by-zero in &divide, and &modulo.
	  + return error_val from run_func() for built-in functions &dquery,
	    &qpasswd, &query if the user presses ESC to abort the input.
	  + check for ABORT return in prompts for missing macro parameters,
	    to cancel execution of the corresponding macro.
	+ modify hst_append() and related logic to store quoted tokens in
	  [History] if the eolchar is whitespace, and if the token contains
	  embedded whitespace or quote characters.  The tokens presented for
	  editing command history are dequoted.
	+ modify hst_append() to ensure that if the glue character is a return
	  or newline, then vile will interpret that as a blank to insert
	  between tokens.  This case happens when prompting for macro
	  parameters (reported by Clark Morgan).
	+ set umask before calling mkdir, in case user's umask has been
	  mistreated, e.g., by certain mail programs that remove execute-flags
	  from the umask.
	+ minor updates to configure script macros, for ncurses
	  (i.e., macros CF_CURSES_CPPFLAGS, CF_MAKEFLAGS, CF_NCURSES_CPPFLAGS,
	  CF_NCURSES_VERSION, CF_PROG_EXT).
	+ modify logic of popup-msgs to keep it from popping up [Messages]
	  before the end of initialization.  This would happen for example
	  if $pagelen were altered, since 9.2m change to set need_update
	  flag rather than call vile_refresh() for mode-settings which affect
	  the screen (report by Clark Morgan).
	+ add 'buffer' to the types of parameters which may be given in a
	  macro template (report by Clark Morgan).
	+ add logic to pl-filt.c to handle case such as the second pattern in
		if(/pat1/ || /pat2/)
	+ correct implementation of is_PREPRO() in pl-filt.c, which matched
	  "#!" rather than the documented C-style "# line <number> <filename>".
	+ correct two problems in write_PATTERN() in pl-filt.c, noticed in
	  check_po script:
	  a) parse square-bracketed ranges
	  b) correct string address at the end of the loop.
	+ corrected expressions for strings in rexxfilt.l; backslash does not
	  act as an escape character.
	+ corrected special cases for $endtext and $rem in fdl-filt.l
	+ adjust ifdef's for strftime() to use it on win32.
	+ add several null-pointer checks in statevar.c
	+ use &default function to make vile-pager script a little more
	  portable with respect to the start-filename (report by Clark Morgan).
	+ implement &default built-in function, which returns the initial or
	  default value for modes and some state variables.
	+ rewrote global_val_init(), splitting out functions init_mode_value()
	  and init_state_value() to implement &default functions, which return
	  the initial/default value of the corresponding mode or state variable.
	+ reduce casts, fix signed/unsigned mismatch in prc2kcod().
	+ add missing ifdef around vl_atoul() in case no strtoul() is available
	  (report by Larry Gensch, on Tru64 5.1).
	+ modify ntwinio.c to check if the given argument list matches an
	  existing filename, and open that if so.  This allows one to use
	  SendTo to open files with blanks in their names.

 20010613 (n)
	> Tom Dickey:
	+ indent'd modes.c and os2vio.c
	+ implement show-error-expressions command, which shows more complete
	  information about the [Error Expressions] buffer.
	+ modify shmode preamble to accept a line such as
		#!/bin/sh --
	+ add a message to stderr in os2vio.c telling how to exit vile.  If the
	  OS/2 console version is run via telnet, it does not display anything,
	  and none of the screen-related functions return an error.  A message
	  is needed to guide a user to gracefully exit vile w/o rebooting the
	  system.  There is a small flicker when starting normally.
	+ add 'mouse' mode for OS/2 (CSet), to disable mouse when not wanted.
	  Modify logic in os2vio.c to sleep briefly in the loop polling the
	  keyboard and mouse, thereby reducing CPU time for that (report by
	  Paul Marwick <paulm@waitrose.com>).
	+ widened ifdef for CSet error-expression, to make it useful when
	  building CSet applications with the OS/2 EMX version of vile.
	+ include <io.h> in file.c to make this build on OS/2 with CSet.

 20010523 (m)
	> Mark Robinson <mark.robinson@baltimore.com>:
	+ when popup-menu is inactive, if text is selected, right-click copies
	  to w32clipboard; otherwise right-click pastes from w32clipboard.
	> Tom Dickey:
	+ replace the vile_refresh() calls in modes.c with need_update flag,
	  since vile_refresh() set sgarbf, which prevented _all_ screen updates
	  including messages.
	+ implement a simple example of macros to insert or display timestamps
	  for the current buffer (macros/dates.rc).
	+ modify prc2kcod() to recognize "M-" (meta) in combination with
	  other prefixes such as "#-", needed to parse KEY_F21 to KEY_F35 with
	  the termcap driver.
	+ change the octal character constants used in KEY_F21 to KEY_F35 to
	  decimal to avoid sign-extension.
	+ implement three functions for working with timestamps: &ftime, &stime,
	  and &date, respectively for file modification time, system time, and
	  formatted date/time.
	+ disable 'working' in writeall() while writing the output.
	+ two fixes for writeall() function: (a) don't use for_each_buffer()
	  macro to iterate, since the item referred to by the loop index moves,
	  making it possible to get an infinite loop, and (b) don't try to
	  write buffers which have not been loaded (the first was reported by
	  Brendan O'Dea; both bugs date to 1996).
	+ add commands "ww!" and "wall!", to respectively write all changed
	  buffers and write all buffers, using the "w!" behavior of ignoring
	  readonly file permissions.
	+ correct an out-of-order buffer flush for the strip_tabs logic in
	  sh-filt.l, which made the end of a here-document incorrectly colored.
	+ add a simple xml majormode.
	+ format lynx output in ShowFormatted to the screen width rather than
	  the default of 80 columns.
	+ improved perl syntax highlighting (pl-filt.c) by relaxing the
	  check for "=cut" to match perl's code rather than its documentation,
	  allowing for "{" "}" grouping around a regular expression, and
	  showing variables with Ident2 class.
	+ add a null-pointer check to slconv(), just in case (report by Mark
	  Robinson).
	+ implement bold/italic/underlined fonts in winvile (this is a first
	  cut, which occasionally has pixel trash when a bold or italic
	  character extends too far out of the normal font's bounding box).
	+ add a null-pointer check in sl_to_bsl(), since that is used, for
	  example, with a parameter from cfg_locate() which may return a null.
	+ indent'd path.c

 20010429 (l)
	> Clark Morgan:
	+ expanded description of "Favorites" in win32 section of vile.hlp
	+ if a multi-char map sequence includes a long timeoutlen-user value,
	  turn on the winvile cursor while waiting for keyboard input (bug
	  reported by Jason.D.Karney@clev.frb.org).
	+ modify ntwinio.c so that custom cursor manipulation code does not
	  show the cursor if the editor does not have focus.  This change is
	  required to support the aforementioned bug fix.  I've also seen
	  infrequent occasions where winvile still emits stray cursor glyphs.
	  This often occurs when I'm changing focus from some other app to the
	  editor via a mouse click.  I hope this latter change eliminates a
	  race condition within the editor.
	+ modify check in HighlightFilter macro to ensure that vile.exe also
	  must have w32pipes set to enable syntax highlighting.  This is a
	  necessary condition on W95/W98/WinME.
	> Tom Dickey
	+ indent'd buffer.c, file.c
	+ reimplement ":args" command to accept a filename expression.  If no
	  filename is given, as before it will show the buffer list, but if a
	  filename is given, it will replace the list of visible buffers with
	  those matching the expression.  Use ":args!" to discard changes
	  pending to one or more buffers (request by Vicki Brown).
	+ add hst_reset() function, called from main loop to reinitialize data
	  used for gluing portions of a command together for the [History]
	  buffer.  This addresses a problem reported by Clark Morgan where the
	  first time a ^WG!ls command was given, vile reported "No match for"
	  ls in the current directory.  This change by itself makes vile report
	  no matches all the time, because it was attempting to do
	  filename-completion on the "ls" string.
	+ add a special case in kbd_reply(), setting KBD_REGLUE to ensure that
	  when given the command ^WG!ls does not attempt to do
	  filename-completion on the "ls" string.  Though KBD_REGLUE was added
	  in 9.2c, it was not used, since the ^R fix relies on a different
	  part of the change.  This change uses KBD_REGLUE.
	+ fix highlighting of include's in c-filt.c, which did not allow a
	  blank in the filename.  Modify highlighting of filename to Literal.
	+ add a configure check for strtoul(), which was not available on
	  SunOS 4.x.
	+ updates to configure script macros:  CF_CURSES_LIBS (split-out
	  CF_CURSES_CPPFLAGS, add check for SunOS curses), CF_IMAKE_CFLAGS
	  (disable CDPATH during test), CF_NCURSES_CPPFLAGS (improve check for
	  ncurses headers), CF_NCURSES_VERSION, CF_TERMCAP_LIBS, as well as
	  newer config.guess, config.sub scripts.
	+ correct handling of backslash in htmlfilt.l, and highlight numbers
	  in that filter.
	+ fix a trailing comma in an enum in sed-filt.c
	+ quote filename in manpage.rc when it is used in shell commands, in
	  case it contains blanks or other special characters.

 20010407 (k)
	> Clark Morgan:
	+ update note in README.PC about problems with ActivePerl.
	> Tom Dickey
	+ add a check in zotbuf() to prevent a buffer from being deleted while
	  it is being executed as a macro (report by Paul Fox).
	+ fix a potential overflow of linebuf[] in ntconio.c
	+ fixes for ntwinio.c and ntconio.c to handle default color codes
	  properly.  The logic did not mask out unrelated bits from the
	  attribute field, did not apply bold and italic codes in the right
	  order to work with default colors.
	+ make manpage.rc work on win32, etc., assuming cawf is available as
	  a substitute for nroff.
	+ check imakemode before defmode.
	+ modify ntconio.c so control/@ is translated to ^@ on insertions
	  (reported by Clark Morgan).
	+ use SL_TO_BSL() to convert path separators to native form on DOS
	  and similar systems in the return values of builtin functions such
	  as &lookup, needed this to port manpage.rc
	+ improve bas-filt.l's rules for hexadecimal constants, add action
	  highlight for "_" used as a continuation marker, and show #date#
	  constructs as a string.
	+ accept ".cmd" as a suffix for batmode, resolving conflict with OS/2
	  by making it specific to the system.
	+ modify bat-filt.l to highlight the portion labels past 8 characters.
	  Only the first 8 are significant.
	+ modify bat-filt.l to handle '@' before any command, e.g., @rem.
	+ adjust ifdef's for OPT_FINDPATH to build with configure
	  --disable-extensions.
	+ modify ntwinio.c to recognize control/@ or control/2 as ^@.
	+ add ".exp" to tclmode, for 'expect' scripts.
	+ refine suffixes for rcmode to avoid conflict with names such as
	  .lynxrc

 20010322 (j)
	> Clark Morgan:
	+ added $findpath and $find-cmd state variables.
	+ on win32 and unix hosts, modified capturecmd (aka ^X-!) to support
	  find operations that span directory tree(s).   This feature is enabled
	  via a find-cfg mode.
	+ added a section to the help file entitled:
	    Working in a project hierarchy
	  which describes several features that enable quick access to many
	  files spread over a directory hierarchy.  Features discussed include:
	  - Directory navigation (the pushd, popd, et. al. commands).
	  - Hierarchical tags
	  - File/Directory traversal (win32/Unix hosts only)
		+ w32ole.cpp compiler warning fix.
		+ put ntwinio/ntconio msg strings in proper format.
		+ eliminate a couple of atoi() calls in random.c
	> Kevin Buettner:
	+ workaround for a Perl 5.005 bug in perl_prompt().
	+ several changes to shell.pm:
	  + some documentation updates
	  + bug fixes
	  + a new command called "xterm".  which starts a shell in one of
	    vile's buffers just as "start-shell" already does, but also
	    starts an xterm through which one may (also) interact with the
	    shell.  The shell output (and echoed input) is displayed in both
	    the xterm and a vile buffer.
	> Paul Fox:
	+ fix a typo in vile.hlp's example using bind-key for a space (report
	  by Clark Morgan).
	> Tom Dickey:
	+ change an inequality in read_quoted() which had the effect of
	  changing a null (^@) entered after ^V to a -1, preventing user from
	  inserting a null character (reported by Clark Morgan).
	+ correct a loop condition in put_majormode_after(), which caused a
	  core dump when an "after" qualifier referred to a majormode which was
	  not defined.
	+ add $majormode-hook, which can override the suffix/preamble rules
	  for choosing a majormode for the current buffer.  If the associated
	  script sets the majormode, the other rules are not run.
	+ implement new majormode submode "qualifiers", which can be set to
	  "all" to specify that both suffix and preamble must match.  This is
	  used to keep rcmode and vilemode from conflicting.
	+ add null-pointer checks to choice_to_code() and choice_to_name(),
	  guarding against unimplemented enum-tables.
	+ add syntax filters for Windows ".def" and ".rc" files.
	+ add Visual Basic majormode (vbmode).
	+ add syntax filter for BASIC, and majormode basicmode.

 20010304 (i)
	> Clark Morgan:
	+ elaborated on "apropos" and "describe-key" in macros.doc
	> Paul Fox:
	+ extended check-modtimes mode, necessitated by an interaction between
	  the new unique-buffers mode and check-modtimes.  The problem is this:
	  my current project lives in a tree that makes copious use of
	  symlinks.  This means that the name by which I edit a file may not
	  match the name by which "make" refers to the file when it reports an
	  error.  "unique-buffers" normally guarantees that I won't edit the
	  file twice in this case.  but if the file gets replaced, for example
	  with ":!co -l file.c"), then the inode will change on disk, but
	  vile's notion of the inode will not change.  this causes vile to
	  create a new buffer the next time make reports an error on it (with a
	  different pathname).  With this patch, if check-modtimes is on, then
	  when the file is reread, the inode (fileuid) info is updated, and
	  vile is again in-sync with the filesystem.
	> Tom Dickey:
	+ add/use code FILEC_WRITE2 to use in mlreply_file() to avoid getting
	  prompted about overwriting a file when using ":w! filename".
	+ add definitions so winvile.exe and vile.exe use utime() to set the
	  proper date on backup files.
	+ modify writereg() so that if the user specifies ":w!", and the file
	  is not writable, it will (try to) temporarily chmod the file for
	  writable access.  Note that the view-only mode overrides this
	  behavior, unlike vim (request by Igor Schein <igor@txc.com>).
	+ modify logic of read_argument() to force interactive input of
	  parameters which have not been specified in the command.  This allows
	  a user to write a macro which can be bound to a function key and
	  still prompt for parameter values.  Unlike the '@' response token,
	  parameters can be something more than an untyped string, e.g.,
	  file/directory completion (report by <rick_wessell@email.com>).
	+ add a "directory" parameter type.
	+ change mlsave to a TBUFF, so popup-msgs will not show messages
	  truncated to NSTRING (143) columns.
	+ add $with-prefix variable which shows the prefix string in effect
	  from a "~with" or "~elsewith" directive.
	+ add $title-format variable which can be used to specify a customized
	  title for xvile or winvile.
	+ make swap-title option apply to any platform that sets window-title.
	+ modify makefile.wnt to check PROGNAME variable, which can be set
	  to override the target name, and the $progname state variable.
	+ add missing braces around a chunk of logic in api_command_cleanup(),
	  reported by antic.
	+ add ".vile" to suffixes for vilemode.

 20010224 (h)
	> Clark Morgan:
	+ fix some compiler warnings highlighted by change in 9.2g to use "-W3"
	  warning level in makefile.wnt (mktbls.c, ntwinio.c, w32oo.cpp,
	  wvwrap.cpp).
	+ fix bug introduced in getfile2bp() in 9.2g by compiler-warning
	  cleanup which broke ^X-e command.
	> Tom Dickey:
	+ modify definition of $progname so it can be redefined at build time,
	  allowing multiple versions of winvile to coexist.
	+ minor tweak to Clark's fix for getfile2bp() to fix the compiler
	  warning too.
	+ improved expressions for $filename-expr to avoid picking up ':'
	  unnecessarily.
	+ add an error expression for 'antic', which uses line and column
	  numbers, and correct column placement to account for tabs.  The
	  other expressions using columns were applied to listing files with
	  tabs already converted.

 20010217 (g)
	> Clark Morgan:
	+ rewrote much of the internals of winprint() and associated functions
	  were for better clarity and documentation (for the next person who
	  wanders through this code).  Corrected bugs and many FIXME's.
	+ text selection printing is now supported.
	+ if a formfeed is encountered in the text, the current page is
	  ejected.
	+ the "copies" and "collation" print dialog box options are now
	  supported regardless of the associated printer driver's capabilities
	  (or lack thereof).  The one exception is that uncollated text
	  selection copies are not permitted unless the printer driver provides
	  "native" multiple copy support.  In the event it's not possible to
	  print uncollated text selection copies, a message box is displayed
	  that notes the restriction and then offers a chance to continue with
	  collated copies.
	+ finish win32 copyright updates for 2001.
	+ if winvile's ntgetch() ignores a WM_TIMER message, dispatch the
	  message to a window proc that "cares".
	+ noticed that when incanting ":!ls | less" from within winvile, the
	  spawned console's close button is _not_ disabled if the shell
	  modifies the console title (a la bash).  Fixed for win9x hosts.  I
	  assume that the fix applies equally to NT and W2K.
	+ added bulletproof "string to [unsigned] long" conversion routines to
	  random.c (vl_atol and vl_atoul).
	+ substantially changed the implementation of vile's insertion cursor
	  interface.  Insertion cursor state changes are now handled in
	  update().
	+ added icursor (insertion cursor) mode for win32 hosts.
	+ added a boolean swap-title mode (win32 only).  If set, the editor's
	  title is displayed as "<buffer_name> - <editor_name>" instead of the
	  usual "<editor_name> - <buffer_name>".  The former conforms with the
	  behavior of many win32 apps and is also much more useful, e.g., from
	  a screen real estate point of view, when many apps are resident in
	  the task bar.
	> Juan Carlos Gil Montoro <jcgil@gmv.es>
	+ modify store_tag() function in tags.c to accept tags with qident
	  class rather than ident, that is, including colons as part of the
	  identifier.
	> Paul Fox:
	+ add setenv (set-environment-variable) command.
	> Tom Dickey:
	+ make current_undo_cookie have the same type as LINE.l_undo_cookie to
	  avoid spurious matches.
	+ add checks to finderr.c to ensure that line and column number are
	  actually numbers.
	+ correct logic in finderr.c which did not work properly if pattern
	  contained \( and \) delimiters.
	+ add pattern to finderr.c for Solaris lex.
	+ add patterns to finderr.c for Borland C++ (reported by Manish Bhobe
	  <mjbhobe@vsnl.com>).
	+ fix various minor things to make vile and winvile compile with
	  Borland C++ 5.5
	+ fix several unused-assignments reported by Borland C++ 5.5
	+ make statevar.c more compact using new functions any_rw_BOOL(),
	  any_ro_BOOL(), any_ro_INT() and any_ro_STR().
	+ change ifdef's for vl_atol() and vl_atoul() to make them independent
	  of __STDC__ value.
	+ indent'd undo.c
	+ reindented ntconio.c, ntwinio.c, random.c undo.c
	+ change most instances of 'unsigned long' to ULONG, etc., for
	  consistency.
	+ workaround in configure script macros to allow testing with autoconf
	  2.49c, which has broken the changequote() feature.
	+ fix a check in CF_CURSES_LIBS which caused the configure script to
	  assume it had found ncurses when it had not.
	+ update config.guess/config.sub to subversions version, which finally
	  includes OS/2 EMX.
	+ fix sh-filt.l to compile with lex that uses yytext array rather
	  than char* pointer, e.g., SCO OpenServer.

 20010122 (f)
	> Tom Dickey:
	+ several related changes to regexp.c:
	  + add first cut of logic for bounds (but see buglist).
	  + implement POSIX character classes and analogous escapes like \d to
	    make them more vile-like (prompted by discussion with George
	    Eccles).
	  + remove fallback for strcspn().
	  + indent'd
	+ work around NetBSD 1.5's use of MK symbol in curses.h (reported by
	  Matthias Buelow).
	+ add syntax filter for ECLiPSe, a dialect of Prolog (from Joachim
	  Schimpf <j.schimpf@icparc.ic.ac.uk>).
	+ modify sh-filt.l to recognize "<<-" marker beginning a here-document.
	  That tells ksh and similar shells to ignore leading tabs, including
	  when matching the final word of the here-document.
	+ fix some of the staircasing problems with curses.c driver by saving
	  and restoring the tty modes explicitly, so we can separate that
	  effect from the screen initialization that curses does (fixes a
	  staircasing in the usage message reported by Mikel Finch
	  <Mikel.Finch@med.ge.com>).
	+ add Verlog filter and corresponding majormode vlogmode (request by
	  Balekudru Krishna <bkrishna@asicdesigners.com>).
	+ correct an 'awk' in configure.in that should have been $AWK.

 20010106 (e)
	> Clark Morgan:
	+ workaround for a bug in wvwrap observed on win96/winme.  wvwrap uses
	  COM to send this stream of commands to winvile:
		:cd <path>\n:e <file>\n
	  Playing with this a bit, I found that I could reproduce this problem
	  using these commands (sans wvwrap):
		[win]vile
		:cd \\remote_node\share_drive_name
		:e autoexec.bat           ; for example
	  [win]vile could not "open" the specified file and treated it as a new
	  file.  The problem persists even if forward slashes are used as an
	  argument to the cd command.  I don't know if this problem exists on
	  NT or W2K.  The fix is to pass filenames to fopen() in canonical
	  Win32/DOS format (i.e., paths include backslash delimiters).  I've
	  heard several developers say that the win32 version of fopen()
	  supports both forward and backward slashes.  Well, using VC5.0++
	  (SP3), I know of at least one case where that assertion is false.  In
	  addition, it was also necessary to ripple SL_TO_BSL() changes through
	  various system calls in write_backup_file(), due to the same observed
	  behavior.
	+ modify sh-filt.l to avoid coloring the white space that precedes the
	  ':' command.
	+ added basic win32 printing for winvile via these two new commands:
	       winprint winpage-setup
	  This feature is not currently available for console vile.  _Missing_
	  printing features include:
	  + ability to set printing font (distinct from display font),
	  + header/footer strings (footer currently hardwired as centered page #)
	  + printing of current selection
	  + collation for printer drivers that don't support this feature
	  + N copies for printer drivers that don't support this feature
	  + color and visual attributes
	  Tested on Win98/95 using an HP LJ4Plus and an HP DJ870CSe.
	+ added  "Print..." and "Page setup..." selections to winvile system
	  menu.
	+ when win32 common open/save dialog boxes are dismissed during a
	  console vile editing session, attempt to re-establish window focus
	  for the editor.
	+ found a way to disable a spawned console's close button (significant
	  winvile hole closed).  Thank you, Mr. Petzold.
	+ clean out a couple of bugs in buglist that were fixed long ago.
	+ in ntwinio_font_frm_str(), report win32 error(s) before making another
	  win32 API call (doh).
	+ in the remarks section of a number of Win32 API calls, I noticed
	  verbiage similar to this:
	      "Resources associated with a menu that is assigned to a window
	      are freed automatically.  If the menu is not assigned to a
	      window, an application must free system resources associated with
	      the menu before closing.  An application frees menu resources by
	      calling the DestroyMenu function."
	  Since winvile's popup menu is not assigned to a window, I added code
	  to clean it up.  If the verbiage above is to be believed, then
	  apparently "modern" Windows apps (i.e., post-Win 3.11) can still leak
	  system resources.  Oh my.
	> Tom Dickey:
	+ make check in filesave() for missing filename consistent with
	  writereg, which checked for internal filenames rather than simply a
	  missing name.
	+ add check in writeall() for attempt to write internal buffer such
	  as [unnamed], and show the buffer name rather than the empty filename
	  in the resulting warning message.
	+ add write-all-buffers command, to attempt to write all buffers
	  whether or not modified (request by Clark Morgan).
	+ modify adjvalueset() to allow users to set strings and patterns to an
	  empty value with 'unset'.  Previously, an 'unset' would always prompt
	  for a value, which had the effect of treating an empty response as
	  keeping the current global buffer or window value.  Note that
	  'unsetl' is unaffected.
	+ modify var_LCOLS() to avoid having the sideways value subtracted from
	  $lcols.  This is used in ^G (reported by Clark Morgan).
	+ change several entries in dcl.key to shorter abbreviations.
	+ add configure check for existence of /dev/tty, to work around broken
	  pty implementation on QNX: if one su's from root, /dev/tty is usable
	  while the pty (which ttyname() cites) is not.
	+ implement x-modifier parsing for perl expressions.  According to the
	  perl documentation, the '#' markers in Jim Crigler's example would be
	  treated as comments if there was a /x modifier.  vim does not check
	  for this.
	+ fix an infinite loop in pl-filt.c when parsing this example:
	    $rest =~ /^1\s+              # first action
		      (\S+)\s+           # date
		      (\S+)\s+           # time
		      ((?:\w|\s)+)\b\s+
	  The code was expecting the first "\s" on the last line to be
	  followed by a "+" sign or other meta character, and dithered between
	  eCODE and ePATTERN cases (reported by Jim Crigler).
	+ correct winvile command-line parsing:  single-quotes should
	  be considered part of the parameter.  Also, ignore empty
	  parameters, to allow scripts to use double-quoted
	  parameters, though note that SendTo under W2K automatically
	  double-quotes pathnames that require this.
	+ correct filtername compiled into vile-nr-filt, which did not match
	  nrmode.
	+ add popup-menu mode for winvile (patch by Mark Robinson
	  <Mrobinson@baltimore.com>).
	+ modify value for bindir in filters/makefile to exclude paths past
	  the first in $VILE_LIBDIR_PATH (reported by Chris Green
	  <chris@areti.co.uk>).
	+ apply $CFLAGS/$CPPFLAGS change to CF_X_TOOLKIT configure macro.
	+ correct allocation size in OpenKeywords(), which was not long enough
	  (patch by Joachim Schimpf <j.schimpf@icparc.ic.ac.uk>).
	+ fixes to build on Windows 2000 (win2k) with perl 5.6.0, Visual C++
	  5.0 (mkprlenv.wnt, filters/makefile.wnt).

 20001206 (d)
	> Kevin Buettner:
	+ change default for $XSHELLFLAGS from "-c" to "-e", which matches the
	  documentation for $xshell-flags.
	+ make updlineattrs() even more efficient and also fixes a problem
	  with attributes not always being displayed correctly across adjacent
	  rows.
	> Tom Dickey:
	+ revert part of the PutChar() change from 9.2c, since it incorrectly
	  puts the cursor at the first character of a line after a "put"
	  (reported by Paul Fox).
	+ add/use BUFFER.b_inuse value to ensure that we do not recreate a
	  stored procedure that is currently being executed (reported by
	  George Eccles, Clark Morgan).
	+ add dummy parameters to invocation of tparm() to make this build on
	  HPUX and AIX which use the X/Open non-varargs prototype for that
	  function (reported by Jordan Henderson
	  <jhenderson@daynt1.daas.dla.mil>).

 20001115 (c)
	> Clark Morgan:
	+ minor updates to vile.hlp, macros.doc
	+ added select-all and selection-clear commands.  The former command
	  selects, highlights, and yanks all text in the current buffer to the
	  unnamed register.  The latter command removes a selection's
	  highlighted attributes.  Select-all is only available on hosts where
	  vile provides integrated mouse support.
	+ added "Select All" to winvile's right-mouse-button menu.
	+ added text to properly describe win32 bindings that use VK_DELETE
	  (delete key).  This is a bug fix.
	+ winvile's right-mouse-button displays the key bindings of all menu
	  items that are bound to vile commands (previously, only some bindings
	  were displayed).  The menu's key binding text is synthesized at
	  runtime.  This synthesis code was modified so that if there is no
	  binding, winvile displays nothing, rather than garbage (bug fix).
	+ stub in some commands for win32 printing.
	+ fixes for this problem reported by Richard Hussong
	  <rhussong@ciena.com>:
	    "Winvile sometimes appears to receive and process cursor-motion
	    events when the cursor is not in the window, even when it does not
	    have the focus.  The effect is that the Vile window scrolls.  I
	    have even seen this happen when the cursor was moved from one half
	    of a split Winvile window to the other - the window that the cursor
	    had just left started scrolling spontaneously.  Note that this
	    happens with no mouse buttons pressed."
	  * implement mouse capture a la Petzold's "Programming Windows 95".
	  * make sure timer is allocated before starting autoscroll.
	  * only autoscroll if WM_TIMER timer ID matches that of timer created
	    during autoscroll init.
	> Kevin Buettner:
	+ improve performance for very long syntax-highlighted lines
	  essentially converts a quadratic algorithm into a linear one.  It
	  also fixes the crasher you get when you change from linewrap mode to
	  nolinewrap mode where the first line won't fit on the screen.
	  (report by Clark Morgan).
	+ fix related problem where VASPCOL code was interpreted incorrectly as
	  VASPCOL | VASEL | VAREV, making add_line_attribute() consider this to
	  be a selection (due to VASEL being set) and forcing the attribute to
	  a buffer attribute (which it needs to be for selections.)
	+ add check in update() to make sure that movements in very long
	  wrapped lines get updated properly (reported by Clark Morgan).
	> Paul Fox:
	+ modify handling of select() in ttgetc() to check for out-of-band
	  conditions, to avoid looping on errors in stdin.
	> Tom Dickey:
	+ add check in vileperl.rc in case the server is still running, to
	  avoid error message (reported by Bruno Betro <bruno@iami.mi.cnr.it>,
	  discussion by J Chris Coppick and Clark Morgan).
	+ make corresponding changes for poll() in ttgetc(), as noted by Paul
	  Fox.
	+ fix two quirks of PutChar(), in line.c:
	  + yanking all of vile.hlp with yG, then putting (p) into an empty
	    buffer would put an empty line on the end, but remove the initial
	    empty line (reported by Clark Morgan).
	  + restore DOT to the original location after putting the text.
	+ modify treatment of pushed_back flag in kbd_reply() so it will force
	  the given partial result to be glued to the pushed-back string.
	  This fixes a problem using ^R to read the result of a shell command
	  (reported by George Eccles <gbeccles@a-znet.com>).
	+ modify form of includes to be consistent, e.g., quoted includes for
	  vile's source files other than config.h which should always use
	  brackets (reported by Clark Morgan).

 20001104 (b)
	> Clark Morgan:
	+ add command dirs-clear, which clears dirstack and kills dirstack
	  buffer.
	+ add command dirs-add, which adds a directory to dirstack[top -1]; cwd
	  remains unchanged.  This command permits initialization of dirstack
	  via a macro and/or startup file.
	+ remove a state variable from ntgetch(), which could conceivably fall
	  out of sync due to calls to winvile_cursor_state() by other vile
	  modules.  This appears to fix a bug which would cause winvile's
	  cursor to vanish.  Switching to a different window would eventually
	  allow winvile's cursor to reappear (reported by Richard Hussong
	  <rhussong@ciena.com>).
	+ update README for 9.2
	+ add caveat in doc/macros.doc regarding inline comments for commands
	  that accept optional parameters.
	+ update vile.1:  Add -i, -R, and -k to invocation switches.  Add a new
	  encryption section.  Note that vile's encryption is not compatible
	  with vim.  Remove reference to nonexistent -m switch (which was
	  supposed to encrypt/decrypt mail messages).
	+ document that write-file accepts an optional filename argument
	+ change $crypt variable so attempts to read it return the string
	  "[write only]" rather than the ERROR token.
	+ if last element is popped off dirstack and [DirStack] is the only
	  visible buffer, be sure to update [DirStack].
	+ add consistent error message delimiters for modules that I regularly
	  modify.
	+ when winvile spawns a dynamic console, the parent process ignores all
	  win32-supported signals until the console exits.  This prevents a
	  Ctrl+Break in the console window (for example) from rolling up
	  winvile.  Patch is based on code I recently noticed in the vim
	  sources.
	> Tom Dickey:
	+ add configure check for ispell or spell program, use that in spell
	  filter.
	+ add double-quote character to those not treated as part of a filename
	  in the default for $filename-expr
	+ add/use CharOf() macro to suppress sign-extension of char type on
	  platforms where this is a problem in ctype macros, e.g., Solaris.
	+ add variables $error-expr and $error-match, which show the last error
	  expression and the text it matched.
	+ expand ifdef's for pop_fake_win()/push_fake_win() to include the
	  tprintf() logic, making 9.2 build on VMS.
	+ change several configure macros to use $CPPFLAGS consistently for
	  preprocessor options rather than $CFLAGS.

 20001026 (a)
	> Clark Morgan:
	+ expanded description of 00-10-11 item in buglist (:!ls in winvile)
	> Tom Dickey:
	+ minor fix to sh-filt.l, adding default action for <HEREDOC>, which
	  is needed to match $'s.
	+ rename getcchar() to vl_getcchar() to avoid conflict with X/Open
	  curses function.
	+ correct change to imply_buf (9.1x), which resulted in reading each
	  file twice if implybuf was set true.  Only files that are being
	  written should be reread.
	+ update config.guess, config.sub to reflect changes at
	  subversions.gnu.org
	+ update some details in doc/dir.doc to reflect renaming, etc (reported
	  by Kevin Luu <kevin@islanddata.com>).
	+ correct substitution of path to filters source-directory in
	  mk-2nd.awk, which did not take in account that 'configure' might be
	  invoked with an absolute path, so the $top_srcdir value also would
	  be absolute (reported by Kevin Buettner).
	+ correct regular expressions for configure script's option value of
	  --with-builtin-filters, probably broken in 9.1p when changing
	  genmake.mak to 3-column format (reported by Michael Finken).

Changes for vile 9.2 (released Tue Oct 17 2000)

 20001015 (za)
	> Clark Morgan:
	+ added pushd, popd, dirs.
	+ added ~trace/$debug documentation (taken from doc/macros.doc) to
	  Debug section of help file.
	+ made paragraph spacing in macros.doc consistent.  Fixed an instance
	  where the formatted text exceeded 80 cols with tabstops set at 8.
	+ when winvile is started from a shell, there are times when stdout and
	  stdin (and maybe stderr) have been redirected to handles that can't
	  be accessed by the running (GUI) process.  This is known to occur
	  with the CYGWIN shell(s) on a WinNT host.  Add code to get the proper
	  stdin/stdout handles, as well as ensure that the dynamically
	  allocated console doesn't use black text on black background.
	+ documentation updates: buglist item for winvile with :!ls
	> Brendan O'Dea:
	+ fix a couple more places with untying handles for Perl.
	> Tom Dickey:
	+ document known problems with curses.c driver

 20001010 (z)
	> Clark Morgan:
	+ fix a display glitch in w32_keybrd_reopen().
	> Brendan O'Dea:
	+ problem:  in Perl 5.6.0, some changes to the tied filehandle
	  mechanism break anything which attempts to re-open STDOUT/STDERR,
	  such as shell.pm as that now attempts to invoke the non-existent
	  method Vile::Buffer::OPEN .
	  Workaround: untie the handles before re-opening.
	> Tom Dickey:
	+ use new function SamePixel() to treat Pixel values as equivalent if
	  the difference between each of their RGB components is relatively
	  small.  Add a check for the default resource value of fcolor0,
	  forcing that to black if xvile's foreground does not look different
	  from white.  This makes some of the color palette commands, e.g.,
		:set cs=black
	  work properly.
	+ correct computation of 'diff' variable in tcapattr(), and add a check
	  for coincidence between strings that are used to turn off
	  corresponding video attributes.  The first error made vile turn off
	  the wrong attributes under some conditions, and the second would
	  cause it to omit turning back on attributes that it had inadvertently
	  turned off (reported by Clark Morgan).
	+ add imakeflt.l, to highlight Imakefile's.  Using c-filt.c was not
	  satisfactory because it did not treat quotes properly on comment
	  lines.
	+ minor fix to makefilt.l to treat "#include" as a comment.
	+ minor fix to vilefilt.l to prevent double-quoted text from spanning
	  multiple lines.

 20001005 (y)
	> Clark Morgan:
	+ update makefile.blc, add w32oo.obj
	+ when pasting to clipboard, use a less ambiguous status message.
	+ change global var that's used to detect when minibuffer is active.
	  Keying on "bminip" doesn't work in all cases.
	+ for winvile, allow clipboard paste via RMB menu into minibuffer.
	+ when pasting into minibuffer, don't report an error if an attempt is
	  made to paste more than one line.  Instead, clip the paste to a
	  single line.  This behavior mimics the action taken under similar
	  circumstances by nontrivial windows apps (e.g., Outlook and IE).
	+ initialize the winvile "Save As" dialog with the name of the current
	  open file.
	+ modify 'setv' logic to provide the current value of a variable when
	  setting it (request by Pedro Gomes).
	+ added the state variable $favorites, which returns the path to the Windows
	  Favorites directory.  On a Win95/98 host, this feature affects
	  console vile.  When console vile starts, the "launch cursor"
	  (combined pointer/hour glass cursor) is displayed for ~15 seconds on
	  a 166 MHz Classic Pentium host.  I would presume this is because the
	  console app is now linked with OLE32.LIB .  During this 15-sec
	  interval, normal vile operations are unaffected.  This effect does
	  not occur on NT hosts available for my tests (although they are a tad
	  faster than 166 MHz :-).
	+ added new file w32oo.cpp to vile's distribution.  This module
	  comprises a collection of Win32-specific functions that require a C++
	  (OO) compilation.
	+ winopen, winopen-nocd, winsave, and winsave-nocd now each take an
	  optional directory argument, which specifies the initial directory
	  opened by the Open/Save Win32 common dialogs.  If the optional
	  directory is not specified, cwd is used by default.
	+ added a "Favorites" menu selection to winvile's RMB menu, which
	  executes the command "winopen $favorites".
	+ shorten the path in set_directory()'s "Couldn't change" error message
	  if the complete text won't fit in the message line.
	+ on a win32 host, ":cd<CR>" is mapped to ":cd ~".  This change makes
	  win32 hosts compatble with VMS and Unix.
	> Tom Dickey:
	+ modify flt_putc() in builtflt.c to avoid incrementing line pointer
	  twice if the filter emits a newline before the actual end of line.
	  That could make the program count a line twice, for instance.
	+ implement name-completion for user variables, e.g., %foo.
	+ rephrase loop in purge_line_attribs() to handle the case where the
	  ending line-pointer is at the end of the buffer.  This makes the
	  ^A-NG command (clear-attributes-til) work when the cursor is on the
	  first line (reported by Christian Lindig).
	+ modify sh-filt.l to allow here-document tags such as containing
	  punctuation characters, e.g., "eof/".

 20000926 (x)
	> Clark Morgan:
	+ prevent autocolor from overwriting the message-line when '_' or ^X-_
	  have been pressed, but the subsequent buffer selection key has not
	  yet been pressed.
	+ for several select cases, when a long path causes message line text
	  to exceed the current window width, that path is shortened on the
	  left until the message text fits (if possible).  Those select cases
	  include failure to save a file, reading in a new file, and writing
	  out (or appending to) a file.
	+ document ":w >>filename" in vile.hlp
	+ report errors if user attempts to copy from mini-buffer.  The error
	  message only shows up if "pm" is enabled, since there's currently no
	  graceful way for a vile command to unwind execution from the
	  minibuffer context.
	+ allow pasting of one line of text into mini-buffer.
	+ improve makefile.l, don't add syntax attributes to the whitespace
	  embedded within these token sequences:
	     ([<white>]<name>[<white>]|\\\n)+(:|=)
	> Tom Dickey:
	+ correct default attribute in key-filt.c's color_of() function, which
	  made newlines colored as "Error".
	+ modify behavior of imply_alt() so that if the buffer already exists
	  and is not modified, it will be automatically reread.
	+ correct behavior of imply_alt() when the specified file is being
	  appended to.  Given ":w >>foo", it was making a buffer named ">>foo".
	+ add uppercase "TRUE" and "FALSE" to fsm_bool_choices[], so
	  assignments to boolean modes works properly within a macro (reported
	  by Clark Morgan).
	+ add %c and %l format types to finderr.c, which use 0-based offsets
	  rather than 1-based offsets (prompted by comments by Christian Lindig
	  <lindig@eecs.harvard.edu> that some tools use 0-based offsets).
	+ modify logic for name-completion in kbd_reply() to force the cursor
	  to the end of the input buffer before attempting to complete.
	  Otherwise, partial completions could be written in the middle of the
	  buffer.
	+ modify handling of motion commands in editMiniBuffer() to use NOMINI
	  flag rather than guess which commands with MOTION flag should not be
	  applied (fixes a bug report by Jim Crigler, which noted that 'h'
	  following '^G' was not treated as a cursor motion).
	+ add/use NOMINI flag to indicate commands that cannot be used in
	  minibuffer editing motions.
	+ use DisplayHeight() rather than 1000 for paneMaximum of scrollbars
	  in Motif version of xvile (report/analysis by Larry Gensch).
	+ add 'prefix=$(prefix)' to makefile.in where it recurs to filters
	  directory to accommodate older 'make' programs which do not inherit
	  options (request by Michael Finken).
	+ show unterminated quotes in sh, make and perl filters as "Error".
	+ correct handling of QUOTED (double-quote) state in sh-filt.l, which
	  did not interpret escaped double-quote or identifiers since one
	  pattern was too greedy.  Show escaped double-quote as "Action".
	+ correct SSTRING expression in sh-filt.l, which was assuming backslash
	  would quote other characters in a single-quoted string.
	+ change mapping in vileinit.rc for ToggleList and ToggleTabs to omit
	  the "execute-procedure" since that is no longer needed, and makes
	  the :history less useful.

 20000914 (w)
	> Clark Morgan
	+ macros.doc:  expand description regarding comment delimiters in
	  macros.
	+ fix vilefilt.l:  syntax attributes should not applied to leading
	  white space that precedes a macro keyword
	+ fix vilefilt.l:  most cases of trailing comments are rendered in the
	  "Comment" class attribute (new functionality).  There is one corner
	  case that's not handled, as described in block comments added to
	  vilefilt.l .
	> Tom Dickey
	+ modify htmlfilt.l to parse comments line-by-line, making it work
	  properly with Solaris' lex program which does not match newlines in a
	  pattern.  Solaris lex also is easily confused by RE's that look like
	  ranges but are not, such as "[^-\n"], and can only apply '+' to a
	  single-character RE (report by Jenny Brown <jenny@cyberdesic.com>).
	+ add functions flt_begin(), etc., to filters.c to consolidate logic
	  in filters for attributing multi-line text as a single region.
	  Use this to simplify bat, make, perl, py, tbl, txt, xres filters.
	+ add a check for an empty table in fill_partial() to avoid buffer
	  overrun if caller provides incorrect parameter.
	+ correct a case in editMinibuffer() which did not completely restore
	  the buffer position when an error was found.  This led to passing
	  an empty buffer with an associated nonzero position to fill_partial(),
	  which dumped core.
	+ add &dquery function which prompts for input with a given default
	  value (request by George Eccles).
	+ indent'd exec.c
	+ modify logic in kbd_reply() a different manner, by adding a parameter
	  to get_token() which returns the actual eolchar matched, so that for
	  expressions such as "foo=x", we use '=' rather than 'x' for the
	  parameter to set_end_string() (reported by Clark Morgan).
	+ add a check for line length in editMinibuffer(), in case an
	  unexpected message such as the one in kbd_complete() from 9.1v wipes
	  out the current minibuffer.  The combination of the two caused a GPF
	  when typing ":set vis=<return>off<return>" (reported by Pedro Gomes
	  <Pedro.Gomes@lis2.siemens.pt>.
	+ modify kbd_complete() to only show the 'No match for ...' message if
	  it is run via a macro.  Interactive mismatches will just beep,
	  because a message would get in the way.
	+ modified bat-filt.l and tcl-filt.l to build with Solaris lex.  The
	  latter requires a larger tablesize (reported by Jim Crigler).

 20000905 (v)
	> Tom Dickey
	+ add check in CF_CURSES_LIBS in case $LIBS is already set to something
	  like "-lcurses -ltermcap".
	+ update config.guess, config.sub to 20000819 patch.
	+ modify tcl-filt.l based on examples by Juan Carlos Gil Montoro
	  <jcgil@gmv.es>:
	  + add namespace syntax to IDENT rule, and apply this to the IDENT1
	    rule as well.
	  + allow comments to have continuation lines.
	  + flag errors for badly-formatted numbers.
	  + treat {"} and \" specially (not as string literals).
	  + handle unterminated string, i.e., a newline ends a string even if
	    no quote is found.
	  + highlight trailing backslash as "Action".
	  + make a new class, "Braces" to control how curly braces are
	    highlighted, so this is not part of tcl-filt.l, but specified in
	    tcl.key
	+ modify logic in kbd_reply() to set last_eolchar from the given
	  eolchar, e.g., '=', rather than the current contents of execstr,
	  since that may contain an arbitrary character such as the first
	  one of an identifier.  That made commands such as
		setl autowrite=false
	  in a macro not work, since 'f' (false) was used (reported by
	  Clark Morgan).
	+ modify kbd_complete() to show a message when it fails to find a
	  match.
	+ relaxed suffix rule for vilemode to ensure that vile.rc is always
	  interpreted in that mode, even if it does not reside in a directory
	  named "vile" (reported by Clark Morgan).
	+ implement new Perl syntax filter, pl-filt.c (the older one is still
	  available for comparison, but is internally renamed to "pl" rather
	  than "perl").
	+ use tgoto() to simplify alternative to tparm() when formatting
	  escape sequence for colors in tcap.c
	+ suppress logic in tcap.c that resets colors when the terminal does
	  not support color.  Otherwise, reverse video and other non-color
	  attributes do not work (reported by Clark Morgan).

 20000828 (u)
	> Tom Dickey
	+ add error checks in sed-filt.c for unbalanced curly or square
	  brackets.
	+ make regular expression delimiters easier to read in sedmode by
	  coloring them with Action class.
	+ modify preamble expressions that match a pathname (e.g., "#!/bin/sh")
	  to allow trailing blanks on that line.
	+ correct preamble expression for sedmode, which interfered with shmode.
	+ correct syntax error in filters/filterio.c for stub functions used
	  for vilemode symbols (reported by Pedro Miguel Marrecas Gomes
	  <GomeZ@netc.pt> and Jim Crigler <criglerj@yahoo.com>).

 20000828 (t)
	> Tom Dickey
	+ add stubs for dname_to_dirnum(), vl_lookup_func() and engl2fnc() to
	  filters/filterio.c, use those to provide hooks for vilemode when
	  configured for builtin filters to highlight unknown keywords.
	+ modify dname_to_dirnum() to treat any negative return from
	  choice_to_code() as D_UNKNOWN, restoring logic that warns about
	  unknown directives (reported by Clark Morgan).
	+ add sedmode, and corresponding syntax filter.
	+ rename some functions (line_count, filename, cd, help, source) to
	  use "vl_" prefix to avoid shadow-warnings from gcc.
	+ indent'd eval.c
	+ implement function &error, which returns true if its argument was
	  an ERROR token (i.e., internally error_val).
	+ add new TBUFF-oriented functions mlreply2(), kbd_string2() to wrap
	  kbd_reply().  These are needed to support &error, but would be useful
	  in making vile able to handle input data with nulls.
	+ modify TBUFF functions to check if error_val is copied to a TBUFF.
	  In that case, set a flag which makes tb_values() return error_val.
	+ fixes to recover if a 'source' command results in runaway recursion,
	  e.g., if foo.rc contains the line "source foo.rc".  In
	  perform_dobuf(), ensure that the line pointer we are using to restore
	  the buffer/window current line is actually in them, and add a
	  reference count in dofile() to avoid removing a buffer which is in
	  use for sourcing.
	+ corrected some places in makefilt.l and mms-filt.l which were writing
	  via yyout, which caused spurious characters to be printed with
	  builtin-filters.

 20000820 (s)
	> Clark Morgan:
	+ make Ian Jamison's change to w32pipe.c the default on all hosts,
	  tested in W95 and NT.
	> Tom Dickey:
	+ minor fixes to IDENT and VARIABLE definitions in bat-filt.l
	+ modify win32 scripts to eliminate redirecting standard output as
	  part of generating portions of makefiles, since that simply does
	  not work on w95 (reported by Clark Morgan).
	+ modify configure script to avoid using 'find', since OS/2 EMX's
	  'find' utility is a different program altogether (like grep).
	+ add configure --with-ncurses option, mainly for OS/2 EMX which has
	  an unusable termcap library.
	+ updated config.guess, config.sub from lynx 2.8.4dev.7 (now on my
	  ftp area as autoconf 2.13 patch 200000819, since I resync'd the
	  OS/2 EMX patch as well).
	+ refine fence-elif expression in shmode's "case" group, which allowed
	  a right parenthesis with only spaces before it to match (reported by
	  Clark Morgan).

 20000816 (r)
	> Tom Dickey:
	+ add logic to m4-filt.c to handle argument lists that span multiple
	  lines.
	+ highlight unbalanced quote in m4-filt.c as an error.
	+ modify majormode suffix matching to use the ignorecase mode values
	  for those systems that are normally case-sensitive, making this work
	  for names such as "FOO.BAT" which happen to be uppercase.
	+ suppress autocolor when doingsweep is true, e.g., in multimotion().
	+ add variable $filter-list to show all of the builtin-filters.
	+ modify win32 scripts to avoid redirecting the output of 'echo',
	  which apparently goes to stderr on w95 (reported by Clark Morgan).
	+ minor fixes for configure script macro CF_CURSES_LIBS,
	  CF_CURSES_TERMCAP, CF_SIZECHANGE, CF_TYPE_OUTCHAR, CF_UPPER,
	  CF_X_ATHENA from lynx, xterm and tin.
	+ newer config.guess, config.sub, from lynx 2.8.4dev.7
	+ fix starting condition of STRING in tc-filt.l
	+ add pcmode, for printcap.
	+ refine xresmode to require that mixed-case names match only in an
	  app-defaults directory, to avoid matching things such as MD5sums.

 20000809 (q)
	> J. Chris Coppick (with some advice from Brendan O'Dea):
	+ cleanup of Vileserv.pm and vileget (version 1.2)
	+ Vileserv now uses the registry, so 'perl "use Vileserv"' in
	  your .vilerc automagically adds the commands startserv, stopserv,
	  and vileserv-help.
	+ Vileserv tries to be smarter about finding your perl binary.  The
	  Vile variable %vileserv-perl-path can be used for customization.
	+ Vileserv tries to be smarter about the socket path that it uses.  The
	  env.  variable VILESOCK, as well as the Vile variable
	  %vileserv-socket-path can be used.  Also, vileget supports an option
	  for overriding the socket path.  The default location is still
	  ~/.vilesock.  With a little scheming, you can now run and control
	  multiple XVile sessions on one host, or use Vileserv on multiple
	  hosts with a shared home dir.
	+ Vileget now uses the -d option to change XVile's working directory.
	  This is an interface change from version 1.1, where the -c option
	  was used for this.
	+ Vileget now uses the -c and -C options for passing arbitrary Vile
	  commands to a running XVile.  See the vileget manual page ('perldoc
	  vileget') for more info on this.  Please note the necessary Vile
	  variable %vileserv-accept-commands.
	> Tom Dickey:
	+ improve PATTERN definition in awk, lex and yacc to color unescaped
	  blanks within a bracketed range.
	+ fix logic in flt_puts(), which did not ensure that regionshape was
	  set, and also remove spurious trailing blanks from attribute string.
	+ initialize static variables in several filters to make them work
	  properly in the builtin-filters configuration.
	+ change indent.pro to line up parentheses.
	+ add example macro AddError to vile.hlp which illustrates how to add a
	  string to [Error Expressions] (request by Christian Lindig
	  <lindig@ips.cs.tu-bs.de>)
	+ modify win32 scripts which generate portions of makefile.wnt to not
	  rely on WinNT's "enhanced" shell for-loop feature, using new utility
	  program genmake.  Adjust generated builtflt.h on win32 to allow for
	  building C filters only, if no $(LEX) is specified.  Also, modify
	  makefile.wnt to avoid using && in recursion to work around
	  limitations of w95 shell (reports by Clark Morgan).
	> Ian Jamison:
	+ add workaround for broken DuplicateHandle() function on WIN2K,
	  ifdef'd with DUP_HANDLE_BROKEN_ON_WIN2K.  That caused
	  w32_inout_popen() to fail.

 20000728 (p)
	> Tom Dickey:
	+ add a mode for the Standard ML language.  There is also a minor tweak
	  to cpp.key (patch by Felix Advantage <felixadv@access.net.au>).
	+ modify builtflt.c to treat record separators as newlines, consistent
	  with filter logic.
	+ rewrote filters/makefile.wnt to generate lists and rules using
	  scripts reading genmake.mak, to facilitate building internal or
	  external filters.
	+ change 1-or-more blanks in one of the error-finder expressions to
	  0-or-more to make this work with weblint.

 20000725 (o)
	> Clark Morgan:
	+ add example macro to vile.hlp from this-file-dir by Richard Hussong
	  but renamed to cdcur like Alex Wetmore's variation as suggested by
	  Paul Fox.
	+ if an NT console's display and buffer geometry are not the same, then
	  vile.exe's cursor defaults to the minimum size.  Modify so that the
	  editor's cursor size is inherited from the parent console window.
	+ correct glob test for "~" which can be expanded as user's home
	  directory for VMS and win32.  The test allowed expansion of tilde at
	  points other than the beginning of a path component, which can happen
	  on win32.
	> Tom Dickey:
	+ modify decode_exp() to skip over null pointers in the list
	  of subexpressions in regexp struct which are set when a
	  nested group was parsed, e.g., in the $filename-expr for
	  hgrep on win32.  The regular expression code finds the proper
	  number of \( \) atoms, but the array indices do not match,
	  causing ^X^X to fail (reported by Clark Morgan).
	+ correct missing check for backslash within a character range in
	  regatom(), which caused patterns such as "[^\[\]]" to match any
	  character other than left bracket which was followed by a right
	  bracket.
	+ implement 'highlight' mode, which when disabled prevents the
	  corresponding buffers from being syntax-highlighted (request by
	  Moo Kim <kim@mailbox.elsegundoca.ncr.com>).
	+ add newsrcmode to prevent ".newsrc" file from being treated as a
	  shell script; otherwise every number in the file will be highlighted,
	  which is very slow for long lines (reported by Clark Morgan).

 20000710 (n)
	> Clark Morgan:
	+ enable tilde-expansion for win32 in glob.c
	+ modify spawncli() for win32 to ensure that a console window is
	  created for the ":sh" command when winvile is invoked from a GUI
	  rather than the command-line.
	+ add -console command-line option to win32 console vile to provide
	  workaround for make the mouse work when reading from stdin.
	+ update some win32-specific features in help file.
	+ copying to clipboard (via right mouse button) does not clear
	  selection (mimics expected win32 application behavior).
	+ undo/redo selections (via right mouse button) are context sensitive.
	> Tom Dickey:
	+ move special case for literal ^A in syntax-highlighted text into
	  flt_putc() so other filters that happen to find a control/A will echo
	  it as two characters, to work with the logic in parse_attribute().
	+ add reset-majormode command, which tells vile to recompute the
	  appropriate $majormode for the current buffer (prompted by a report
	  by Shawn Halpenny who was constructing a temporary buffer which had
	  no majormode associated -- setting the filename temporarily would
	  allow this command to set the majormode).
	+ revert binding change in editMinibuffer() so that vi-like commands
	  such as B, e, $ will work again in ^G mode (reported by Jim Crigler
	  <criglerj@acm.org>).
	+ small fix to allow sccsfilt.l to build with flex 2.4, which did not
	  define YYSTATE (on FreeBSD 2.1.5).

 20000627 (m)
	> Clark Morgan:
	+ small fix for doc/macros.doc
	> Tom Dickey:
	+ initialize $xshell-flags to empty string since xshell.sh does not
	  accept a "-c" parameter.
	+ modify manpage.rc to unset the filename associated with the buffer so
	  it does not display.  This ensures that the ruler is always visible.
	+ add command unset-variable, which resets the given variable to a
	  null or default value.  This is useful only for the $-variables,
	  since modes require a value.
	+ modify color support in xvile to allow the pre-8.3s color scheme as a
	  special case:  setting bcolor to fcolor makes xvile use the bcolorN
	  resources on syntax-highlighted text rather than the color selected
	  by bcolor (which is actually taken from the fcolorN resource in this
	  case).  This uses a new function get_color_gc() to simplify caching
	  of GC's (report by Dave Turner <turner@ameslab.gov>)
	+ remove some logic from x_fcol() from 8.3s (990914) which mirrored
	  x_bcol().  That broke the behavior of "set fcolor" (noted while
	  investigating Dave Turner's report).
	+ adjust filters/mk-0th.awk to work with SGI's nawk.
	+ fix typo in configure macro CF_CHECK_ERRNO (reported by John Coyne
	  <John.Coyne@ctbto.org>).
	+ translate soft hyphens to '-' in manfilt.c
	+ treat leading (unary) backslash in perlfilt.l as an operator, not
	  as an escape.
	+ add makefile dependency so "make vile" works when --with-builtin-filters is
	  used.

 20000617 (l)
	> Kevin Buettner:
	+ updates to config.guess and config.sub and resync with version from
	  PCRE 3.2
	> Tom Dickey:
	+ update ftp and web-site pointers to reflect demise of ClarkNet
	  (reminder by Clark Morgan).
	+ use new function search_mode_list() to make binary search of the
	  my_mode_list[] array, to make it faster, since strcmp calls when
	  searching this array were the largest component in initializing
	  majormodes.
	+ correct length computation in finderr.c for %F token, which caused
	  heap corruption on win32 (cf: 9.1d).
	+ use $majormode rather than file suffix in manpage.rc to check for
	  HTML files, since the suffix is too easily confused by double-dot
	  suffixes.

 20000609 (k)
	> Tom Dickey:
	+ add command attribute-directly, to invoke internal filter on the
	  current buffer.  External files are still used for the keywords, but
	  this can eliminate the subprocess and pipes for filters that are
	  built-in.
	+ add built-in function &filter, to tell if the given majormode has
	  a built-in filter.
	+ show majormode ordering in the subheaders of show-majormodes.
	+ rewrite put_majormode_after() and put_majormode_before(), fixing
	  a potential infinite loop.
	+ modify manpage.rc to use lynx to render html files.  This uses the
	  development version of lynx (2.8.4dev.3, with the -stdin and
	  -with_backspaces options).
	+ check timode suffixes before shmode.

 20000529 (j)
	> Tom Dickey:
	+ fixes to make shell commands work properly with curses.c driver:
	  remove unneeded term.kclose from one version of ttunclean
	+ allow whitespace after '<<' that begins here-document in perl filter.
	+ modify suffix qualifiers for shmode and vilemode to make most dot
	  files that end in "rc" in shmode, unless the filename contains the
	  string "vile".
	+ add error-checks for init_pair() calls in curses.c (bug report by
	  Brendan O'Dea).

 20000519 (i)
	> Tom Dickey:
	+ use $cmd-count in AlignToCol to align more than one line at the
	  cursor's column.
	+ modify logic of $cmd-count to increment only for the topmost level
	  of dobuf() nesting.
	+ update ifdef's for building with SMALLER defined.
	+ add key binding for select mode, use that rather than insert mode
	  binding.
	+ correct parameter of bkgdset() in curses.c for Solaris curses.

 20000517 (h)
	> Tom Dickey:
	+ add key binding functions for insert-mode and command-mode, making it
	  simpler to bind a space or tab to a given function without having it
	  confused for a function while in insert mode.  New commands:
	  bind-cmdmode-key, bind-insmode-key, describe-cmdmode-bindings,
	  describe-cmdmode-key, describe-insmode-bindings,
	  describe-insmode-key, rebind-cmdmode-key, rebind-insmode-key,
	  unbind-cmdmode-key and unbind-insmode-key.  (fixes problems
	  introduced in 9.1, reported by George Eccles and Sean Ahern)
	+ implement a curses/ncurses terminal driver.  Use --with-screen=curses
	  or --with-screen=ncurses to configure this.  No mouse is supported
	  in this configuration.  This version builds only with SVr4 curses
	  or ncurses.
	+ accept -i option as an alias for -I, which has the added benefit of
	  allowing vile to be used as a $SHELL value for script, since that
	  passes a -i option to the "shell".
	+ change logic of dobuf() to implement the repeat-count there, rather
	  than the callers.
	+ add variable $cmd-count, which tracks the number of times a macro is
	  repeated by prefixing it with a repeat-count.

 20000501 (g)
	> Brendan O'Dea:
	+ prefix the "source ~/.vilerc" in vile-pager with "~force" in case
	  a user has no such file.
	> Tom Dickey:
	+ add macros/shifts.rc, which implements left/right shifting of words
	  in the current line to align with the cursor.
	+ reset DOT.o after calling deltoeol() in lrepltext().  This fixes a
	  problem with setting $line; the reinserted newline would fall after
	  the first character of the following line.
	+ save/restore window traits, setting DOT to the end of [Trace] when
	  writing into it with tprintf().  Otherwise tracing was writing at
	  the current location, and the buffer would scroll as data was written.
	+ two fixes for vile_op(): correct parameter for no_such_function()
	  when processing a macro, and consistently use f_godotplus to handle
	  missing or unknown motion parameters in a macro.
	+ set/clear reading_msg_line in pressreturn() to avoid autocolor
	  repainting the screen just after a shell command.
	+ add color-ls.rc, example using improved manfilt.c to display color
	  ls output in a buffer.
	+ improve decoding of ANSI escape sequences in manfilt.c, including
	  parsing of foreground colors.
	+ add $xshell-flags variable to allow customising $xshell (request by
	  Ian Jamison).
	+ remove $(LIBS) from filters/makefile.in to fix linking problem on
	  Debian.  The alternative is to add $(X_LIBS), which seems unneeded
	  for ecrypt.c and manfilt.c, which use only standard C library
	  functions.

 20000425 (f)
	> Brendan O'Dea:
	+ fix unquoted '^' character from 9.1e configure script changes.
	+ mods to build with Perl 5.6.0, which now requires that all perl
	  globals need a PL_ prefix (which affects `errgv', `na' and `sv_undef'
	  in perl.xs/ptypemap).  The change is backward compatible to 5.005 and
	  *should* be to 5.004 (untested).
	> Clark Morgan:
	+ modify joinregion() to refrain from modifying an empty region, i.e.,
	  where the start/end lines are the same.
	> Tom Dickey:
	+ add reset-rgb-palette command for winvile.
	+ add set-rgb-palette command for winvile (adapted from a patch by Ian
	  Jamison <IJamison@iss-dsp.com>).
	+ install Vileserv.pm without executable permissions (reported and
	  suggested solution by Brendan O'Dea).
	+ change an "ls -1" to "find" in configure script, to work around
	  nonportability to SVr3 (reported by Brendan O'Dea).
	+ add :g! and :v! as synonyms for :v and :g, respectively.
	+ modify bat-filt.l to highlight variables that are set or used in
	  a script.  also, highlight quoted strings.
	+ fix double-quotes with continuation lines in esqlfilt.l
	+ corrected wildcard patterns for dos/win32 in vileinit.rc
	+ add '#' to URL patterns in syntax filters.
	+ implement abbreviations for syntax keywords, using '*' as the
	  default delimiter.
	+ add vimmode, for vim syntax files
	+ implement $filename-ic, to use in filters.rc to avoid matching
	  xresmode for systems that have case-independent matching for
	  filenames.
	+ make configure macros that search for header- and library-paths a
	  little more general, e.g., searching under /usr/foo/lib or $HOME/foo,
	  from tin updates (i.e., macros CF_FIND_LIBRARY, CF_HEADER_PATH,
	  CF_LIBRARY_PATH, CF_NCURSES_LIBS).
	+ update config.guess, config.sub
	+ add a 'depend' rule to makefile.in
	+ update ne*.h rules in makefile.blc

 20000318 (e)
	> Tom Dickey:
	+ add configure --with-builtin-filters option.  This is only to test
	  the build scripts; the builtin filters are stubs.
	+ add cindent to awkmode.
	+ correct awk-filt.l - it did not echo curly braces.
	+ add '^' at beginning of pattern for hgrep in finderr.c
	+ correct index for W_FILE in finderr.c for %F token, omitted in
	  changes for 9.1d (reported by Clark Morgan).

 20000314 (d)
	> Brendan O'Dea:
	+ modify perl.xs to allow perl operators to be used with a range.  Also
	  clears the VIEWOK flag for operators.
	> Clark Morgan:
	+ winvile:  turn off cursor during menu-based cut/delete/paste ops
	  (avoid stray cursor glyphs).
	+ winvile:  fix repaint bug that was introduced when "fixing" the
	  occluded notepad update bug in 9.1a.
	+ fix winvile ":sh" command, which used to pop up a separate window,
	  but does not as of 9.1 In 9.1, ":sh" on a win32 host is executed as
	  "$shell {-c|/c} $shell" .  As it turns out, cmd.exe's intrepretation
	  of the /c switch is to run the specified command and exit
	  immediately.  The fix is to simply launch $shell via CreateProcess().
	> Tom Dickey:
	+ modify SetVarValue() to make it handle mode values, which were being
	  ignored.  This makes
		~local report
	  work properly (reported by Clark Morgan).
	+ add variable $filename-expr, to specify the actual pattern used for
	  %F in [Error Expressions].  On DOS and Win32, this is initialized to
	  a more complex pattern, to accommodate drive letters.
	+ allow invisible buffers such as [Trace] to be the error-buffer.
	+ add macro command "~trace", which sets or reports the value of the
	  $debug variable.
	+ modify treatment of $debug to trace into internal buffer [Trace].
	+ fix ifdef's in btree.c to disable assert's when not debugging.
	+ improve sqlmode preamble, making it more distinct from batmode.
	+ improve cshmode complex fence patterns for foreach and switch.
	+ revert the change to ffgetline().  For some reason, fread() runs more
	  slowly when vile is rendering a manpage than fgetc().  Change all
	  fgetc() and fputc() calls to getc() and putc(), since as macros they
	  generally will run faster than the functions, as noted by Clark
	  Morgan.
	+ correction to 9.1c's change for shpreamble: it omitted a '?' (0/1)
	  around the options pattern.

 20000228 (c)
	> Clark Morgan:
	+ added cut-to-clipboard (windows Cut) and delete-text-selection
	  (windows Delete) to [win]vile.  The former is bound to Shift+Delete,
	  the latter to Alt+Delete.  Both commands require a current text
	  selection.
	+ bug fix:  winvile geometry only shown when window is resized :-).
	  Prior to bug fix, geometry also shown during a window move.
	+ added a winvile `about' box (available from the System Menu).
	+ winvile's right mouse menu includes these new commands:
	    cmd name  bound to                        txt slctn  txt slctn must
							 rqd?    be in curbuf?
	    --------  --------                        ---------  -------------
	    undo      undo-changes-backward
	    redo      redo-changes-forward
	    cut       cut-to-clipboard                    X           X
	    copy      copy-unnamed-reg-to-clipboard       X
	    paste     paste-from-clipboard
	    delete    delete-text-selection               X           X
	  All but undo and redo are context sensitive.
	+ documented that ~local doesn't save/restore mode vars (this is an
	  assumption on my part).
	+ beefed up example vile.rc with more macros and removed outdated
	  color syntax macro.
	+ optimize ffgetline(), buffering data read from fread() rather than
	  via fgetc().
	+ add to vile.hlp more information about installing vile, particularly
	  the effect of $VILE_STARTUP_PATH and $VILE_LIBDIR_PATH
	+ fix a redundant screen repaint for this scenario with the termcap
	  configuration:
		$ vile /etc/termcap
		:stop
		$ fg %1
	> Tom Dickey:
	+ converted most occurrences of yyout in the filters to calls into
	  filterio.c that do not specify a FILE*.
	+ split-out main program and I/O from filters.c as filterio.c
	+ modify filters.c to avoid concatenating $HOMEDRIVE when $HOME already
	  specifies the device in home_dir() (reported by Richard Hussong
	  <rhussong@ma.ultranet.com>).
	+ further narrow the scope of insert-exec by excluding all whitespace,
	  to avoid interpreting tab and formfeed.
	+ add mode insert-exec to control logic in ins_any_time() which
	  interprets control characters which are bound to GOAL or MOTION
	  commands rather than inserting them without quoting (see 9.0a and
	  9.0b changes).  This restores the default behavior, since some users
	  had control characters bound to a function which was then executed
	  (reported by George Eccles and Christian Lindig).
	+ modify which-source and which-exec to always show the places where
	  vile searches, even if not found (suggested by Clark Morgan).
	+ modify shmode prefix pattern to allow "-" alone as an option, rather
	  than requiring it to be followed by a letter.  This is done in
	  Linux's MAKEDEV script.  Also, corrected parenthesis in the pattern
	  to make a ":" line recognized as a shell comment.
	+ correct logic for &left and &middle functions, which returned one too
	  many characters after 8.3d changes to use TBUFF's (reported by
	  (William Yuan <yuan@bucket.its.unimelb.edu.au>)
	+ correct modetbl entry for &sless function, which was returning a
	  string rather than a boolean (this was broken between 8.2 and 8.3).
	+ add a check for the base parameter of mk_to_vcol(), in case it is
	  negative (reported by Clark Morgan).

 20000210 (b)
	> Kevin Buettner:
	+ x11.c (x_preparse_args): Set window manager resize hints.
	  (x_configure_window): Removed code for setting window manager
	  resize hints.  Also added code to avoid BadMatch errors
	  when window is too small.
	> Paul Fox:
	+ implement a new mode, "unique-buffers", which does dev/inode checking
	  to be sure files aren't edited more than once.  this differs from
	  "resolve-links" in that a) the "true" filename may never be
	  discovered -- vile will use the first name its given for a given
	  file, b) it detects hard links, and c) it's a lot faster.
	+ shorten the confirmation questions/messages that result from modtime
	  checking.  with very long buffernames the current messages extend
	  past the 80 column boundary, making the tail end of the question
	  invisible in some cases.
	> Clark Morgan:
	+ add a pin-tagstack mode, which prevents the editor from switching
	  windows during a tag/push operation (i.e., all tag ops are pinned to
	  the current window).  By default, this mode is not enabled, which
	  ensures backward compatibility with previous editor behavior.
	+ modify ntwinio.c to continuously show the geometry during a resize.
	+ ifdef'd use of auto_set_title to compile x11.c on VMS.
	+ update README.PC's description of vile search-paths.
	> Tom Dickey:
	+ annotate the verbose form of which-source and which-exec, showing
	  the corresponding variable for each path which is tested, e.g.,
	  "$PATH" when checking items in $PATH.
	+ add $exec-path variable
	+ modify filter modules so they export only one variable (filter_def)
	  to simplify building a library for built-in filters.
	+ change ntscroll() to use RedrawWindow() to repaint the update-region
	  after ScrollWindowEx() - works no worse on my home machine, will
	  re-test at work: the problem to fix is incorrectly-shifted text when
	  scrolling via repeat-keying j/k.
	+ change position (^G) command to show "File is empty" if the current
	  buffer is empty, rather than "Line 1 of 0 ..." (reported by Clark
	  Morgan).
	+ correct char_no() function to use record-separator length, so
	  $curchar is evaluated properly for dos files (reported by Clark
	  Morgan, for ^G command).

 20000130 (a)
	> Kevin Buettner:
	+ gdb.pm:  New file.  Runs gdb in a vile window and tracks changes in
	  editor.  (Must be used with shell.pm.)
	+ shell.pm (terminal_emulation): Fixed bug which was preventing
	  ESC [ Pn B from moving down lines.
	  (shell, clean_resume_sub): Improve workaround for perl crasher.
	  (dead): Fetch parameters.
	+ estruct.h (OPT_LINE_ATTRS): Define.
	  (LINE): Added new member l_attrs.
	  (LINE_ATTR_ENTRY): New structure typedef.
	+ edef.h (line_attr_tbl): Hash table for line-based attributes.
	+ proto.h (lattr_shift): New function.
	+ select.c (lattr_shift, free_line_attribs, add_line_attrib,
	  purge_line_attribs, init_line_attr_tbl, find_line_attr_idx):  New
	  functions which implement the guts of the new line-based attribution
	  mechanism.
	  (free_attribs): Call free_line_attribs().
	  (attributeregion):  Call add_line_attrib() and purge_line_attribs()
	  as appropriate.  Also reindented this function.  [I thought I was
	  going to have to make more extensive modifications than I did.]
	+ file.c (quickreadf): Initialize l_attrs.
	+ line.c (lalloc): Likewise.
	  (linsert, ldelete): Call lattr_shift() to adjust l_attrs.
	  (ltextfree, lnewline, ldelnewline): Free (and null) l_attrs.
	+ undo.c (lineundo, repointstuff): Likewise.
	+ api.c (lreplace): Likewise.
	+ display.c (updattrs):  Call updlineattrs().  Also split out code into
	  which sets the attributes in vscreen into...
	  (mergeattr): New function.
	  (updlineattrs): New function which decodes attributes associated
	  with the l_attr member of the LINE structure.
	+ makefile.in (gdb.pm): New perl file to install.
	+ select.c (attributeregion, add_line_attrib): Fix bugs preventing
	  hypertext commands from working.
	+ display.c (updlineattrs): Stop processing attributes if end of
	  buffer is reached.
	> Clark Morgan:
	+ fix the winvile repaint bug that I reported last week.  Problem was
	  caused by code in ntscroll() that was clearing 95% of the ClientRect
	  after the scroll operation.  I would never have figured this out
	  except by looking at traces generated by the extremely useful TRACE
	  facility (I find it impossible to debug paint problems using a local
	  debugger).
	+ additionally, unhandled/ignored scrollbar messages don't trigger an
	  update(), thus precluding two updates for each scrollbar operation
	  (e.g., one update for SB_LINEUP, followed immediately by another
	  update for SB_ENDSCROLL).
	+ implementation of term.typahead for ntwinio.c
	+ remove apparently unused kbhit and khit functionality. in ntwinio.c
	  (amended by Russ Schnapp).
	+ clarify build instructions for win32+perl configuration in README.PC
	  (from report by Russ Schnapp <rschnapp@ACM.org>).
	+ documented some of the new 9.1 features (which included adding a new
	  Debugging section)
	+ fixed some typos in vile.hlp
	+ expanded/corrected some old features in vile.hlp
	+ integrated "Command files" topic a bit more with "Invocation" topic
	  and streamlined the latter in vile.hlp
	+ used more precise wording in Credits (which triggered a large change).
	+ update buglist to reflect vms_ffexists() changes.
	+ fix bogus comment in w32reg.c
	+ win32 console vile now has "true" autoscroll support (this feature
	  based on Ed Henderson's work).
	+ win32 console vile's mouse-based text selection (via LMB) modified to
	  fairly closely mirror winvile's features, except that a single click
	  does not clear the current text selection (a la notepad).  The most
	  significant change is that text selection is not initiated until the
	  mouse has moved at least one character cell in either the X or Y
	  coordinate.  This change precludes the editor from discarding the
	  contents of the unnamed register due to a simple mouse click, as
	  opposed to an actual mouse move.
	+ fix:  If the user releases the left mouse button (LMB) outside
	  winvile's main window following an autoscroll operation, no text is
	  copied to the unnamed register.
	  This patch doesn't yank to the unnamed register if the user resizes a
	  window via a mode line drag.  In addition, this patch fixes another
	  problem:  if the mouse cursor is moved to the message line and then
	  LMB is held down, autoscroll starts in the current window _and_
	  cursor glyphs are dropped in same during the scrolling.
	+ document $error-buffer in macros.doc
	+ update README for 9.1 release.
	> Tom Dickey
	+ modify which-source, which-exec to be consistent with other commands
	  that use the existence of a repeat count as a flag, not whether it
	  it bigger than one (reported by Clark Morgan).
	+ modify filters, eliminating write_string() function which
	  accommodated pre-9.1 restriction of vile for completing each
	  attribute on one line.  Now, filters attribute multi-line regions
	  when appropriate, e.g., multi-line comments in C.
	+ correct a typo in txtmode's suffix qualifier for ChangeLog.

Changes for vile 9.1 (released Sat Jan 15 2000)

 20000115 (t)
	> Clark Morgan:
	+ fix a file-descriptor leak in win32 pipes.
	> Tom Dickey:
	+ small compiler warnings (using 'antic' and SGI's lint)

 20000114 (s)
	> Kevin Buettner:
	+ perl.xs (do_perl_cmd):  Partially revert changes from 9.0p regarding
	  the clexec/isnamedcmd/no_msgs flags.  We (once again) set isnamedcmd
	  to TRUE in order to cause mlreply_dir and mlreply_file to prompt the
	  user when a perl command is invoked via a key binding.
	  (mlreply_no_opts): Remove.
	  (mlreply): Make mlreply_no_opts and mlreply_shell aliases with
	  slightly different functionality.
	+ perl/capture.pm:
	  + New documentation.
	  + New command, async-capture-command, for displaying
	    the documentation.
	  + Use mlreply_shell in order to provide the appropriate shell
	    completions (requested by Paul Fox)
	  + Remember last command run (requested by Paul Fox)
	  + Added work-around to prevent [Buffer not found] message from
	    displaying when Vile::Buffer::edit is asked to find an internal
	    buffer.  (Does getfile2bp really need to call mlforce() to print
	    this message out?)
	+ perl/shell.pm:
	  + New documentation.
	  + New command, shell-help, for displaying the documentation.
	  + Handle partial (incomplete) terminal control sequences.
	    [Fixes bugs reported by Paul Fox.]
	  + gdb annotation support.  (Use --fullname with gdb to make
	    use of this.)
	  + Facilities for supporting upcoming gdb.pm.
	  + Revise mechanism for escaping from shell.  (Expect it to
	    be revised even more though.)
	> Clark Morgan:
	+ modify mailmode to support mutt's temporary file names
	+ modify nttypahead() to exit immediately during an autocolor operation.
	+ add section on 'Color Basics' to vile.hlp, integrated/revised with
	  description of color syntax highlighting (with feedback from Brendan
	  O'Dea and Paul Fox).
	> Tom Dickey:
	+ modify suffix qualifiers of cshmode and mailmode to avoid matching
	  directory names.
	+ corrected status checks on return from prompt_scheme_name(), which
	  may be ABORT (reported by Paul Fox).

 20000112 (r)
	> Kevin Buettner:
	+ correct two variables in perl.xs which were incorrectly typed as
	  'int', and passed by reference which is a problem on Tru64 Unix 5.0
	  (Alpha) where the prototype specified 'unsigned long' (reported by
	  Larry Gensch <larry.gensch@compaq.com>)
	> Clark Morgan:
	+ update credits in vile.hlp (with additions from Paul Fox).
	+ updated w32modes.doc
	+ remove very stale documentation/comment from c-filt.c .
	+ add -q switch to filters.c, which forces the filter to exit as soon
	  as it reads its first line of input.  Useful in conjunction with -v
	  and -vv switches.  Necessary for Unix vile (but not win32 vile) if
	  you want to do this:
	      ^X-!~/.vile/vile-c-filt -vvq
	  without hanging the editor's keyboard and forcing the user to type ^C
	  to kill the child process.
	+ fix a 250 millisecond dead spot built into the winvile autoscrolling
	  computations, and also throttle back the initial rate of scrolling so
	  that the user has a chance to read the text as it moves up/down the
	  screen.
	+ reword/correct the description of searching for .keywords files in
	  doc/filters.doc
	> Tom Dickey:
	+ modify ins_anytime(), allowing undoable commands to be executed
	  within an insertion (Clark Morgan stated that the winvile
	  paste-from-clipboard used to work in insertion mode).
	+ correct logic of gotoeosent(), which would skip past the end of the
	  current sentence (which ended at the end of a line), over following
	  blank lines, to the end of the next text line.  Now it skips into the
	  beginning of the first line following the sentence.  A following call
	  will skip the blank lines to the beginning of the next text line
	  (reported by Clark Morgan).
	+ add README*, CHANGES*, ChangeLog* and COPYING to txtmode suffix
	  qualifier.
	+ modify makefilt.l to flag as an error lines that start a quote but
	  do not end it.  Some make programs allow this.
	+ modify suffix qualifiers for imake, mail, make, vile majormodes to ensure
	  they do not match directory names such as /mail/.
	+ modify directive_arg_eval() to expand "~/" expressions for non-UNIX
	  systems, making "so ~/vile.rc" work within a source'd file on WinNT
	  (reported by Clark Morgan).
	+ modify install rule for Vileserv.pm to ensure we update the path
	  of the perl program embedded in that script.
	+ modify vileperl.rc so the terminfo/termcap version does not start
	  the edit-server.
	+ add a null-pointer check for wp in AutoScroll().
	+ modify previndent() to refrain from copying previous indent over a
	  line beginning with '#' if cindent is disabled (reported by Clark
	  Morgan).
	+ change show-colors command to reflect limited number of colors if
	  $ncolors is set to 2, 8 or 16.
	+ modify set_colors() to allow initializing to white/black if termcap
	  or terminfo has no color specified.  This makes the list shown for
	  visual-matches limited to the available colors (reported by Clark
	  Morgan).

 20000109 (q)
	> Ed Henderson <evhendrs@micron.net>:
	+ implement autoscrolling feature for winvile, which makes the buffer
	  scroll in the direction where the mouse leaves the window,
	  automatically extending selection highlighting.
	+ make the scroll speed increase over time, rather than distance
	  above/below the window (suggested by Clark Morgan).
	> Clark Morgan:
	+ fix build with dbg=1 for winvile (reported by Ed Henderson).
	+ update doc/modes.doc, using ~with to simplify perlmode example, and
	  adding cindent to cmode description.
	> Brendan O'Dea:
	+ back out change that attempted to make the .pl files use "#!/bin/echo"
	  to work around a warning from the Debian package checker - but it now
	  adds a different warning.
	> Tom Dickey:
	+ modify configure --with-xpm option to allow builder to specify path
	  of Xpm library in the configure --with-xpm option (adapted from patch
	  by Albert Chin-A-Young <china@thewrittenword.com>).
	+ modify sh-filt.c to mark ':' lines as Action (should be ':'
	  statements, but we do not parse statements yet).
	+ modify key-filt.c to show color codes in Action color rather than
	  Literal, to make it simpler to distinguish special constants such
	  as m4's LeftQuote.
	+ document show-colors and show-color-schemes in vile.hlp
	+ modify the [Color Palette] buffer created by show-colors to make it
	  clearer that the internal codes used in the syntax filters are a
	  single hexadecimal digit (suggested by Clark Morgan).
	+ comment-out the perlmode "while" group, since perl's ambiguities make
	  it not very useful.  Retained the default (if) group, since there are
	  usually more if/elsif/else statements than the others (feedback from
	  Kevin Buettner).
	+ add table entries to tcap.c for terminfo italic mode (sitm/ritm),
	  with terminfo's termcap equivalences (ZH/ZR).  If not found, we
	  continue to fallback to underlining.

 20000104 (p)
	> Kevin Buettner:
	+ window.c (push_fake_win, pop_fake_win): Set curbp.
	+ api.c, select.c:  Change callers of push_fake_win and pop_fake_win to
	  not set curbp.  Actually, it wouldn't hurt, but you'd have to be
	  careful to make sure the setting and restoring is done in the proper
	  order.  [Fixes bug reported by Clark Morgan in which only one dirty
	  window would get colored at a time.]
	+ perl.xs: Minor doc fixes.
	> Clark Morgan:
	+ implement autocolor for win32 console and GUI.
	+ fix some stale doc in doc/macros.doc
	+ fix compiler warnings in ntwinio.c
	> Brendan O'Dea:
	+ remove the clexec/isnamedcmd/no_msgs tweaking in perl.xs for perl
	  commands.  These flags were changed to allow mlreply* to work
	  interactively when perl subs such as hgrep were called from a wrapper
	  macro, although this makes using a registered perl extension
	  non-interactively impossible.
	> Tom Dickey:
	+ minor correction to perl filter, special cases of backslashing to
	  handle perl5's MM_Win32.pm, which incidentally contains a syntax
	  error right after "UNINSTALL =".
	+ modify DrawMenuBar() to use HWND parameter rather than HMENU, as
	  documented (reported by Rick Sladkey).
	+ correct a couple of missing characters after backslashes in perl and
	  sql modes (reported by Kevin Buettner).
	+ add pattern to finderr.c for SGI 7.3 SGI MIPSpro 7.3 compilers (from
	  Anton Koning <anton@sara.nl>).
	+ minor keyword additions for C and Java.

 20000104 (o)
	> Kevin Buettner:
	+ modify updattrs() and offs2col() to fix an extra highlighted
	  character at the end of the line.
	+ add a check to update() to ensure the current window is visible,
	  fixes a case where autocoloring would pick up a buffer with negativa
	  row value (reported by Clark Morgan).
	> Brendan O'Dea:
	+ uncomment line in directory.pm which keeps vile's $cwd variable
	  updated, so hypertext links will work better.
	+ remove doc/hilite.doc, since the corresponding script is gone.
	> Clark Morgan:
	+ miscellaneous updates to vile.hlp
	> Tom Dickey:
	+ fix a null-pointer reference in make_current() (reported by Clark
	  Morgan).
	+ modify autocolor() to refrain from coloring buffers that are not
	  associated with a majormode, e.g., [Buffer List] (reported by
	  Clark Morgan).
	+ minor optimization of offs2col(), moved expressions out of loop.
	+ set/clear 'reading_msg_line' in mlyesno() and mlquickask() to make
	  them behave more like mlreply().  This prevents autocolor from wiping
	  out the highlighting set by substitutions such as
		:%s/pat/replacement/gc
	  (reported by Kevin Buettner).

 20000102 (n)
	> Kevin Buettner:
	+ perl/shell.pm:  Better terminal emulation; several bugs fixed.
	+ perl.xs (do_perl_cmd):  Make sure that curwp is visible on the way
	  out.
	> Brendan O'Dea:
	+ improve Manual.pm, getting highlighting as perldoc does, using nroff
	  and vile-manfilt.
	+ corrections to 9.0m changes to make directory.pm and dirlist.pm work
	  on win32 (comparison for $os was not against proper types, besides
	  Perl has $^O to identify the operating system)
	> Tom Dickey:
	+ modify xvile so that if the -title option is given, xvile will not
	  automatically set the window's title.  Setting $title explicitly will
	  still work (reported by Eric Krohn).
	+ correct usage-message for xvile's options, i.e., -title is used
	  rather than -wm and -T option is used to specify a tag.

 (kev) 991231 (m)
	+ doc/macros.doc, macros/vileperl.rc, perl.xs, vile.hlp:  Fix hgrep
	  references; hgrep.pl is now hgrep.pm.  Also, fixed usage examples.
	+ makefile.in:  Added perl modules Glob2re.pm, Vile/Manual.pm,
	  Visit.pm, dirlist.pm.  Removed glob2re.pl and visit.pl.
	+ perl/Glob2re.pm, perl/Visit.pm:  Renamed and revised from the .pl
	  versions.
	+ perl/glob2re.pl, perl/visit.pl: Removed these files.
	+ perl/Vile/Manual.pm: New file for displaying embedded POD
	  documentation.
	+ perl/dirlist.pm:  New file; creates a flat hierarchical directory
	  listing.
	+ perl/hgrep.pm:  Moved introductory comments to end of file and
	  rewrote in POD format.  Added binding hgrep-help which will display
	  the POD documentation.  Fixed problem with backslashes in the buffer
	  name given to the error-buffer command.
	+ perl.xs:
	  + (newVBrv):  Revert change in "l" which was supposed to prevent
	    circular structure from being created.
	  + (perl_free_handle):  Instead, break circular structure here so
	    handle will get freed properly.  [Analysis by Brendan O'Dea.]
	> Brendan O'Dea:
	+ Vileserv now also works for vile.
	+ registration commands are a bit more efficient when the module is
	  already loaded.
	+ hgrep now sets error-buffer internally.
	+ add perl "use capture".
	> Tom Dickey:
	+ modify Vile::get() method to accept functions, used to replace use
	  of `pwd` in perl scripts to make them portable to win32 [Brendan
	  O'Dea points out that there is Cwd.pm for this sort of thing].
	+ modify directory.pm and dirlist.pm to make them work on win32, i.e.,
	  by not executing portions that will not work (such as mime types) and
	  using vile's builtin functions to workaround deficiencies in perl.
	+ add check in vileperl.rc to avoid registering scripts that will not
	  work on win32.

 (tom) 991229 (l)
	+ save/restore selection highlighting in attribute-from-filter, so that
	  autocolor does not clear the current selection.
	+ add OS/2 EMX to list of platforms that must open text files in binary
	  mode, to see trailing carriage-returns on a line in vileinit.rc
	+ modify makefile.wnt to copy the .rc files to $VILE_STARTUP_PATH
	  during build, as the Perl files already were.
	+ update makefile.wnt to install renamed/new Perl scripts
	+ modify tc-filt.l to flag as an error an unescaped newline within
	  a description.
	+ modify c-filt.c to flag as an error a multi-line literal which is
	  missing a backslashed newline.  This is allowed by gcc, but the
	  C standard is explicit.
	+ modify c-filt.c to not treat a line beginning with a '#' if the
	  previous line ended with a backslash.  This is needed to not flag as
	  an error tokens in a macro which are quoted with '#'.
	+ update vileperl.rc to work with Brendan's renaming/simplification.
	> Paul Fox:
	+ add cc and reply-to to the list of recognized mail headers, and makes
	  them all caseless.
	+ also added '+' as a valid character in email names, since more and
	  more people are using the user+foo style convention mail sorting.
	> Kevin Buettner:
	+ buffer.c (killbuffer):  When attempting to free more than one buffer
	  by use of a glob expression, don't use recently freed memory after a
	  buffer kill to obtain the next buffer to check.
	+ perl/hgrep.pl:  Change "rgrep" to "hgrep".  Also, don't allow buffer
	  to be autocolor'd.
	+ perl.xs (PDEBUG):  Added/revised code for debugging reference counts.
	  + (newVBrv):  Pass NULL for the obj (second) parameter to sv_magic().
	    This prevents a circular structure from being created which was
	    quite difficult for Perl to free properly.  (newVBrv):  Removed
	    extraneous calls to SvREFCNT_inc().  [Analysis by Brendan O'Dea.]
	  + (do_perl_cmd, svcurbuf_set):  Don't use sv_2mortal() on the new SV
	    passed to newVBrv().  Instead, explicitly call SvREFCNT_dec() on it
	    after svcurbuf assignment.  [Analysis by Brendan O'Dea.]
	  + (do_perl_cmd):  Instead of doing an explicit SvREFCNT_dec() on
	    svcurbuf, assign undef to this variable.  This will still decrement
	    the reference count.  I think this is the reason we needed the
	    extra SvREFCNT_inc() statements.  We would decrement the reference
	    count here without also removing the reference.  As a result, when
	    svcurbuf was assigned to again, the reference count was decremented
	    again on the thing being replaced.
	+ makefile.in: Look for perl .pm files in the perl subdirectory.
	+ hgrep.pl: Set up the error finder.
	> Brendan O'Dea:
	+ Deletes hilight.pl, manfilt.pl, syntax.pl and tailf.pl.
	+ rename most .pl files to .pm (makefile.in).
	+ add an Exporter-like mechanism to Perl5 interface, although instead
	  of exposing a module's functions to the caller, it exposes them to
	  vile as registered commands.  By renaming the extensions as `.pm',
	  and making some minor changes to use Vile::Exporter, an extension
	  becomes visible by simply adding:
		  use extension;
	  to vileinit.pl.  There is also provision for only including some
	  commands provided by the extension, and for overriding the keybinding
	  defined by the developer (documented in the attached module).
	  Of course you can still say:
		   require extension;
	  and do the registering yourself if you so choose.

 (tom) 991226 (k)
	+ disable autocolor in manpage.rc macros, which have txtmode set.
	+ suppress autocolor when 'working...' message is active.
	+ modify filters.c to always initialize predefined classes whenever
	  a symbol table is created.  It was done before only for the first
	  symbol table, which meant that some filters using multiple symbol
	  tables were not able to use class names for keyword attributes.
	+ change cpp.key's inclusion of c.key to ".include" to avoid forcing
	  cweb filter, which includes cpp.key, to keep track of C and C++
	  tables.
	+ split-out cweb.key, install vile-cweb-filt
	+ add syntax filter for embedded SQL (esqlfilt.l)
	+ add syntax filter for REXX (rexxfilt.l)
	+ minor fix to c-filt.l in write_number(): recognize "..." string.
	+ correct some missing .key files in the install rule for makefile.wnt
	+ correct some forward references from 9.0j (ntconio.c, ntwinio.c).

 (tom) 991224 (j)
	+ add cygwin to list of platforms that must open text files in binary
	  mode, to see trailing carriage-returns on a line in vileinit.rc
	+ restore Kevin's change to main.c, which calls term.close() within
	  tidy_exit() after perl_exit(), to ensure that ".vilesock" is removed.
	  At the same time, call ExitProgram() directly from newprocessgroup()
	  so that xvile does not exit prematurely when invoked w/o forking
	  (analysis by Kevin Buettner).
	+ more fixes for special case numbers in c-filt.c, e.g., ".1", "..1"
	  (err), "0x.p1" (err).
	+ implement special attribute code 'N' to allow users to disable syntax
	  highlighting for a given class.
	+ indent'd random.c
	+ indent'd ntconio.c and ntwinio.c, reordering some chunks to eliminate
	  forward-references.
	+ correct an off-by-one in repaint_window() from 9.0g changes that left
	  debris after an exposure event (ntwinio.c).
	+ add rules to makefile.wnt for compiling all filters, not merely those
	  which are normally installed.
	+ correct a minor formatting error in describe-bindings for command
	  names longer than 31 characters using new function quote_and_pad().
	+ change TRACE macro usage to put a ';' on the end, since it works
	  better that way with 'indent'.
	+ fix some places where K&R/unproto combination on SunOS could not
	  compile, e.g., aggregate initialization in bind.c, termio.c.
	> Kevin Buettner:
	+ buffer.c (swbuffer_lfl):  Set MK to nullmark.  Since we're switching
	  buffers here, we want to make sure that MK doesn't refer to a line in
	  a buffer different than curbp.  This fixes the "BUG:  hit buf end in
	  getregion" message that would frequently pop up when using the perl
	  facilities.
	+ perl.xs (set_curwp0):  New function.  Use this instead of set_curwp()
	  in many of the Vile::Window methods to prevent the buffer tracking
	  list from getting updated.  [Reported by Paul Fox.]
	+ random.c (autocolor):  Save/restore dotcmdactive.  This fixes the bug
	  with "." (repeat-last-cmd) in which an autocolor() call would shut
	  off the dot recording.  As a result, "." would replay some earlier
	  command than the one you thought you were repeating.

 (kev) 991222 (i)
	+ makefile.in (capture.pl, winops.pl): New files/targets.
	+ perl.xs (perl_exit): Clear perl_interp variable so that
	  we get out early if we're called twice.  This won't
	  presently happen, but we want to be prepared if it does.
	  (stringify_coderef):  Fixed situation in which the coderef
	  was getting pushed on @Vile::CRs twice -- and also
	  incrementing the reference count twice which was preventing
	  the code ref from being freed up.
	  (perl_free_deferred): New code to work around perl bug
	  in which parts of the coderef are getting freed too
	  early causing memory corruption.
	  (perl_free_callback):  Ditto.  Also added a comment
	  regarding a (now removed) call to SvREFCNT_dec() and why it
	  shouldn't be there.  Also, don't increment the reference
	  count on a newly created integer (newSViv).  It's already
	  incremented when allocated.
	+ proto.h (perl_free_deferred): Declared.
	  (perl_free_callback): Change return type.  This is so
	  that the GROW macro may be used to increase the size
	  of the vector of Sv's to deallocate in perl_free_deferred().
	+ api.c (api_command_cleanup): Call perl_free_deferred() in order
	  to work around perl bug.  I didn't ifdef it because we may
	  someday find some other deferred allocations which need to
	  be performed.
	+ main.c (quit): Don't shut down X11's display here.
	  (tidy_exit): Shut it down here instead.
	  Fixes bug reported by Sean Ahern in which .vilesock was
	  not getting removed properly.  Thanks also to Brendan
	  O'Dea for additional insight into the problem.
	+ npopen.c (pipe_pid2): New static variable.
	  (npclose): Wait on both pids associated with a filtering
	  operation.  This cleans up the zombies (and there were a lot
	  of them) associated with automatic syntax coloring.
	  (softfork): Set pipe_pid2 for callers who are too lazy
	  to remember the pid.  [Note: I consider this to be an
	  ugly hack.  Please feel free to improve upon it.]
	+ modetbl (loading): New mode.
	+ display.c (modeline_modes): Added code for "loading" mode.
	+ capture.pl: Some improvements:
	    + Error finder now hooked up
	    + [loading] message on modeline when loading a file
	    + New name for the binding: async-capture-command instead
	      of perl-capture-command
	    + New keybinding ^A-!.  Think of the ^A as "asynchronous".
	    + Prettier header
	    + Dot reset to top of new buffer contents if appropriate
	      (If you're browsing the buffer, it won't interfere with
	      your browsing.)
	    + Lots of new comments in the code
	+ watch.c (dowatchcallback):  Do not run watch callbacks when
	  user is typing on the message line.  (This cures a nasty
	  abort that I encountered while using async-capture-command.)
	> Tom Dickey:
	+ revert Kev's change to main.c - this made xvile not run when it
	  forks on startup.
	+ compiler warnings in x11.c (reported by Michael Finken
	  <finkenm@hotmail.com>)
	+ improve attribute_from_filter() by draining a pipe that has data;
	  if the filter program incorrectly sends more data than vile expects,
	  vile would not be able to close the pipe.
	+ correct check in c-filt.c from 9.0g for nested comments; it flagged
	  adjacent comments.
	+ modify m4-filt.c to test multi-line attributes by writing Literal's
	  as a single token rather than each piece split by lines.
	+ improve attribute-from-filter and attribute-cntl_a-sequences-til to
	  allow lengths beyond the end of the current line (Kevin & I were
	  aware of this - report by Christian Lindig <lindig@ips.cs.tu-bs.de>).
	+ modify c-filt.c to highlight C9X hexadecimal floating constants
	+ add new C9X keywords to c.key: inline, restrict, _Bool, _Complex,
	  _Imaginary, _Pragma, __STDC_VERSION__, __VA_ARGS__, __func__.
	+ correction to c-filt.c's parsing of floating-point constants (missed
	  a toupper).

 (kev) 991220 (h)
	+ perl/capture.pl: New perl script which implements a perl version
	  of capture-command.  This version incrementally updates the
	  window however.
	+ perl/winops.pl: New perl script which implements various window
	  related operations.  Good for testing implementation of the
	  Vile::Window API.
	+ perl.xs: Documentation fixes.
	  (package Vile::Window):  Documentation and implementation of
	  Vile::Window API.
	  (perl_free_callback): Disable deallocation of the coderef since
	  this causes problems when called from within the subroutine
	  being deallocated.  Added a FIXME comment noting the problem.
	  (set_selection, selection_buffer): Fixed croak messages.
	  (dotq): New Vile::Buffer method.
	+ api.c (api_dotinsert): Set changed flag.  This fixes a bug
	  where perl would add characters to the buffer, but they
	  wouldn't appear until the user did something else to force
	  a hard update.
	  (api_command_cleanup): Make sure results of unmark operation
	  get propagated back to the editor.
	+ api.h (VileWin): Declare.
	+ buffer.c (swbuffer_lfl): Don't call undispbuff() unless all
	  windows associated with the buffer are gone.
	+ estruct.h (WINDOW): Added w_id as a new field to this structure.
	+ window.c, proto.h (id2win, win2id, index2win, win2index):
	  New functions.
	+ window.c (w_id_next): New static global.
	  (FAKE_WINDOW_ID): New define.
	  (splitw, winit, push_fake_win): Set/initialize w_id field in
	  WINDOW structure.
	+ ptypemap (T_VileWin): New type in typemap.
	+ x11.c (x_autocolor_timeout): Send a null message to ourselves
	  to prevent stalling in the event loop.  This fixes the bug
	  in which a keypress while the filter was running would
	  cause the keypress to be noticed at the next X event.
	  (paste_from_primary): New function.
	+ cmdtbl (paste-from-primary): New command.  (Requested by Sean
	  Ahern.)

 (kev) 991219 (g)
	+ cmdtbl, buffer.c:  Added binding / support for ^X-_ aka
	  "historical-buffer-to-current-window".  [Requested by Mike J.  Bell.]
	+ random.c (autocolor):  Save/restore pre_op_dot.  Fixes bug reported
	  by Paul Fox:  "if autocoloring kicks in between an operation and the
	  motion that completes it (e.g.  'd' and 'w'), the operation acts on
	  the wrong selected region -- i think it acts on 'dot to top of
	  buffer'."
	+ improve set-window (actually swbuffer()) by initializing a window's
	  traits, e.g., position, from the buffer's traits.
	+ buffer.c (swbuffer_lfl):  Make sure window count gets decremented for
	  the window being replaced even if buffer we're replacing it with is
	  already on-screen (fixes a core dump in set-window, reported by Clark
	  Morgan).
	+ fileio.c (ffclose): Use mlwrite() instead of mlforce().
	+ edef.h (in_autocolor): New variable.
	+ display.c (mlerase, mlwrite):  Use in_autocolor to determine whether
	  or not to position the cursor on the message line.
	+ random.c (autocolor): Set autocolor as appropriate.
	+ macros/vileinit.rc, vile.hlp:  Revise so that autocolor timeouts are
	  in milliseconds.
	+ termio.c (ttgetc): Likewise.
	+ x11.c (x_start_autocolor_timer): Ditto.
	> Clark Morgan:
	+ ifdef'd autocolor mode and logic with OPT_COLOR to accommodate VMS,
	  which does not support syntax highlighting anyway.
	+ fix vmsbuild.com for the case of building xvile.exe with VAXC, adding
	  menu.obj to vms_link.opt _before_ the CRT.  That ensures that the
	  linker looks for menu.obj in the cwd, not in sys$library.
	> Tom Dickey:
	+ improve logic of repaint_window(), so it paints long chunks rather
	  than single characters.  This makes the screen paint properly when
	  switching to an Italic font.
	+ refine logic for gui_resize_in_progress in ntwinio.c so that it
	  only affects the case where a font-sizechange is in progress.
	  This restores the behavior of 8.3d, which allows a user to specify
	  $pagewid and $pagelen in vile.rc to control the initial screensize
	  (reported by George Young <gryoung@nortelnetworks.com>).
	+ add $brightness variable to winvile, allowing users to customize the
	  overall intensity of colors, to accommodate different monitors
	  (prompted by Chris Green <cgreen@x-1.net>).
	+ modify backspacelimit mode to allow backspacing through a newline
	  when nobackspacelimit is specified (request by Todd Moody
	  <tmoody@mailhost.sju.edu>).
	+ change Kevin's use of in_autocolor which suppresses message-output to
	  make that part of ~hidden behavior.
	+ remove elif/else clauses from m4mode "do" group, since they interfere
	  too much with balancing square brackets intermixed with parentheses.
	+ implement poll()-based watchfd/autocolor support.
	+ implement BeOS-specific watchfd/autocolor support, by rearranging
	  logic used for catnap(): beos_has_input(), beos_can_output() and
	  beos_napms().
	+ make repeat-count apply to @register commands.  This repeats the
	  entire command, and is not necessarily compatible with vi: some
	  implementations do not recognize a repeat count, and other, e.g.,
	  SVr3 repeat the last command in the register contents.  elvis does
	  the former, nvi does the latter, and vim repeats the entire string.
	  It's fortunate that the simpler implementation is more useful
	  (requested by Ed Henderson).
	+ modify vilefilt.l to recognize .vilemenu syntax.
	+ modify menu.c to allow double-quote as comment-marker.
	+ remove full-line behavior from goto-char command.
	+ correct behavior of "Clear Highlighting (below)" menu entry in sample
	  vilemenu.rc which did not clear the final line of a buffer.
	+ add some pointer checks to swbuffer(), getcol() and gocol(), so
	  piping to vile works properly when trying to initialize window's
	  traits.
	+ add a note about set-window to vile.hlp
	+ improve coloring of literals in vilefilt.l by interpreting strings
	  beginning with ^A, ^X or escape.
	+ modify c-filt.c show nested-comment as error.
	+ fix c-filt.c to highlight properly a number immediately after a
	  leading "#", to accommodate non-standard usage by GCC's preprocessor.

 (kev) 991214 (f)
	+ buffer.c (chg_buff, unchg_buff): Set the "recently changed"
	  flag for syntax coloring purposes.
	+ edef.h (autocolorhook): Declare.
	+ macros/vileinit.rc: Added example code for automatic syntax
	  coloring.
	+ main.c (global_val_init): Initialize VAL_AUTOCOLOR.
	+ modetbl (AUTOCOLOR): New mode.
	  (autocolor-hook): New hook.
	+ perl/shell.pl: Revised to use IO:Pty instead of Comm.pl (which
	  seems to be no longer maintained).
	+ proto.h (autocolor, ttwatchfd, ttunwatchfd): New declarations.
	+ random.c (run_a_hook): Return status from running the command
	  instead of unconditionally returning TRUE.
	  (autocolor): New function.
	+ statevar.c (var_AUTOCOLORHOOK): New function.
	+ tcap.c (term): Use ttwatchfd and ttunwatchfd instead of the
	  nullterm versions.
	+ termio.c (USE_SELECT): New alternative to USE_FCNTL and
	  USE_FIONREAD.  Preferred over both of these methods for
	  determining if there are new characters to be read from
	  the keyboard.
	  (watchfd_read_fds, watchfd_write_fds, watchfd_maxfd): New
	  static variables.
	  (ttwatchfd, ttunwatchfd): New functions.
	  (ttgetc): Added new USE_SELECT code for reading a character.
	  This new code also watches for activity on file descriptors
	  registered with watchfd() and will invoke the automatic
	  syntax coloring function, autocolor, as appropriate.
	+ vile.hlp: Documented new autocolor mechanism.
	+ x11.c (x_start_autocolor_timer, x_autocolor_timeout,
	  x_stop_autocolor_timer): New functions.
	  (x_getc): Call x_start_autocolor_timer and x_stop_autocolor_timer
	  as appropriate.
	  (x_key_press): Call x_start_autocolor_timer to reset the timer
	  on each keystroke.
	> patches by Tom Dickey:
	+ color continued comment-lines in makemode.
	+ correct c-filt.c parsing of numbers such as 0.0, from 9.0e rewrite.
	+ correct display of termcap numbers, which were highlighted as errors
	  after allowing '#' in capability-names.

 (tom) 991212 (e)
	+ improve c-filt.c's parsing of numbers to flag spuriously-repeated
	  suffixes as errors (request by Kevin Buettner).
	+ indent'd word.c, add a special case to avoid putting two spaces after
	  "i.e." or "e.g." to accommodate some European usage.
	+ add several perl5 keywords to perl.key (listed by <abigail@delanet.com>)
	+ remove "unsetl view" logic from :f command, since it is an obscure
	  and not desirable side-effect.  Appeared in filename() and
	  commdlg_save_file() (reported by Clark Morgan).
	+ modify HighlightFilter to check if user is trying to run this with
	  winvile w/o w32pipes set.  That combination does not work, so don't
	  try it.
	+ update CF_ANSI_CC_CHECK to match that in tin, which now uses -Ae
	  option for HPUX (patch by Urs Jansen).
	+ modify config.sub to recognize ia64 machine (patch by Kevin Buettner).
	+ allow '_' and '.' in terminfo aliases.
	+ correct a file-descriptor leak in npflush for win32, which showed up
	  as undeleted temp-files.  This would happen when opening read/write
	  pipes, e.g., for syntax filtering, when now32pipe was specified.
	+ remove obsolete/unused Win31 ifdef's (reported by Clark Morgan).
	> patch by Clark Morgan:
	+ changed the VMS build document (README.VMS) to specify exclusive use
	  of vmsbuild.com rather than MMS directly.
	+ changed vmsbuild.com to accept a compiler specification on the
	  command line, which is much more convenient than editing the build
	  script by hand.  compiler defaults to VAXC on Vax hosts and DECC on
	  Alpha hosts.

 (tom) 991209 (d)
	+ implement "before" and "after" qualifiers for majormodes.
	+ add C++ majormode cppmode,
	+ change prompt for majormode in procedure parameter lists to allow
	  mixed case.
	+ add ".table" and ".default" to filter interpreter.
	+ add a syntax filter for vile's .key files, use that to fix some
	  errors in make.key, tcl.key .
	+ add a syntax filter for Lynx config file.
	+ add '_' to URL patterns, used in txt and mail filters.
	+ corrected DSTRINGS definition in awk syntax filter, which did not
	  handle quoted backslash.
	+ allow '+' in alias in termcap syntax filter.
	+ add variable $error-buffer, use this in manpage.rc to avoid losing
	  the setting when creating a manpage buffer.
	+ add error-patterns for ncurses tic and atac.
	+ implement ".merge" in filter keyword files, needed for C and HTML
	  filters.
	+ improve C syntax filter:
	  + marking misspelled preprocessor keywords as an error.
	  + marking numbers run-on to names as an error,
	  + marking unexpected escapes as an error,
	+ minor fixes of ifdef's for glob_match_leaf(), for building with
	  configure --disable-extensions.
	> patches by Clark Morgan:
	+ add the Win32 common dialog "save as" feature to both console
	  vile and winvile.
	+ update vile.hlp was updated to reflect recent
	  questions about macros.doc
	+ split-out the win32 command-specific code (e.g., winopen, winsave,
	  etc) from w32misc.c to a new file called w32cmd.c
	+ add a note about obscure "unsetl view" side-effect of the :f command
	+ add special case to expand_wild_args() for VMS to handle +/string
	  syntax.
	+ update README.VMS for building xvile
	+ fix for VAXC to include icons/vile.xbm

 (tom) 991202 (c)
	+ modified vmsbuild.com and descrip.mms (untested) to build the Motif
	  version with menus, the X toolkit version without (based on discussion
	  with Clark Morgan and Jonathan Ridler).
	+ fix ttclean() function for xvile on VMS (Clark Morgan, from problem
	  report by Jonathan Ridler <JONATHAN@rubens.its.unimelb.edu.au>).
	+ add .Xdefaults to xresmode.
	+ add backslashes as needed to digraph.rc, to work with the new single
	  quote interpretation (reported by Paul Fox).
	+ correct a place where expression evaluation result was overwritten
	  with the nested result in a complex expression from 8.3d (reported
	  by George Eccles).
	+ highlight whitespace in makefiles between backspace and newline as
	  an error.
	+ define "Error" class for syntax filters.
	+ correct make filter's handling of escaped newline: '.' does not match
	  newline.

 (tom) 991127 (b)
	+ add "case" and "do" groups to m4mode.
	+ add ".ms" and ".me" suffixes for nrmode.
	+ add ``quote'' quoting to txt filter.
	+ refine treatment of double-quote in txt filter so it can be quoted
	  by single-quote or parenthesis.
	+ allow "~" in URL patterns for txt and mail filters, omitted in 9.0a.
	+ correct some missing backslashes before vertical bar and parentheses
	  in filters.rc, made apparent by the change to use single-quoted
	  strings.
	+ restore handling of special control characters such as ^D, ^T in
	  insert mode which happened to be GOAL or MOTION commands (reported by
	  Clark Morgan).

 (tom) 991124 (a)
	+ add single-quoted strings, which eliminate the need for escaping
	  backslash (suggested by Paul Fox).
	+ modify logic in ins_any_time() to interpret control characters which
	  are bound to GOAL or MOTION commands rather than inserting them
	  without quoting.  This allows ^E and ^Y as commands within an insert
	  (request by Quang Ngo <quang@usa.net>).
	+ change several commands to use GOAL flag, which tells vile that they
	  may move to a new line, but try to keep the column constant.  Doing
	  this has the side-effect that they are usable in quoted-motion:
	  grow-window, move-next-window-down, move-next-window-up,
	  position-window (z), redraw-display, scroll-next-window-down,
	  scroll-next-window-up and shrink-window, as well as api_motion().
	+ modify quoted-motion so that commands with the GOAL flag are allowed,
	  since those do not change the buffer contents.
	+ change handling of status return from readpattern() so that an abort
	  is passed up to the caller.  In execute-named-procedure, check for
	  abort, and restore DOT to the value before evaluating addresses
	  (reported by Clark Morgan).
	+ correct bug in wrapmargin/fillcol logic which did not split a line
	  when a newline was inserted into a string containing no blanks
	  after the fillcol position.  Instead, an empty line was inserted
	  (reported by Clark Morgan).
	+ correct missing allocation of default help-string for user-defined
	  procedures, which could cause core dump if a procedure were redefined,
	  e.g., by source'ing .vilerc (reported by Paul Fox).
	+ add tags syntax filter and majormode tagsmode.
	+ add X resource syntax filter and majormode xresmode.
	+ improve URL pattern in mail and txt filters, to allow it to match
	  ftp and other URL types, as well as limited the pattern to avoid
	  picking up things like trailing '>' characters.
	+ correct some syntax filters' expressions for REAL, which were
	  expecting two digits after the decimal point, rather one.
	> patches by Clark Morgan:
	+ enable "kill-buffer <wildcard-expr>" on VMS.
	+ fix to allow accessing multiple versions of DECNET-based files.
	  That is, this now works:
		$ vile node::dir:log.txt;*       <- open all copies of log.txt
	+ eliminate stray cursor glyphs in the message buffer (most often
	  happens when a Win32 dialog is dismissed at the "same time" that a
	  winvile command writes status text).

This change log started on Friday Nov 19, 1999.
